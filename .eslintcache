pascal-app-features
[{"C:\\Users\\Pascal Ojinnaka\\Documents\\React\\human-resource-mgt-responsive\\src\\index.js":"1","C:\\Users\\Pascal Ojinnaka\\Documents\\React\\human-resource-mgt-responsive\\src\\store.js":"2","C:\\Users\\Pascal Ojinnaka\\Documents\\React\\human-resource-mgt-responsive\\src\\App.js":"3","C:\\Users\\Pascal Ojinnaka\\Documents\\React\\human-resource-mgt-responsive\\src\\reportWebVitals.js":"4","C:\\Users\\Pascal Ojinnaka\\Documents\\React\\human-resource-mgt-responsive\\src\\reducers\\userReducers.js":"5","C:\\Users\\Pascal Ojinnaka\\Documents\\React\\human-resource-mgt-responsive\\src\\reducers\\profileReducers.js":"6","C:\\Users\\Pascal Ojinnaka\\Documents\\React\\human-resource-mgt-responsive\\src\\reducers\\nextOfKinReducer.js":"7","C:\\Users\\Pascal Ojinnaka\\Documents\\React\\human-resource-mgt-responsive\\src\\reducers\\educationReducers.js":"8","C:\\Users\\Pascal Ojinnaka\\Documents\\React\\human-resource-mgt-responsive\\src\\screens\\LoginScreen.js":"9","C:\\Users\\Pascal Ojinnaka\\Documents\\React\\human-resource-mgt-responsive\\src\\screens\\DashboardScreen.js":"10","C:\\Users\\Pascal Ojinnaka\\Documents\\React\\human-resource-mgt-responsive\\src\\screens\\PasswordScreen.js":"11","C:\\Users\\Pascal Ojinnaka\\Documents\\React\\human-resource-mgt-responsive\\src\\screens\\StaffListScreen.js":"12","C:\\Users\\Pascal Ojinnaka\\Documents\\React\\human-resource-mgt-responsive\\src\\screens\\StaffCreateScreen.js":"13","C:\\Users\\Pascal Ojinnaka\\Documents\\React\\human-resource-mgt-responsive\\src\\screens\\StaffEditScreen.js":"14","C:\\Users\\Pascal Ojinnaka\\Documents\\React\\human-resource-mgt-responsive\\src\\screens\\HomeScreen.js":"15","C:\\Users\\Pascal Ojinnaka\\Documents\\React\\human-resource-mgt-responsive\\src\\screens\\RoleEditScreen.js":"16","C:\\Users\\Pascal Ojinnaka\\Documents\\React\\human-resource-mgt-responsive\\src\\screens\\ProfileScreen.js":"17","C:\\Users\\Pascal Ojinnaka\\Documents\\React\\human-resource-mgt-responsive\\src\\screens\\NextOfKinScreen.js":"18","C:\\Users\\Pascal Ojinnaka\\Documents\\React\\human-resource-mgt-responsive\\src\\screens\\EducationScreen.js":"19","C:\\Users\\Pascal Ojinnaka\\Documents\\React\\human-resource-mgt-responsive\\src\\screens\\HrHomeScreen.js":"20","C:\\Users\\Pascal Ojinnaka\\Documents\\React\\human-resource-mgt-responsive\\src\\screens\\AdminProfileScreen.js":"21","C:\\Users\\Pascal Ojinnaka\\Documents\\React\\human-resource-mgt-responsive\\src\\screens\\AdminNextOfKinScreen.js":"22","C:\\Users\\Pascal Ojinnaka\\Documents\\React\\human-resource-mgt-responsive\\src\\screens\\AdminEducationScreen.js":"23","C:\\Users\\Pascal Ojinnaka\\Documents\\React\\human-resource-mgt-responsive\\src\\screens\\MyLeaveApplicationScreen.js":"24","C:\\Users\\Pascal Ojinnaka\\Documents\\React\\human-resource-mgt-responsive\\src\\screens\\ForgotPasswordScreen.js":"25","C:\\Users\\Pascal Ojinnaka\\Documents\\React\\human-resource-mgt-responsive\\src\\constants\\profileConstants.js":"26","C:\\Users\\Pascal Ojinnaka\\Documents\\React\\human-resource-mgt-responsive\\src\\constants\\educationConstants.js":"27","C:\\Users\\Pascal Ojinnaka\\Documents\\React\\human-resource-mgt-responsive\\src\\constants\\nextOfKinConstants.js":"28","C:\\Users\\Pascal Ojinnaka\\Documents\\React\\human-resource-mgt-responsive\\src\\constants\\userConstants.js":"29","C:\\Users\\Pascal Ojinnaka\\Documents\\React\\human-resource-mgt-responsive\\src\\components\\Message.js":"30","C:\\Users\\Pascal Ojinnaka\\Documents\\React\\human-resource-mgt-responsive\\src\\components\\Loader.js":"31","C:\\Users\\Pascal Ojinnaka\\Documents\\React\\human-resource-mgt-responsive\\src\\components\\SearchBox.js":"32","C:\\Users\\Pascal Ojinnaka\\Documents\\React\\human-resource-mgt-responsive\\src\\components\\Paginate.js":"33","C:\\Users\\Pascal Ojinnaka\\Documents\\React\\human-resource-mgt-responsive\\src\\components\\Header.js":"34","C:\\Users\\Pascal Ojinnaka\\Documents\\React\\human-resource-mgt-responsive\\src\\components\\FixedNavbar.js":"35","C:\\Users\\Pascal Ojinnaka\\Documents\\React\\human-resource-mgt-responsive\\src\\components\\AdminHeader.js":"36","C:\\Users\\Pascal Ojinnaka\\Documents\\React\\human-resource-mgt-responsive\\src\\actions\\userActions.js":"37","C:\\Users\\Pascal Ojinnaka\\Documents\\React\\human-resource-mgt-responsive\\src\\actions\\nextOfKinActions.js":"38","C:\\Users\\Pascal Ojinnaka\\Documents\\React\\human-resource-mgt-responsive\\src\\actions\\profileActions.js":"39","C:\\Users\\Pascal Ojinnaka\\Documents\\React\\human-resource-mgt-responsive\\src\\actions\\educationActions.js":"40","C:\\Users\\Pascal Ojinnaka\\Documents\\React\\human-resource-mgt-responsive\\src\\shared\\baseUrl.js":"41","C:\\Users\\Pascal Ojinnaka\\Documents\\React\\human-resource-mgt-responsive\\src\\screens\\ResetPasswordScreen.js":"42"},{"size":594,"mtime":1613556804332,"results":"43","hashOfConfig":"44"},{"size":2574,"mtime":1613658182275,"results":"45","hashOfConfig":"44"},{"size":2786,"mtime":1613643609412,"results":"46","hashOfConfig":"44"},{"size":362,"mtime":1613556804356,"results":"47","hashOfConfig":"44"},{"size":6459,"mtime":1613661086049,"results":"48","hashOfConfig":"44"},{"size":3106,"mtime":1613556804348,"results":"49","hashOfConfig":"44"},{"size":2969,"mtime":1613556804340,"results":"50","hashOfConfig":"44"},{"size":3207,"mtime":1613556804340,"results":"51","hashOfConfig":"44"},{"size":3588,"mtime":1613656601285,"results":"52","hashOfConfig":"44"},{"size":7415,"mtime":1613556804388,"results":"53","hashOfConfig":"44"},{"size":6513,"mtime":1613556804404,"results":"54","hashOfConfig":"44"},{"size":5164,"mtime":1613556804412,"results":"55","hashOfConfig":"44"},{"size":9581,"mtime":1613556804412,"results":"56","hashOfConfig":"44"},{"size":10317,"mtime":1613559540354,"results":"57","hashOfConfig":"44"},{"size":5402,"mtime":1613556804396,"results":"58","hashOfConfig":"44"},{"size":7989,"mtime":1613559565545,"results":"59","hashOfConfig":"44"},{"size":19369,"mtime":1613556804404,"results":"60","hashOfConfig":"44"},{"size":10540,"mtime":1613556804404,"results":"61","hashOfConfig":"44"},{"size":8504,"mtime":1613556804388,"results":"62","hashOfConfig":"44"},{"size":2668,"mtime":1613556804396,"results":"63","hashOfConfig":"44"},{"size":20941,"mtime":1613556804388,"results":"64","hashOfConfig":"44"},{"size":11990,"mtime":1613556804364,"results":"65","hashOfConfig":"44"},{"size":11452,"mtime":1613556804356,"results":"66","hashOfConfig":"44"},{"size":1093,"mtime":1613556804396,"results":"67","hashOfConfig":"44"},{"size":3970,"mtime":1613658836774,"results":"68","hashOfConfig":"44"},{"size":1374,"mtime":1613556804268,"results":"69","hashOfConfig":"44"},{"size":1455,"mtime":1613556804221,"results":"70","hashOfConfig":"44"},{"size":1214,"mtime":1613556804221,"results":"71","hashOfConfig":"44"},{"size":2648,"mtime":1613657929173,"results":"72","hashOfConfig":"44"},{"size":279,"mtime":1613556804221,"results":"73","hashOfConfig":"44"},{"size":482,"mtime":1613556804213,"results":"74","hashOfConfig":"44"},{"size":863,"mtime":1613556804221,"results":"75","hashOfConfig":"44"},{"size":744,"mtime":1613556804221,"results":"76","hashOfConfig":"44"},{"size":6119,"mtime":1613556804213,"results":"77","hashOfConfig":"44"},{"size":2797,"mtime":1613556804213,"results":"78","hashOfConfig":"44"},{"size":4866,"mtime":1613556804149,"results":"79","hashOfConfig":"44"},{"size":11579,"mtime":1613661249568,"results":"80","hashOfConfig":"44"},{"size":4725,"mtime":1613556804101,"results":"81","hashOfConfig":"44"},{"size":4808,"mtime":1613556804101,"results":"82","hashOfConfig":"44"},{"size":4905,"mtime":1613556804093,"results":"83","hashOfConfig":"44"},{"size":62,"mtime":1613556804420,"results":"84","hashOfConfig":"44"},{"size":4348,"mtime":1613661275285,"results":"85","hashOfConfig":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"bn2znh",{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"88"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"88"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"88"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"88"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"88"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"88"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"88"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"88"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"88"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"88"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"88"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"88"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"88"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"88"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"88"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"88"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Pascal Ojinnaka\\Documents\\React\\human-resource-mgt-responsive\\src\\index.js",[],["187","188"],"C:\\Users\\Pascal Ojinnaka\\Documents\\React\\human-resource-mgt-responsive\\src\\store.js",[],"C:\\Users\\Pascal Ojinnaka\\Documents\\React\\human-resource-mgt-responsive\\src\\App.js",[],"C:\\Users\\Pascal Ojinnaka\\Documents\\React\\human-resource-mgt-responsive\\src\\reportWebVitals.js",[],"C:\\Users\\Pascal Ojinnaka\\Documents\\React\\human-resource-mgt-responsive\\src\\reducers\\userReducers.js",[],"C:\\Users\\Pascal Ojinnaka\\Documents\\React\\human-resource-mgt-responsive\\src\\reducers\\profileReducers.js",[],"C:\\Users\\Pascal Ojinnaka\\Documents\\React\\human-resource-mgt-responsive\\src\\reducers\\nextOfKinReducer.js",[],"C:\\Users\\Pascal Ojinnaka\\Documents\\React\\human-resource-mgt-responsive\\src\\reducers\\educationReducers.js",[],"C:\\Users\\Pascal Ojinnaka\\Documents\\React\\human-resource-mgt-responsive\\src\\screens\\LoginScreen.js",["189","190","191"],"import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { ScaleLoader } from 'react-spinners'\nimport Message from '../components/Message'\nimport { Container, Row, Col, Form, Button } from 'react-bootstrap';\nimport LoginImg from '../img/call-center.jpg';\nimport Logo from '../img/outcess-logo.png';\nimport '../styles/LoginScreen.css';\nimport { login } from '../actions/userActions'\nimport { css } from '@emotion/css'\nimport { USER_FORGOT_PASSWORD_RESET } from '../constants/userConstants';\n\n\n//Can be a string as well. Need to ensure each key-value pair ends with ;\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n`;\n\nconst LoginTestScreen = ({ history }) => {\n\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n\n    const dispatch = useDispatch()\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { loading, error, userInfo } = userLogin\n\n    \n    \n    useEffect(() => {\n        if(userInfo) {\n          \n            history.push('/home')\n        } else {\n          dispatch({\n            type: USER_FORGOT_PASSWORD_RESET\n          })\n        }\n    }, [history, userInfo])\n    \n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(login(email, password))\n    }\n  return (\n    <div className=\"loginpage-wrapper\">\n      <Container className='loginpage-container'>\n        <Row>\n          <Col className='d-none d-lg-block col-xs-none col-lg-6'>\n            <div className='login-img'>\n              <img src={LoginImg}/>\n            </div>\n          </Col>\n          <Col className='loginform-col col-xs-12 col-lg-6'>\n            <div className='logo'>\n              <img src={Logo}/>\n            </div>\n            {error && <Message variant='danger'>{error}</Message>}\n            <Form onSubmit={submitHandler}>\n              <Form.Group className='form-group email' controlId=\"formBasicEmail\">\n                <i class=\"fas fa-user pr-3\"></i>\n                <Form.Label className='login-label'>Email address</Form.Label>\n                <Form.Control \n                    autoFocus \n                    type=\"email\" \n                    value={email}\n                    onChange={(e) => setEmail(e.target.value)}\n                    placeholder=\"Enter email\" />\n              </Form.Group>\n\n              <Form.Group className='form-group password' controlId=\"formBasicPassword\">\n                <i class=\"fas fa-unlock pr-3\"></i>\n                <Form.Label className='login-label'>Password</Form.Label>\n                <Form.Control \n                    type=\"password\" \n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)}\n                    placeholder=\"Password\" />\n              </Form.Group>\n              <Button type='submit' variant='primary' className='btn btn-block'>\n                    Sign In\n                </Button>\n                <Link to='/forgotpassword' className='forget-password'>\n                    <p>Forgot password?</p>\n                </Link>\n            </Form>\n            <div className=\"loading\">\n              {loading &&\n                <ScaleLoader\n                css={override}\n                sizeUnit={\"px\"}\n                size={150}\n                color={\"#123abc\"}\n                loading={loading}\n                />\n              }\n              \n            </div>\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n}\n\nexport default LoginTestScreen;","C:\\Users\\Pascal Ojinnaka\\Documents\\React\\human-resource-mgt-responsive\\src\\screens\\DashboardScreen.js",["192","193","194","195"],"import React, { useEffect, useState } from 'react'\nimport { Row, Col, Button, Form, ListGroup } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\nimport FixedNavbar from '../components/FixedNavbar';\nimport '../styles/ProfileScreen.css';\nimport Header from '../components/Header';\n\nconst DashboardScreen = ({ history }) => {\n    const [firstname, setFirstname] = useState('')\n    const [middlename, setMiddlename] = useState('')\n    const [lastname, setLastname] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n    const [message, setMessage] = useState(null)\n\n   \n    const [employeeCode, setEmployeeCode] = useState('')\n   \n    \n    const [department, setDepartment] = useState('')\n\n\n    const dispatch = useDispatch()\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const userDetails = useSelector(state => state.userDetails)\n    const { loading, error, user } = userDetails\n\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\n    const { success } = userUpdateProfile\n\n\n    useEffect(() => {\n\n        if(!userInfo) {\n            history.push('/')\n        } else {\n           if(success) {\n               dispatch({\n                   type: USER_UPDATE_PROFILE_RESET\n               })\n               history.push('/')\n           } else {\n            if(!user || !user.firstname) {\n                dispatch(getUserDetails('me'))\n            } else {\n                setFirstname(user.firstname)\n                setLastname(user.lastname)\n                setMiddlename(user.middlename)\n             \n               \n                setDepartment(user.department)\n               \n                setEmployeeCode(user.employeeCode)\n\n            }\n        }\n        }\n        \n    }, [dispatch, history, user, success, userInfo])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        if(password !== confirmPassword) {\n            setMessage('Passwords do not match')\n        } else {\n        dispatch(updateUserProfile({\n            _id: user._id,\n            firstname,\n            lastname,\n            password,\n            middlename,\n           \n          \n        }))\n         }\n        \n    }\n\n    return (\n        <>\n            <Row className='ml-4 mr-4 py-4 profilescreen-wrapper'>\n            <Col md={3} className='d-none d-md-block'>\n                <FixedNavbar />\n            </Col>\n            <Col className='col-xs-12 col-md-8'>\n                <Header />\n                <h1>Personal Details</h1>\n                {message && <Message variant='danger'>{message}</Message>}\n                {error && <Message variant='danger'>{error}</Message>}\n                {success && <Message variant='success'>Profile Updated</Message>}\n              \n                <Form onSubmit={submitHandler}>\n                    <Form.Row>\n                        <Form.Group  className=\"col-md-4\" controlId='firstname'>\n                            <Form.Label>First Name</Form.Label>\n                            <Form.Control \n                            type='firstname' \n                           \n                            placeholder='Enter First name'\n                            value={firstname}\n                            onChange={(e) => setFirstname(e.target.value)}\n                            ></Form.Control>\n                        </Form.Group>\n                        <Form.Group  className=\"col-md-4\" controlId='middlename'>\n                            <Form.Label>Middle Name</Form.Label>\n                            <Form.Control \n                            type='middlename' \n                            \n                            placeholder='Enter Middle name'\n                            value={middlename}\n                            onChange={(e) => setMiddlename(e.target.value)}\n                            ></Form.Control>\n                        </Form.Group>\n                        <Form.Group  className=\"col-md-4\" controlId='lastname'>\n                            <Form.Label>Last Name</Form.Label>\n                            <Form.Control \n                            type='lastname' \n                            \n                            placeholder='Enter Last name'\n                            value={lastname}\n                            onChange={(e) => setLastname(e.target.value)}\n                            ></Form.Control>\n                        </Form.Group>\n                        \n                  \n                        \n                    </Form.Row>\n                    <Form.Row>\n                        <Form.Group  className=\"col-md-6\" controlId='department'>\n                            <Form.Label>Department</Form.Label>\n                            <Form.Control \n                            type='department' \n                           readOnly\n                            placeholder='Enter Department'\n                            value={department}\n                            onChange={(e) => setDepartment(e.target.value)}\n                            ></Form.Control>\n                        </Form.Group>\n                        <Form.Group  className=\"col-md-6\" controlId='employeeCode'>\n                            <Form.Label>Employee Code</Form.Label>\n                            <Form.Control \n                            type='employeeCode' \n                            readOnly\n                            placeholder='Enter Employee Code'\n                            value={employeeCode}\n                            onChange={(e) => setEmployeeCode(e.target.value)}\n                            ></Form.Control>\n                        </Form.Group>\n                      \n                  \n                        \n                    </Form.Row>\n                    <Form.Row>\n                    <Form.Group className=\"col-md-6\" controlId='password'>\n                        <Form.Label>New Password</Form.Label>\n                        <Form.Control \n                        type='password' \n                        placeholder='Enter Password'\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                        ></Form.Control>\n                    </Form.Group>\n                    <Form.Group className=\"col-md-6\" controlId='confirrmPassword'>\n                        <Form.Label>Confirm Password</Form.Label>\n                        <Form.Control \n                        type='password' \n                        placeholder='Confirm Password'\n                        value={confirmPassword}\n                        onChange={(e) => setConfirmPassword(e.target.value)}\n                        ></Form.Control>\n                    </Form.Group>\n                    </Form.Row>\n                   \n                    <Button type='submit' variant='primary' className='btn-block'>\n                        Update\n                    </Button>\n                </Form>\n                \n            </Col>\n            \n        </Row>\n        </>\n    )\n}\n\nexport default DashboardScreen;\n","C:\\Users\\Pascal Ojinnaka\\Documents\\React\\human-resource-mgt-responsive\\src\\screens\\PasswordScreen.js",["196","197"],"import React, { useState, useEffect } from 'react'\nimport { Form, Button, Row, Col, ListGroup, Toast, Nav } from 'react-bootstrap'\nimport { Link, NavLink} from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport { updateUserPassword } from '../actions/userActions'\nimport { USER_UPDATE_PASSWORD_RESET } from '../constants/userConstants';\nimport '../styles/FixedNavbar.css';\nimport Header from '../components/Header';\nimport '../styles/ProfileScreen.css';\n\n\nconst PasswordScreen = ({ history }) => {\n    const [currentPassword, setCurrentPassword] = useState('')\n    const [newPassword, setNewPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n    const [message, setMessage] = useState(null)\n    const [show, setShow] = useState(false)\n\n    const dispatch = useDispatch()\n\n    const userUpdatePassword = useSelector(state => state.userUpdatePassword)\n    const { error, success } = userUpdatePassword\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    useEffect(() => {\n        if(!userInfo) {\n            history.push('/login')\n        } else {\n            if(success) {\n                dispatch({\n                    type: USER_UPDATE_PASSWORD_RESET\n                })\n                history.push('/home')\n            }\n        }\n    }, [dispatch, success, history, userInfo])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        if(newPassword !== confirmPassword) {\n            setMessage('Passwords do not match')\n        } else {\n            //Dispatch\n            dispatch(updateUserPassword({\n                currentPassword,\n                newPassword\n            }))\n            //setShow(true)\n        }\n        \n        \n    }\n\n    return (\n        <>\n        <Row>\n        <Col xs={6}>\n        <Toast onClose={() => setShow(false)} show={show} delay={3000} autohide>\n          <Toast.Header>\n            <img\n              src=\"holder.js/20x20?text=%20\"\n              className=\"rounded mr-2\"\n              alt=\"\"\n            />\n            <strong className=\"mr-auto\">Password Update</strong>\n            <small>1 mins ago</small>\n          </Toast.Header>\n          <Toast.Body>Your Password has been updated!</Toast.Body>\n        </Toast>\n         </Col>\n         </Row>\n        <Row className='ml-4 mr-4 py-4 profilescreen-wrapper'>\n        \n        <Col md={3}>\n        <div className=\"fixednavbar-wrapper\">\n      <div className='employee-details'>\n        <p>{userInfo.role}</p>\n        <p>{userInfo.email}</p>\n      </div>\n            <Nav className=\"flex-column\">\n            <NavLink to='/home' exact className=\"nav-link\" activeClassName='active-here'>\n          <i class=\"fas fa-home pr-4\"></i>\n          Home\n        </NavLink>\n        <NavLink to='/dashboard' exact className=\"nav-link\" activeClassName='active-here'>\n          <i class=\"far fa-id-card pr-4\"></i>\n          Personal details\n        </NavLink>\n        <NavLink to='/updatepassword' exact className=\"nav-link\" activeClassName='active-here'>\n        <i class=\"fas fa-unlock pr-4\"></i>\n          Update Password\n        </NavLink>\n        <NavLink to='/dashboard' exact className=\"nav-link\" activeClassName='active-here'>\n          <i class=\"fas fa-graduation-cap pr-4\"></i>\n          Education\n        </NavLink>\n        <NavLink to='/myleave' exact className=\"nav-link\" activeClassName='active-here'>\n          <i class=\"fas fa-sign-out-alt pr-4\"></i>\n          My Leave\n        </NavLink>\n                {\n                    (userInfo.role === 'hr') && (\n                        <>\n                        <div className='admin-section'>\n            <p>Admin Section</p>\n          </div>\n          <NavLink to='/myleave' exact className=\"nav-link\" activeClassName='active-here'>\n            <i class=\"fas fa-box-open pr-4\"></i>\n            Leave Applications\n          </NavLink>\n          <NavLink to='/admin/userlist' exact className=\"nav-link\" activeClassName='active-here'>\n            <i class=\"fas fa-users pr-4\"></i>\n            All Employees\n          </NavLink>\n          <NavLink to='/admin/register' exact className=\"nav-link\" activeClassName='active-here'>\n            <i class=\"fas fa-user-plus pr-4\"></i>\n            Register Employee\n          </NavLink>\n                        </>\n                    )\n                }\n            </Nav>\n            </div>\n            </Col>\n            <Col md={8}>\n                <Header />\n                <h1 className='page-header'>Update Password</h1>\n                {message && <Message variant='danger'>{message}</Message>}\n                {error && <Message variant='danger'>{error}</Message>}\n                {success && <Message variant='success'>Password Updated</Message>}\n               \n                <Form onSubmit={submitHandler}>\n                    <Form.Group controlId='crrentPassword'>\n                        <Form.Label>Current Password</Form.Label>\n                        <Form.Control \n                        type='password' \n                        placeholder='Enter Password'\n                        value={currentPassword}\n                        onChange={(e) => setCurrentPassword(e.target.value)}\n                        ></Form.Control>\n                    </Form.Group>\n                    \n                    <Form.Group controlId='newpassword'>\n                        <Form.Label>New Password</Form.Label>\n                        <Form.Control \n                        type='password' \n                        placeholder='Enter New Password'\n                        value={newPassword}\n                        onChange={(e) => setNewPassword(e.target.value)}\n                        ></Form.Control>\n                    </Form.Group>\n                    <Form.Group controlId='confirrmPassword'>\n                        <Form.Label>Confirm Password</Form.Label>\n                        <Form.Control \n                        type='password' \n                        placeholder='Confirm Password'\n                        value={confirmPassword}\n                        onChange={(e) => setConfirmPassword(e.target.value)}\n                        ></Form.Control>\n                    </Form.Group>\n                    <Button type='submit' variant='primary'>\n                        Update\n                    </Button>\n                </Form>\n            </Col>\n            \n        </Row>\n        </>\n    )\n}\n\nexport default PasswordScreen\n","C:\\Users\\Pascal Ojinnaka\\Documents\\React\\human-resource-mgt-responsive\\src\\screens\\StaffListScreen.js",[],"C:\\Users\\Pascal Ojinnaka\\Documents\\React\\human-resource-mgt-responsive\\src\\screens\\StaffCreateScreen.js",["198","199"],"import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col, ListGroup } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { listUsers, register } from '../actions/userActions';\nimport { USER_REGISTER_RESET } from '../constants/userConstants';\nimport FixedNavbar from '../components/FixedNavbar';\nimport '../styles/StaffCreateScreen.css';\nimport Header from '../components/Header';\n\nconst StaffCreateScreen = ({ history }) => {\n    const [firstname, setFirstname] = useState('')\n    const [middlename, setMiddlename] = useState('')\n    const [lastname, setLastname] = useState('')\n    const [email, setEmail] = useState('')\n    const [department, setDepartment] = useState('')\n    const [employeeCode, setEmployeeCode] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n    const [role, setRole] = useState('')\n    \n    const [message, setMessage] = useState(null)\n    const dispatch = useDispatch()\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const userRegister = useSelector(state => state.userRegister)\n    const { loading, error, success:successRegister } = userRegister\n\n    useEffect(() => {\n        if (userInfo  && (userInfo.role === 'hr' || userInfo.role === 'hr-manager' || userInfo.role === 'admin')) {\n           \n            if(successRegister) {\n                dispatch({\n                    type: USER_REGISTER_RESET\n                })\n                history.push('/admin/userlist')\n            }\n        } else {\n            history.push('/')\n        }\n        \n    }, [dispatch, history, userInfo, successRegister])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        if(password !== confirmPassword) {\n            setMessage('Passwords do not match')\n        } else {\n            dispatch(register(\n                firstname,\n                middlename,\n                lastname,\n                email,\n                department,\n                employeeCode,\n                role,\n                password\n            ))\n            dispatch(listUsers())\n            history.push('/admin/userlist')\n        }\n        \n    }\n\n  return (\n    <>\n    \t<Row className='ml-4 mr-4 py-4 profilescreen-wrapper'>\n        <Col md={3} className='d-none d-md-block'>\n            <FixedNavbar />\n        </Col>\n        <Col className='col-xs-12 col-md-8'>\n                <Header />\n                <h1 className='page-header'>Register a New Employee</h1>\n                {message && <Message variant='danger'>{message}</Message>}\n                {error && <Message variant='danger'>{error}</Message>}\n                {successRegister && <Message variant='success'>Profile Created</Message>}\n                {loading && <Loader />}\n                <Form onSubmit={submitHandler}>\n                    <Form.Row>\n                        <Form.Group  className=\"col-md-4\" controlId='firstname'>\n                            <Form.Label>First Name</Form.Label>\n                            <Form.Control \n                            type='firstname' \n                           \n                            placeholder='Enter First name'\n                            value={firstname}\n                            onChange={(e) => setFirstname(e.target.value)}\n                            ></Form.Control>\n                        </Form.Group>\n                        <Form.Group  className=\"col-md-4\" controlId='middlename'>\n                            <Form.Label>Middle Name</Form.Label>\n                            <Form.Control \n                            type='middlename' \n                            \n                            placeholder='Enter Middle name'\n                            value={middlename}\n                            onChange={(e) => setMiddlename(e.target.value)}\n                            ></Form.Control>\n                        </Form.Group>\n                        <Form.Group  className=\"col-md-4\" controlId='lastname'>\n                            <Form.Label>Last Name</Form.Label>\n                            <Form.Control \n                            type='lastname' \n                            \n                            placeholder='Enter Last name'\n                            value={lastname}\n                            onChange={(e) => setLastname(e.target.value)}\n                            ></Form.Control>\n                        </Form.Group>\n                    </Form.Row>\n                    <Form.Row>\n                        <Form.Group  className=\"col-md-4\" controlId='email'>\n                            <Form.Label>Email Address</Form.Label>\n                            <Form.Control \n                            type='email' \n                            placeholder='Enter Email'\n                            value={email}\n                            onChange={(e) => setEmail(e.target.value)}\n                           \n                            ></Form.Control>\n                        </Form.Group>\n                        <Form.Group className=\"col-md-4\" controlId=\"formGridDepartment\">\n                            <Form.Label>Department</Form.Label>\n                            <Form.Control \n                            as=\"select\" \n                            size='sm'\n                            value={department}\n                            onChange={(e) => setDepartment(e.target.value)}>\n                                <option value=''>Select...</option>\n                                <option value='IT'>IT</option>\n                                <option value='PROJECT'>PROJECT</option>\n                                <option value='HR'>HR</option>\n                                <option value='MIS'>MIS</option>\n                                <option value='QUALITY-ASSURANCE'>QUALITY-ASSURANCE</option>\n                                <option value='TRAINING'>TRAINING</option>\n                                <option value='ADMIN'>ADMIN</option>\n                                <option value='OUTCESS'>OUTCESS</option>\n                            </Form.Control>\n                        </Form.Group>\n                        <Form.Group  className=\"col-md-4\" controlId='employeeCode'>\n                            <Form.Label>Employee Code</Form.Label>\n                            <Form.Control \n                            type='employeeCode' \n                            placeholder='Enter Employee Code'\n                            value={employeeCode}\n                            onChange={(e) => setEmployeeCode(e.target.value)}\n                            ></Form.Control>\n                        </Form.Group>\n                        \n                    </Form.Row>\n                    <Form.Row>\n                        <Form.Group className=\"col-md-4\" controlId=\"formGridRole\">\n                            <Form.Label>Role</Form.Label>\n                            <Form.Control \n                            as=\"select\" \n                            size='sm'\n                            value={role}\n                            onChange={(e) => setRole(e.target.value)}>\n                                <option value=''>Select...</option>\n                                <option value='hr'>HR</option>\n                                <option value='employee'>EMPLOYEE</option>\n                                <option value='supervisor'>SUPERVISOR</option>\n                                <option value='admin'>ADMIN</option>\n                                <option value='hr-manager'>HR-MANAGER</option>\n                                <option value='trainer'>TRAINER</option>\n                                <option value='team-lead'>TEAM-LEAD</option>\n                                <option value='asst-manager'>ASST-MANAGER</option>\n                                <option value='IT-Support'>IT-SUPPORT</option>\n                                <option value='agent'>AGENT</option>\n                                <option value='manager'>MANAGER</option>\n                            </Form.Control>\n                        </Form.Group>\n                        <Form.Group className=\"col-md-4\" controlId='password'>\n                            <Form.Label>Password</Form.Label>\n                            <Form.Control \n                            type='password' \n                            placeholder='Enter Password'\n                            value={password}\n                            onChange={(e) => setPassword(e.target.value)}\n                            ></Form.Control>\n                        </Form.Group>\n                        <Form.Group className=\"col-md-4\" controlId='confirrmPassword'>\n                            <Form.Label>Confirm Password</Form.Label>\n                            <Form.Control \n                            type='password' \n                            placeholder='Confirm Password'\n                            value={confirmPassword}\n                            onChange={(e) => setConfirmPassword(e.target.value)}\n                            ></Form.Control>\n                        </Form.Group>\n                    </Form.Row>\n                    <Button type='submit' variant='primary' className='btn-block'>\n                      Register\n                    </Button>\n                </Form>\n            </Col>\n            \n        </Row>\n        </>\n    )\n}\n\nexport default StaffCreateScreen\n","C:\\Users\\Pascal Ojinnaka\\Documents\\React\\human-resource-mgt-responsive\\src\\screens\\StaffEditScreen.js",["200"],"import React, { useState, useEffect } from 'react'\nimport { Link, NavLink } from 'react-router-dom'\nimport { Form, Button, Row, Col, Nav } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport { getUserDetailsById, updateUser } from '../actions/userActions'\nimport { USER_DETAILS_ID_RESET, USER_UPDATE_RESET } from '../constants/userConstants'\nimport '../styles/FixedNavbar.css';\nimport AdminHeader from '../components/AdminHeader';\nimport '../styles/ProfileScreen.css';\n\n\nconst StaffEditScreen = ({ history, match }) => {\n    const userId = match.params.id\n\n    const [firstname, setFirstname] = useState('')\n    const [middlename, setMiddlename] = useState('')\n    const [lastname, setLastname] = useState('')\n    const [email, setEmail] = useState('')\n   \n    \n    const [role, setRole] = useState('')    \n    const [department, setDepartment] = useState('')    \n    const [employeeCode, setEmployeeCode] = useState('')  \n\n    const dispatch = useDispatch()\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const userUpdate = useSelector(state => state.userUpdate)\n    const { success:successUpdate } = userUpdate\n\n    const userDetailsById = useSelector(state => state.userDetailsById)\n    const { error, user } = userDetailsById\n\n    useEffect(() => {\n        if (userInfo  && (userInfo.role === 'hr' || userInfo.role === 'hr-manager' || userInfo.role === 'admin')) {\n            \n           \n            if(successUpdate) {\n                dispatch({\n                    type: USER_UPDATE_RESET\n                })\n                dispatch({\n                    type: USER_DETAILS_ID_RESET\n                })\n                history.push('/admin/userlist')\n            } else {\n            if(!user.employee || user.employee._id !== userId) {\n                dispatch(getUserDetailsById(userId))\n            } else {\n                setFirstname(user.employee.firstname)\n                setLastname(user.employee.lastname)\n                setMiddlename(user.employee.middlename)\n                setEmail(user.employee.email)\n                setRole(user.employee.role)\n                setDepartment(user.employee.department)\n                setEmployeeCode(user.employee.employeeCode)\n\n            }\n        }\n        } else {\n            history.push('/')\n        } \n        \n    }, [history, userInfo, userId, user, successUpdate, dispatch])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(updateUser({\n            _id: userId,\n            firstname,\n            middlename,\n            lastname,\n            email,\n           role,\n           employeeCode,\n           department\n        }))\n        history.push('/admin/userlist')\n    }\n\n    return (\n        <>\n            {user.employee  && (\n            <Row className='ml-4 mr-4 py-4 profilescreen-wrapper'>\n                <Col md={3} className='d-none d-md-block'>\n            <div className=\"fixednavbar-wrapper\">\n            <div className='employee-details'>\n                <p>{userInfo.role}</p>\n                <p>{userInfo.email}</p>\n            </div>\n        <Nav className=\"flex-column\">\n        <NavLink to='/admin/userlist' exact className=\"nav-link\" activeClassName='active-here'>\n          <i class=\"fas fa-home pr-3\"></i>\n          All Employees\n        </NavLink>\n        <NavLink to={`/admin/user/${userId}/edit`} exact className=\"nav-link\" activeClassName='active-here'>\n          <i class=\"far fa-id-card pr-3\"></i>\n          Details\n        </NavLink>\n        <NavLink to={`/admin/profile/${userId}/edit`} exact className=\"nav-link\" activeClassName='active-here'>\n          <i class=\"fas fa-user-circle pr-3\"></i>\n          Profile\n        </NavLink>\n        <NavLink to={`/admin/education/${userId}/edit`} exact className=\"nav-link\" activeClassName='active-here'>\n          <i class=\"fas fa-graduation-cap pr-3\"></i>\n          Education\n        </NavLink>\n        <NavLink to={`/admin/nextofkin/${userId}/edit`} exact className=\"nav-link\" activeClassName='active-here'>\n          <i class=\"fas fa-user-friends pr-3\"></i>\n          Employee Next Of Kin\n        </NavLink>\n        </Nav>\n        </div>\n            </Col>\n           \n            <Col className='col-xs-12 col-md-8'>\n                <AdminHeader\n                    userId\n                />\n                <h1 className='page-header'>Update {user.employee.firstname}'s Record</h1>\n               \n                {error && <Message variant='danger'>{error}</Message>}\n                {successUpdate && <Message variant='success'>Profile Created</Message>}\n                \n                <Form onSubmit={submitHandler}>\n                    <Form.Row>\n                        <Form.Group  className=\"col-md-4\" controlId='firstname'>\n                            <Form.Label>First Name</Form.Label>\n                            <Form.Control \n                            type='firstname' \n                           \n                            placeholder='Enter First name'\n                            value={firstname}\n                            onChange={(e) => setFirstname(e.target.value)}\n                            ></Form.Control>\n                        </Form.Group>\n                        <Form.Group  className=\"col-md-4\" controlId='middlename'>\n                            <Form.Label>Middle Name</Form.Label>\n                            <Form.Control \n                            type='middlename' \n                            \n                            placeholder='Enter Middle name'\n                            value={middlename}\n                            onChange={(e) => setMiddlename(e.target.value)}\n                            ></Form.Control>\n                        </Form.Group>\n                        <Form.Group  className=\"col-md-4\" controlId='lastname'>\n                            <Form.Label>Last Name</Form.Label>\n                            <Form.Control \n                            type='lastname' \n                            \n                            placeholder='Enter Last name'\n                            value={lastname}\n                            onChange={(e) => setLastname(e.target.value)}\n                            ></Form.Control>\n                        </Form.Group>\n                    </Form.Row>\n                    <Form.Row>\n                        <Form.Group  className=\"col-md-4\" controlId='email'>\n                            <Form.Label>Email Address</Form.Label>\n                            <Form.Control \n                            type='email' \n                            placeholder='Enter Email'\n                            value={email}\n                            onChange={(e) => setEmail(e.target.value)}\n                           \n                            ></Form.Control>\n                        </Form.Group>\n                        <Form.Group className=\"col-md-4\" controlId=\"formGridDepartment\">\n                            <Form.Label>Department</Form.Label>\n                            <Form.Control \n                            as=\"select\" \n                            size='sm'\n                            value={department}\n                            onChange={(e) => setDepartment(e.target.value)}>\n                                <option value=''>Select...</option>\n                                <option value='IT'>IT</option>\n                                <option value='PROJECT'>PROJECT</option>\n                                <option value='HR'>HR</option>\n                                <option value='MIS'>MIS</option>\n                                <option value='QUALITY-ASSURANCE'>QUALITY-ASSURANCE</option>\n                                <option value='TRAINING'>TRAINING</option>\n                                <option value='ADMIN'>ADMIN</option>\n                                <option value='OUTCESS'>OUTCESS</option>\n\n                            </Form.Control>\n                        </Form.Group>\n                        <Form.Group  className=\"col-md-4\" controlId='employeeCode'>\n                            <Form.Label>Employee Code</Form.Label>\n                            <Form.Control \n                            type='employeeCode' \n                            placeholder='Enter Employee Code'\n                            value={employeeCode}\n                            onChange={(e) => setEmployeeCode(e.target.value)}\n                            ></Form.Control>\n                        </Form.Group>\n                        \n                    </Form.Row>\n                    <Form.Row>\n                        <Form.Group as={Col} controlId=\"formGridRole\">\n                            <Form.Label>Role</Form.Label>\n                            <Form.Control \n                            as=\"select\" \n                            size='sm'\n                            value={role}\n                            onChange={(e) => setRole(e.target.value)}>\n                                <option value=''>Select...</option>\n                                <option value='hr'>HR</option>\n                                <option value='employee'>EMPLOYEE</option>\n                                <option value='supervisor'>SUPERVISOR</option>\n                                <option value='admin'>ADMIN</option>\n                                <option value='hr-manager'>HR-MANAGER</option>\n                                <option value='trainer'>TRAINER</option>\n                                <option value='team-lead'>TEAM-LEAD</option>\n                                <option value='asst-manager'>ASST-MANAGER</option>\n                                <option value='IT-Support'>IT-SUPPORT</option>\n                                <option value='agent'>AGENT</option>\n                                <option value='manager'>MANAGER</option>\n                            </Form.Control>\n                        </Form.Group>\n                        \n                    </Form.Row>\n                    <Button type='submit' variant='primary' className='btn-block'>\n                        Update\n                    </Button>\n                </Form>\n            </Col>\n                 \n        </Row>\n        )\n        }\n        </>\n    )\n}\n\nexport default StaffEditScreen\n","C:\\Users\\Pascal Ojinnaka\\Documents\\React\\human-resource-mgt-responsive\\src\\screens\\HomeScreen.js",["201"],"import React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom'\nimport { Table, Button, Row, Col, Form } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getUserDetails } from '../actions/userActions'\nimport '../styles/ProfileScreen.css';\nimport Header from '../components/Header';\nimport FixedNavbar from '../components/FixedNavbar';\n\nconst HomeScreen = ({ history }) => {\n   \n\n    const dispatch = useDispatch()\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const userDetails = useSelector(state => state.userDetails)\n    const { user } = userDetails\n\n    useEffect(() => {\n\n        if(!userInfo) {\n            history.push('/')\n        } else {\n            dispatch(getUserDetails('me'))\n        }\n    }, [dispatch, history, user, userInfo])\n\n  return (\n    <>   \n      <Row className='ml-4 mr-4 py-4 profilescreen-wrapper'>\n        <Col md={3} className='d-none d-md-block'>\n          <FixedNavbar />\n        </Col>\n        <Col className='col-xs-12 col-md-8'>\n          <Header />\n          <h1 className='page-header'>Home</h1>\n          \n          <Form key={user._id}>\n                <Form.Row>\n                  <Form.Group className=\"col-md-4\">\n                    <Form.Label>First Name</Form.Label>\n                    <Form.Control \n                    \ttype=\"text\"\n                    \tplaceholder={user.firstname}\n                      readOnly\n                    ></Form.Control>\n                  </Form.Group>\n                  <Form.Group className=\"col-md-4\">\n                    <Form.Label>Middle Name</Form.Label>\n                    <Form.Control \n                      type=\"text\"\n                      placeholder={user.middlename}\n                      readOnly\n                    ></Form.Control>\n                  </Form.Group>\n                  <Form.Group className=\"col-md-4\">\n                    <Form.Label>Last Name</Form.Label>\n                    <Form.Control \n                    \ttype=\"text\"\n                    \tplaceholder={user.lastname}\n                      readOnly\n                    ></Form.Control>\n                  </Form.Group>\n                </Form.Row>\n\n                <Form.Row>\n                  <Form.Group className=\"col-md-6\">\n                    <Form.Label>Employee ID</Form.Label>\n                    <Form.Control \n                      type=\"text\"\n                      placeholder={user.employeeCode}\n                      readOnly\n                    ></Form.Control>\n                \t</Form.Group>\n                \t<Form.Group className=\"col-md-6\">\n                    <Form.Label>Department</Form.Label>\n                    <Form.Control \n                      type=\"text\"\n                      placeholder={user.department}\n                      readOnly\n                    ></Form.Control>\n                  </Form.Group>\n                </Form.Row>\n                <Form.Row>\n                  <Form.Group className=\"col-md-6\">\n                    <Form.Label>Role</Form.Label>\n                    <Form.Control \n                      type=\"text\"\n                      placeholder={user.role}\n                      readOnly\n                    ></Form.Control>\n                \t</Form.Group>\n                \t<Form.Group className=\"col-md-6\">\n                    <Form.Label>Mail Addresss</Form.Label>\n                    <Form.Control \n                      type=\"text\"\n                      placeholder={user.email}\n                      readOnly\n                    ></Form.Control>\n                  </Form.Group>\n                </Form.Row>\n                {userInfo && (\n                <Link to='/dashboard'>\n                    <Button type='submit' variant='primary' className='btn-block'>\n                        <i className='fas fa-edit'></i> Edit\n                    </Button>\n                </Link>\n                )}\n              </Form>\n\n              \n\n        {/* <Table striped bordered hover className='table-sm mr-4 ml-3 home-table'>\n          <thead>\n            <tr>\n                    <th>EMPLOYEE ID</th>\n                    <th>FIRST NAME</th>\n                    <th>MIDDLE NAME</th>\n                    <th>LAST NAME</th>\n                    <th>EMAIL</th>\n                    <th>ROLE</th>\n                    <th>DEPARTMENT</th>\n                    <th>ACTION</th>\n                </tr>\n            </thead>\n            <tbody>\n                \n                <tr key={user._id}>\n                    <td>{user.employeeCode}</td>\n                    <td>{user.firstname}</td>\n                    <td>{user.middlename}</td>\n                    <td>{user.lastname}</td>\n                    <td><a href={`mailto:${user.email}`}>{user.email}</a></td>\n                    <td>{user.role}</td>\n                    <td>{user.department}</td>\n                    {userInfo && (\n                    <td>\n                        <Link to='/dashboard'>\n                            <Button variant='light' className='btn-sm'>\n                                <i className='fas fa-edit'></i>\n                            </Button>\n                        </Link>\n                        \n                    </td>\n                    )}\n                </tr>\n                \n            </tbody>\n        </Table> */}\n        </Col>\n        </Row>\n        </>\n    )\n}\n\nexport default HomeScreen;","C:\\Users\\Pascal Ojinnaka\\Documents\\React\\human-resource-mgt-responsive\\src\\screens\\RoleEditScreen.js",["202","203","204"],"import React, { useState, useEffect } from 'react'\nimport { Link, NavLink } from 'react-router-dom'\nimport { Form, Button, Row, Col, ListGroup, Nav } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { getUserDetailsById, updateUser } from '../actions/userActions'\nimport { USER_DETAILS_ID_RESET, USER_UPDATE_RESET } from '../constants/userConstants';\nimport '../styles/FixedNavbar.css';\nimport Header from '../components/Header';\nimport '../styles/ProfileScreen.css';\n\n\nconst RoleEditScreen = ({ history, match }) => {\n    const userId = match.params.id\n\n    const [role, setRole] = useState('')\n    const [employeeCode, setEmployeeCode] = useState('')\n    const [isManager, setIsManager] = useState(false)\n    const [isActive, setIsActive] = useState(false)\n\n    const [message, setMessage] = useState(null)\n\n    const dispatch = useDispatch()\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const userUpdate = useSelector(state => state.userUpdate)\n    const { success:successUpdate } = userUpdate\n    \n\n    const userDetailsById = useSelector(state => state.userDetailsById)\n    const { loading, error, user } = userDetailsById\n    \n    useEffect(() => {\n        if (userInfo  && (userInfo.role === 'hr' || userInfo.role === 'hr-manager' || userInfo.role === 'admin')) {\n            \n           \n            if(successUpdate) {\n                dispatch({\n                    type: USER_UPDATE_RESET\n                })\n                dispatch({\n                    type: USER_DETAILS_ID_RESET\n                })\n                history.push('/admin/userlist')\n            } else {\n            if(!user.employee || userId !== user.employee._id) {\n                dispatch(getUserDetailsById(userId))\n            } else {\n                setRole(user.employee.role)\n                setIsActive(user.employee.isActive)\n                setIsManager(user.employee.isManager)\n                setEmployeeCode(user.employee.employeeCode)\n            }\n        }\n        } else {\n            history.push('/')\n        }\n        \n        \n    }, [history, successUpdate, userInfo, userId, user, dispatch])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(updateUser({\n            _id: userId,\n            employeeCode,\n            role,\n            isActive,\n            isManager\n        }))\n        history.push('/admin/userlist')\n        //history.push('/admin/userlist')\n    }\n    return (\n        <>\n            {user.employee && (\n            <Row className='ml-4 mr-4 py-4 profilescreen-wrapper'>\n            <Col md={3}>\n            <div className=\"fixednavbar-wrapper\">\n      <div className='employee-details'>\n        <p>{userInfo.role}</p>\n        <p>{userInfo.email}</p>\n      </div>\n            <Nav className=\"flex-column\">\n            <NavLink to='/home' exact className=\"nav-link\" activeClassName='active-here'>\n          <i class=\"fas fa-home pr-4\"></i>\n          Home\n        </NavLink>\n        <NavLink to='/dashboard' exact className=\"nav-link\" activeClassName='active-here'>\n          <i class=\"far fa-id-card pr-4\"></i>\n          Personal details\n        </NavLink>\n        <NavLink to='/updatepassword' exact className=\"nav-link\" activeClassName='active-here'>\n        <i class=\"fas fa-unlock pr-4\"></i>\n          Update Password\n        </NavLink>\n        <NavLink to='/dashboard' exact className=\"nav-link\" activeClassName='active-here'>\n          <i class=\"fas fa-graduation-cap pr-4\"></i>\n          Education\n        </NavLink>\n        <NavLink to='/myleave' exact className=\"nav-link\" activeClassName='active-here'>\n          <i class=\"fas fa-sign-out-alt pr-4\"></i>\n          My Leave\n        </NavLink>\n                {\n                    (userInfo.role === 'hr') && (\n                        <>\n                        <div className='admin-section'>\n            <p>Admin Section</p>\n          </div>\n          <NavLink to='/myleave' exact className=\"nav-link\" activeClassName='active-here'>\n            <i class=\"fas fa-box-open pr-4\"></i>\n            Leave Applications\n          </NavLink>\n          <NavLink to='/admin/userlist' exact className=\"nav-link\" activeClassName='active-here'>\n            <i class=\"fas fa-users pr-4\"></i>\n            All Employees\n          </NavLink>\n          <NavLink to='/admin/register' exact className=\"nav-link\" activeClassName='active-here'>\n            <i class=\"fas fa-user-plus pr-4\"></i>\n            Register Employee\n          </NavLink>\n                        </>\n                    )\n                }\n            </Nav>\n            </div>\n            </Col>\n            <Col md={8}>\n                <Header />\n                <h1 className='page-header'>Update {user.employee.email} Role</h1>\n                {message && <Message variant='danger'>{message}</Message>}\n                {error && <Message variant='danger'>{error}</Message>}\n                {successUpdate && <Message variant='success'>Profile Created</Message>}\n                {loading && <Loader />}\n                <Form onSubmit={submitHandler}>\n                    <Form.Group controlId='isActive'>\n                        <Form.Check\n                        type='checkbox' \n                        label='Is Active'\n                        checked={isActive}\n                        onChange={(e) => setIsActive(e.target.checked)}\n                        ></Form.Check>\n                    </Form.Group>\n                    <Form.Group controlId='isManager'>\n                        <Form.Check\n                        type='checkbox' \n                        label='Is Manager'\n                        checked={isManager}\n                        onChange={(e) => setIsManager(e.target.checked)}\n                        ></Form.Check>\n                    </Form.Group>\n                    <Form.Group controlId=\"formGridRole\">\n                            <Form.Label>Role</Form.Label>\n                            <Form.Control \n                            as=\"select\" \n                            size='sm'\n                            value={role}\n                            onChange={(e) => setRole(e.target.value)}>\n                                <option value=''>Select...</option>\n                                <option value='hr'>HR</option>\n                                <option value='employee'>EMPLOYEE</option>\n                                <option value='supervisor'>SUPERVISOR</option>\n                                <option value='admin'>ADMIN</option>\n                                <option value='hr-manager'>HR-MANAGER</option>\n                                <option value='trainer'>TRAINER</option>\n                                <option value='team-lead'>TEAM-LEAD</option>\n                                <option value='asst-manager'>ASST-MANAGER</option>\n                                <option value='IT-Support'>IT-SUPPORT</option>\n                                <option value='agent'>AGENT</option>\n                                <option value='manager'>MANAGER</option>\n                            </Form.Control>\n                        </Form.Group>\n                        <Form.Group controlId='employeeCode'>\n                            <Form.Label>Employee Code</Form.Label>\n                            <Form.Control \n                            type='employeeCode' \n                            placeholder='Enter Employee Code'\n                            value={employeeCode}\n                            onChange={(e) => setEmployeeCode(e.target.value)}\n                            ></Form.Control>\n                        </Form.Group>\n                    <Button type='submit' variant='primary'>\n                        Update\n                    </Button>\n                </Form>\n            </Col>\n            </Row>\n            )}\n            </>\n    )\n}\n\nexport default RoleEditScreen\n","C:\\Users\\Pascal Ojinnaka\\Documents\\React\\human-resource-mgt-responsive\\src\\screens\\ProfileScreen.js",["205","206"],"import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Button, Row, Col, ListGroup, Form } from 'react-bootstrap'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { createProfile, getProfileDetails, updateProfile } from '../actions/profileActions'\nimport { PROFILE_CREATE_RESET, PROFILE_DETAILS_RESET, PROFILE_UPDATE_RESET } from '../constants/profileConstants'\nimport FixedNavbar from '../components/FixedNavbar';\nimport Header from '../components/Header';\nimport '../styles/ProfileScreen.css';\n\nconst ProfileScreen = ({ history }) => {\n    const [dob, setDob] = useState('')\n    const [contactNo, setContactNo] = useState('')\n    const [privateEmail, setPrivateEmail] = useState('')\n    const [gender, setGender] = useState('')\n    const [dateOfJoining, setDateOfJoining] = useState('')\n    const [dateOfLastPromotion, setDateOfLastPromotion] = useState('')\n    const [address, setAddress] = useState('')\n    const [stateOfOrigin, setStateOfOrigin] = useState('')\n    const [lga, setLga] = useState('')\n    const [maritalStatus, setMaritalStatus] = useState('')\n    const [religion, setReligion] = useState('')\n\n    //const [message, setMessage] = useState(null)\n\n    const dispatch = useDispatch()\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const profileDetails = useSelector(state => state.profileDetails)\n    const { loading, profile } = profileDetails\n\n    const profileUpdate = useSelector(state => state.profileUpdate)\n    const {  error:errorUpdate, success:successUpdate } = profileUpdate\n\n    const profileCreate = useSelector(state => state.profileCreate)\n    const { error:errorCreate, success:successCreate } = profileCreate\n\n  \n\n    useEffect(() => {\n\n        if(!userInfo) {\n            history.push('/')\n        } else {\n            if(successUpdate || successCreate) {\n                dispatch({\n                    type: PROFILE_UPDATE_RESET\n                })\n                dispatch({\n                    type: PROFILE_CREATE_RESET\n                })\n                dispatch({\n                    type: PROFILE_DETAILS_RESET\n                })\n                history.push('/')\n            } else {\n            if(!profile || !profile.dob) {\n                dispatch(getProfileDetails('me'))\n            } else {\n                setDob(profile.dob)\n                setContactNo(profile.contactNo)\n                setPrivateEmail(profile.privateEmail)\n                setGender(profile.gender)\n                setDateOfJoining(profile.dateOfJoining)\n                setDateOfLastPromotion(profile.dateOfLastPromotion)\n                setAddress(profile.address)\n                setStateOfOrigin(profile.stateOfOrigin)\n                setLga(profile.lga)\n                setMaritalStatus(profile.maritalStatus)\n                setReligion(profile.religion)\n\n            }\n        }\n    }\n    }, [dispatch, history, profile, successUpdate, successCreate, userInfo])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(updateProfile({\n            _id: profile._id,\n            dob,\n            contactNo,\n            privateEmail,\n            gender,\n            dateOfJoining,\n            dateOfLastPromotion,\n            address,\n            stateOfOrigin,\n            lga,\n            maritalStatus,\n            religion\n        }))\n       \n       \n    }\n\n\n    const createsubmitHandler= (e) => {\n        e.preventDefault()\n        //Create Actions\n        dispatch(createProfile({\n          \n            dob,\n            contactNo,\n            privateEmail,\n            gender,\n            dateOfJoining,\n            dateOfLastPromotion,\n            address,\n            stateOfOrigin,\n            lga,\n            maritalStatus,\n            religion\n         }))\n        \n    }\n\n    return (\n        <>\n         \n        <Row className='ml-4 mr-4 py-4 profilescreen-wrapper'>\n            <Col md={3} className='d-none d-md-block'>\n                <FixedNavbar />\n            </Col>\n            <Col className='col-xs-12 col-md-8'>\n            <Header />\n                <h1>My Profile</h1>\n               \n                {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n                {successUpdate && <Message variant='success'>Profile Updated</Message>}\n                {loading && <Loader />}\n                {\n                    profile ? (\n                        <Form onSubmit={submitHandler}>\n                        <Form.Row>\n                            <Form.Group  className=\"col-md-4\" controlId='dateOfBirth'>\n                                <Form.Label>Date Of Birth</Form.Label>\n                                <Form.Control \n                                type='date'\n                                placeholder='Enter Date Of Birth'\n                                value={dob.substring(0, 10)}\n                                onChange={(e) => setDob(e.target.value)}\n                                ></Form.Control>\n                            </Form.Group>\n                            <Form.Group  className=\"col-md-4\" controlId='contactNo'>\n                                <Form.Label>Contact Number</Form.Label>\n                                <Form.Control \n                                type='contactNo'\n                                placeholder='Enter Contact Number'\n                                value={contactNo}\n                                onChange={(e) => setContactNo(e.target.value)}\n                                ></Form.Control>\n                            </Form.Group>\n                            <Form.Group  className=\"col-md-4\" controlId='privateEmail'>\n                                <Form.Label>Email Address</Form.Label>\n                                <Form.Control \n                                type='privateEmail'\n                                placeholder='Enter Private Email'\n                                value={privateEmail}\n                                onChange={(e) => setPrivateEmail(e.target.value)}\n                                ></Form.Control>\n                            </Form.Group>\n                            \n                    \n                            \n                        </Form.Row>\n                        <Form.Row>\n                            <Form.Group className=\"col-md-4\" controlId=\"formGridGender\">\n                                <Form.Label>Gender</Form.Label>\n                                <Form.Control \n                                as=\"select\" \n                                size='sm'\n                                value={gender}\n                                onChange={(e) => setGender(e.target.value)}>\n                                    <option value=''>Select...</option>\n                                    <option value='MALE'>MALE</option>\n                                    <option value='FEMALE'>FEMALE</option>\n                                </Form.Control>\n                            </Form.Group>\n                            <Form.Group  className=\"col-md-4\" controlId='dateOfJoining'>\n                                <Form.Label>Date Of Joining</Form.Label>\n                                <Form.Control \n                                type='date' \n                                placeholder='Enter Date Of Joining'\n                                value={dateOfJoining}\n                                onChange={(e) => setDateOfJoining(e.target.value)}\n                                ></Form.Control>\n                            </Form.Group>\n                            <Form.Group  className=\"col-md-4\" controlId='dateOfLastPromotion'>\n                                <Form.Label>Date Of Last Promotion</Form.Label>\n                                <Form.Control \n                                type='date' \n                                placeholder='Enter Date Of Last Promotion'\n                                value={dateOfLastPromotion}\n                                onChange={(e) => setDateOfLastPromotion(e.target.value)}\n                                ></Form.Control>\n                            </Form.Group>\n                        \n                    \n                            \n                        </Form.Row>\n                        <Form.Row>\n                            \n                            <Form.Group  className=\"col-md-4\" controlId='address'>\n                                <Form.Label>Address</Form.Label>\n                                <Form.Control \n                                type='address' \n                                placeholder='Enter Address'\n                                value={address}\n                                onChange={(e) => setAddress(e.target.value)}\n                                ></Form.Control>\n                            </Form.Group>\n                            <Form.Group  className=\"col-md-4\" controlId='stateOfOrigin'>\n                                <Form.Label>State Of Origin</Form.Label>\n                                <Form.Control \n                                type='stateOfOrigin' \n                                placeholder='Enter State Of Origin'\n                                value={stateOfOrigin}\n                                onChange={(e) => setStateOfOrigin(e.target.value)}\n                                ></Form.Control>\n                            </Form.Group>\n                            <Form.Group  className=\"col-md-4\" controlId='lga'>\n                                <Form.Label>LGA</Form.Label>\n                                <Form.Control \n                                type='lga' \n                                placeholder='Enter LGA'\n                                value={lga}\n                                onChange={(e) => setLga(e.target.value)}\n                                ></Form.Control>\n                            </Form.Group>\n                        </Form.Row>\n\n                        <Form.Row>\n                            <Form.Group  className=\"col-md-6\" controlId='maritalStatus'>\n                                <Form.Label>Marital Status</Form.Label>\n                                <Form.Control \n                                type='maritalStatus' \n                                placeholder='Enter Marital Status'\n                                value={maritalStatus}\n                                onChange={(e) => setMaritalStatus(e.target.value)}\n                                ></Form.Control>\n                            </Form.Group>\n                            <Form.Group  className=\"col-md-6\" controlId='religion'>\n                                <Form.Label>Religion</Form.Label>\n                                <Form.Control \n                                type='religion' \n                                placeholder='Enter Religion'\n                                value={religion}\n                                onChange={(e) => setReligion(e.target.value)}\n                                ></Form.Control>\n                            </Form.Group>\n                        \n                    \n                            \n                        </Form.Row>\n                    \n                        <Button type='submit' variant='primary' className='btn-block'>\n                            Update\n                        </Button>\n                    </Form>\n                    ) : (\n                        <Form onSubmit={createsubmitHandler}>\n                            <Form.Row>\n                                <Form.Group  className=\"col-md-4\" controlId='dateOfBirth'>\n                                    <Form.Label>Date Of Birth</Form.Label>\n                                    <Form.Control \n                                    type='date' \n                                \n                                    placeholder='Enter Date Of Birth'\n                                    value={dob}\n                                    onChange={(e) => setDob(e.target.value)}\n                                    ></Form.Control>\n                                </Form.Group>\n                                <Form.Group  className=\"col-md-4\" controlId='contactNo'>\n                                    <Form.Label>Contact Number</Form.Label>\n                                    <Form.Control \n                                    type='contactNo' \n                                    \n                                    placeholder='Enter Contact Number'\n                                    value={contactNo}\n                                    onChange={(e) => setContactNo(e.target.value)}\n                                    ></Form.Control>\n                                </Form.Group>\n                                <Form.Group  className=\"col-md-4\" controlId='privateEmail'>\n                                    <Form.Label>Email Address</Form.Label>\n                                    <Form.Control \n                                    type='privateEmail' \n                                    \n                                    placeholder='Enter Private Email'\n                                    value={privateEmail}\n                                    onChange={(e) => setPrivateEmail(e.target.value)}\n                                    ></Form.Control>\n                                </Form.Group>\n                                \n                        \n                                \n                            </Form.Row>\n                            <Form.Row>\n                                <Form.Group className=\"col-md-4\" controlId=\"formGridGender\">\n                                    <Form.Label>Gender</Form.Label>\n                                    <Form.Control \n                                    as=\"select\" \n                                    size='sm'\n                                    value={gender}\n                                    onChange={(e) => setGender(e.target.value)}>\n                                        <option value=''>Select...</option>\n                                        <option value='MALE'>MALE</option>\n                                        <option value='FEMALE'>FEMALE</option>\n                                    </Form.Control>\n                                </Form.Group>\n                                <Form.Group  className=\"col-md-4\" controlId='dateOfJoining'>\n                                    <Form.Label>Date Of Joining</Form.Label>\n                                    <Form.Control \n                                    type='date' \n                                    placeholder='Enter Date Of Joining'\n                                    value={dateOfJoining}\n                                    onChange={(e) => setDateOfJoining(e.target.value)}\n                                    ></Form.Control>\n                                </Form.Group>\n                                <Form.Group  className=\"col-md-4\" controlId='dateOfLastPromotion'>\n                                    <Form.Label>Date Of Last Promotion</Form.Label>\n                                    <Form.Control \n                                    type='date' \n                                    placeholder='Enter Date Of Last Promotion'\n                                    value={dateOfLastPromotion}\n                                    onChange={(e) => setDateOfLastPromotion(e.target.value)}\n                                    ></Form.Control>\n                                </Form.Group>\n                            \n                        \n                                \n                            </Form.Row>\n                            <Form.Row>\n                                \n                                <Form.Group  className=\"col-md-4\" controlId='address'>\n                                    <Form.Label>Address</Form.Label>\n                                    <Form.Control \n                                    type='address' \n                                    placeholder='Enter Address'\n                                    value={address}\n                                    onChange={(e) => setAddress(e.target.value)}\n                                    ></Form.Control>\n                                </Form.Group>\n                                <Form.Group  className=\"col-md-4\" controlId='stateOfOrigin'>\n                                    <Form.Label>State Of Origin</Form.Label>\n                                    <Form.Control \n                                    type='stateOfOrigin' \n                                    placeholder='Enter State Of Origin'\n                                    value={stateOfOrigin}\n                                    onChange={(e) => setStateOfOrigin(e.target.value)}\n                                    ></Form.Control>\n                                </Form.Group>\n                                <Form.Group  className=\"col-md-4\" controlId='lga'>\n                                    <Form.Label>LGA</Form.Label>\n                                    <Form.Control \n                                    type='lga' \n                                    placeholder='Enter LGA'\n                                    value={lga}\n                                    onChange={(e) => setLga(e.target.value)}\n                                    ></Form.Control>\n                                </Form.Group>\n                            \n                        \n                                \n                            </Form.Row>\n                            <Form.Row>\n                                \n                                <Form.Group  className=\"col-md-6\" controlId='maritalStatus'>\n                                    <Form.Label>Marital Status</Form.Label>\n                                    <Form.Control \n                                    type='maritalStatus' \n                                    placeholder='Enter Marital Status'\n                                    value={maritalStatus}\n                                    onChange={(e) => setMaritalStatus(e.target.value)}\n                                    ></Form.Control>\n                                </Form.Group>\n                                <Form.Group  className=\"col-md-6\" controlId='religion'>\n                                    <Form.Label>Religion</Form.Label>\n                                    <Form.Control \n                                    type='religion' \n                                    placeholder='Enter Religion'\n                                    value={religion}\n                                    onChange={(e) => setReligion(e.target.value)}\n                                    ></Form.Control>\n                                </Form.Group>\n                            \n                        \n                                \n                            </Form.Row>\n                        \n                            <Button type='submit' variant='primary' className='btn-block'>\n                                Create\n                            </Button>\n                        </Form>\n                    )\n                }\n                \n            </Col>\n        </Row>\n        </>\n    )\n}\n\nexport default ProfileScreen\n","C:\\Users\\Pascal Ojinnaka\\Documents\\React\\human-resource-mgt-responsive\\src\\screens\\NextOfKinScreen.js",["207","208"],"import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Button, Row, Col, ListGroup, Form } from 'react-bootstrap'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { createNextOfKin, getNextOfKinDetails, updateNextOfKin } from '../actions/nextOfKinActions'\nimport { NOK_CREATE_RESET, NOK_DETAILS_RESET, NOK_UPDATE_RESET } from '../constants/nextOfKinConstants'\nimport FixedNavbar from '../components/FixedNavbar';\nimport '../styles/ProfileScreen.css';\nimport Header from '../components/Header';\n\nconst NextOfKinScreen = ({ history }) => {\n    const [firstname, setFirstname] = useState('')\n    const [lastname, setLastname] = useState('')\n    const [contact, setContact] = useState('')\n    const [email, setEmail] = useState('')\n    const [relationship, setRelationship] = useState('')\n    const dispatch = useDispatch()\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const nextOfKinDetails = useSelector(state => state.nextOfKinDetails)\n    const { loading, nextOfKin } = nextOfKinDetails\n\n    const nextOfKinUpdate = useSelector(state => state.nextOfKinUpdate)\n    const { error:errorUpdate, success:successUpdate } = nextOfKinUpdate\n\n    const nextOfKinCreate = useSelector(state => state.nextOfKinCreate)\n    const { error:errorCreate, success:successCreate } = nextOfKinCreate\n\n  \n\n    useEffect(() => {\n\n        if(!userInfo) {\n            history.push('/')\n        } else {\n            if(successUpdate || successCreate) {\n                dispatch({\n                    type: NOK_UPDATE_RESET\n                })\n                dispatch({\n                    type: NOK_DETAILS_RESET\n                })\n                dispatch({\n                    type: NOK_CREATE_RESET\n                })\n                history.push('/home')\n            } else {\n            if(!nextOfKin || !nextOfKin.firstname) {\n                dispatch(getNextOfKinDetails('me'))\n            } else {\n                setFirstname(nextOfKin.firstname)\n                setLastname(nextOfKin.lastname)\n                setContact(nextOfKin.contact)\n                setEmail(nextOfKin.email)\n                setRelationship(nextOfKin.relationship)\n\n            }\n        }\n    }\n    }, [dispatch, history, nextOfKin, successUpdate, successCreate, userInfo])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(updateNextOfKin({\n            _id: nextOfKin._id,\n            firstname,\n            lastname,\n            contact,\n            email,\n            relationship\n        }))\n       \n       \n        \n    }\n\n    const createsubmitHandler= (e) => {\n        e.preventDefault()\n        dispatch(createNextOfKin({\n           \n            firstname,\n            lastname,\n            contact,\n            email,\n            relationship\n        }))\n       \n       \n        \n    }\n\n\n    return (\n        <>\n         \n        <Row className='ml-4 mr-4 py-4 profilescreen-wrapper'>\n            <Col md={3} className='d-none d-md-block'>\n                <FixedNavbar />\n            </Col>\n            <Col className='col-xs-12 col-md-8'>\n            <Header />\n                <h1>Next Of Kin</h1>\n               \n                {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n                {successUpdate && <Message variant='success'>Profile Updated</Message>}\n                {loading && <Loader />}\n                {\n                    nextOfKin ? (\n                        <Form onSubmit={submitHandler}>\n                        <Form.Row>\n                            <Form.Group  className=\"col-md-4\" controlId='firstname'>\n                                <Form.Label>Firstname</Form.Label>\n                                <Form.Control \n                                type='firstname' \n                            \n                                placeholder='Enter Firstname'\n                                value={firstname}\n                                onChange={(e) => setFirstname(e.target.value)}\n                                ></Form.Control>\n                            </Form.Group>\n                            <Form.Group  className=\"col-md-4\" controlId='lastname'>\n                                <Form.Label>Lastname</Form.Label>\n                                <Form.Control \n                                type='lastname' \n                                \n                                placeholder='Enter Lastname'\n                                value={lastname}\n                                onChange={(e) => setLastname(e.target.value)}\n                                ></Form.Control>\n                            </Form.Group>\n                            <Form.Group  className=\"col-md-4\" controlId='email'>\n                                <Form.Label>Email Address</Form.Label>\n                                <Form.Control \n                                type='email' \n                                \n                                placeholder='Enter  Email'\n                                value={email}\n                                onChange={(e) => setEmail(e.target.value)}\n                                ></Form.Control>\n                            </Form.Group>\n                            \n                    \n                            \n                        </Form.Row>\n                        <Form.Row>\n                            \n                            <Form.Group  className=\"col-md-6\" controlId='contact'>\n                                <Form.Label>Contact Number</Form.Label>\n                                <Form.Control \n                                type='contact' \n                                placeholder='Enter Contact'\n                                value={contact}\n                                onChange={(e) => setContact(e.target.value)}\n                                ></Form.Control>\n                            </Form.Group>\n                            <Form.Group  className=\"col-md-6\" controlId='relationship'>\n                                <Form.Label>Relationship</Form.Label>\n                                <Form.Control \n                                type='relationship' \n                                placeholder='Enter Relationship'\n                                value={relationship}\n                                onChange={(e) => setRelationship(e.target.value)}\n                                ></Form.Control>\n                            </Form.Group>\n                        \n                    \n                            \n                        </Form.Row>\n                        \n                    \n                        <Button type='submit' variant='primary' className='btn-block'>\n                            Update\n                        </Button>\n                    </Form>\n                    ) : (\n                        <Form onSubmit={createsubmitHandler}>\n                        <Form.Row>\n                            <Form.Group  className=\"col-md-4\" controlId='firstname'>\n                                <Form.Label>Firstname</Form.Label>\n                                <Form.Control \n                                type='firstname' \n                            \n                                placeholder='Enter Firstname'\n                                value={firstname}\n                                onChange={(e) => setFirstname(e.target.value)}\n                                ></Form.Control>\n                            </Form.Group>\n                            <Form.Group  className=\"col-md-4\" controlId='lastname'>\n                                <Form.Label>Lastname</Form.Label>\n                                <Form.Control \n                                type='lastname' \n                                \n                                placeholder='Enter Lastname'\n                                value={lastname}\n                                onChange={(e) => setLastname(e.target.value)}\n                                ></Form.Control>\n                            </Form.Group>\n                            <Form.Group  className=\"col-md-4\" controlId='email'>\n                                <Form.Label>Email Address</Form.Label>\n                                <Form.Control \n                                type='email' \n                                \n                                placeholder='Enter  Email'\n                                value={email}\n                                onChange={(e) => setEmail(e.target.value)}\n                                ></Form.Control>\n                            </Form.Group>\n                            \n                    \n                            \n                        </Form.Row>\n                        <Form.Row>\n                            \n                            <Form.Group  className=\"col-md-6\" controlId='contact'>\n                                <Form.Label>Contact Number</Form.Label>\n                                <Form.Control \n                                type='contact' \n                                placeholder='Enter Contact'\n                                value={contact}\n                                onChange={(e) => setContact(e.target.value)}\n                                ></Form.Control>\n                            </Form.Group>\n                            <Form.Group  className=\"col-md-6\" controlId='relationship'>\n                                <Form.Label>Relationship</Form.Label>\n                                <Form.Control \n                                type='relationship' \n                                placeholder='Enter Relationship'\n                                value={relationship}\n                                onChange={(e) => setRelationship(e.target.value)}\n                                ></Form.Control>\n                            </Form.Group>\n                        \n                    \n                            \n                        </Form.Row>\n                        \n                    \n                        <Button type='submit' variant='primary' className='btn-block'>\n                            Create\n                        </Button>\n                    </Form>\n                    )\n                }\n                \n            </Col>\n        </Row>\n        </>\n    )\n}\n\nexport default NextOfKinScreen\n","C:\\Users\\Pascal Ojinnaka\\Documents\\React\\human-resource-mgt-responsive\\src\\screens\\EducationScreen.js",["209","210"],"import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Button, Row, Col, ListGroup, Form } from 'react-bootstrap'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { EDUCATION_CREATE_RESET, EDUCATION_DETAILS_RESET, EDUCATION_UPDATE_RESET } from '../constants/educationConstants'\nimport { createEducation, getEducationDetails, updateEducation } from '../actions/educationActions';\nimport FixedNavbar from '../components/FixedNavbar';\nimport '../styles/EducationScreen.css';\nimport Header from '../components/Header';\n\nconst EducationScreen = ({ history }) => {\n    const [institutionAttended, setInstitutionAttended] = useState('')\n    const [courseOfStudy, setCourseOfStudy] = useState('')\n    const [yearOfGraduation, setYearOfGraduation] = useState('')\n    const [professionalMembership, setProfessionalMembership] = useState('')\n\n\n    const dispatch = useDispatch()\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const educationDetails = useSelector(state => state.educationDetails)\n    const { loading, education } = educationDetails\n\n    const educationUpdate = useSelector(state => state.educationUpdate)\n    const {  error:errorUpdate, success:successUpdate } = educationUpdate\n\n    const educationCreate = useSelector(state => state.educationCreate)\n    const { error:errorCreate, success:successCreate } = educationCreate\n    \n  \n\n    useEffect(() => {\n\n        if(!userInfo) {\n            history.push('/')\n        } else {\n            if(successUpdate || successCreate) {\n                dispatch({\n                    type: EDUCATION_UPDATE_RESET\n                })\n                dispatch({\n                    type: EDUCATION_DETAILS_RESET\n                })\n                dispatch({\n                    type: EDUCATION_CREATE_RESET\n                })\n                history.push('/home')\n            } else {\n            if(!education || !education.institutionAttended) {\n                dispatch(getEducationDetails('me'))\n            } else {\n                setInstitutionAttended(education.institutionAttended)\n                setCourseOfStudy(education.courseOfStudy)\n                setProfessionalMembership(education.professionalMembership)\n                setYearOfGraduation(education.yearOfGraduation)\n            }\n        }\n    }\n    }, [dispatch, history, education, successCreate, successUpdate, userInfo])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(updateEducation({\n            _id: education._id,\n            institutionAttended,\n            courseOfStudy,\n            professionalMembership,\n            yearOfGraduation\n        }))\n       \n    }\n\n    const createsubmitHandler= (e) => {\n        e.preventDefault()\n        dispatch(createEducation({\n           institutionAttended,\n           courseOfStudy,\n           professionalMembership,\n           yearOfGraduation\n        }))\n       \n    }\n\n  return (\n    <>   \n      <Row className='ml-4 mr-4 py-4 profilescreen-wrapper'>\n        <Col md={3} className='d-none d-md-block'>\n            <FixedNavbar />\n        </Col>\n        <Col className='col-xs-12 col-md-8'>\n          <Header />\n          <h1 className='page-header'>Education</h1>\n          {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\n          {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n          {successUpdate && <Message variant='success'>Profile Updated</Message>}\n          {loading && <Loader />}\n          {\n            education ? (\n              <Form onSubmit={submitHandler}>\n                <Form.Row>\n                  <Form.Group className=\"col-md-6\" controlId='institutionAttended'>\n                    <Form.Label>Institution Attended</Form.Label>\n                    <Form.Control \n                    \ttype='institutionAttended'\n                    \tplaceholder='Enter Institution Attended'\n                    \tvalue={institutionAttended}\n                    \tonChange={(e) => setInstitutionAttended(e.target.value)}\n                    ></Form.Control>\n                  </Form.Group>\n                  <Form.Group  className=\"col-md-6\" controlId='courseOfStudy'>\n                    <Form.Label>Course Of Study</Form.Label>\n                    <Form.Control \n                      type='courseOfStudy'    \n                      placeholder='Enter Course Of Study'\n                      value={courseOfStudy}\n                      onChange={(e) => setCourseOfStudy(e.target.value)}\n                    ></Form.Control>\n                  </Form.Group>\n                </Form.Row>\n\n                <Form.Row>\n                  <Form.Group  className=\"col-md-6\" controlId='professionalMembership'>\n                    <Form.Label>Professional Membership</Form.Label>\n                    <Form.Control \n                      type='professionalMembership' \n                                \n                      placeholder='Enter Professional Membership'\n                      value={professionalMembership}\n                      onChange={(e) => setProfessionalMembership(e.target.value)}\n                    ></Form.Control>\n                \t</Form.Group>\n                \t<Form.Group  className=\"col-md-6\" controlId='yearOfGraduation'>\n                    <Form.Label>Year Of Graduation</Form.Label>\n                    <Form.Control \n                      type='date' \n                            \n                      placeholder='Enter Year Of Graduation'\n                      value={yearOfGraduation}\n                      onChange={(e) => setYearOfGraduation(e.target.value)}\n                    ></Form.Control>\n                  </Form.Group>\n                </Form.Row>\n                  <Button type='submit' variant='primary' className='btn-block'>\n                    Update\n                  </Button>\n              </Form>\n\n              ) : (\n              <Form onSubmit={createsubmitHandler}>\n                <Form.Row>\n                  <Form.Group  className=\"col-md-6\" controlId='institutionAttended'>\n                    <Form.Label>Institution Attended</Form.Label>\n                    <Form.Control \n                      type='institutionAttended' \n                            \n                      placeholder='Enter Institution Attended'\n                      value={institutionAttended}\n                      onChange={(e) => setInstitutionAttended(e.target.value)}\n                    ></Form.Control>\n                  </Form.Group>\n                  <Form.Group  className=\"col-md-6\" controlId='courseOfStudy'>\n                  \t<Form.Label>Course Of Study</Form.Label>\n                    <Form.Control \n                      type='courseOfStudy' \n                                \n                      placeholder='Enter Course Of Study'\n                      value={courseOfStudy}\n                      onChange={(e) => setCourseOfStudy(e.target.value)}\n                    ></Form.Control>\n                  </Form.Group>\n                </Form.Row>\n\n                <Form.Row>\n                  <Form.Group  className=\"col-md-6\" controlId='professionalMembership'>\n                    <Form.Label>Professional Membership</Form.Label>\n                    <Form.Control \n                      type='professionalMembership' \n                                \n                      placeholder='Enter Professional Membership'\n                      value={professionalMembership}\n                      onChange={(e) => setProfessionalMembership(e.target.value)}\n                    ></Form.Control>\n                  </Form.Group>\n                  <Form.Group  className=\"col-md-6\" controlId='yearOfGraduation'>\n                    <Form.Label>Year Of Graduation</Form.Label>\n                    <Form.Control \n                      type='date' \n                            \n                      placeholder='Enter Year Of Graduation'\n                      value={yearOfGraduation}\n                      onChange={(e) => setYearOfGraduation(e.target.value)}\n                    ></Form.Control>\n                  </Form.Group>\n                </Form.Row>\n                <Button type='submit' variant='primary' className='btn-block'>\n                  Create\n                </Button>\n              </Form>\n              )\n            }\n          </Col>\n        </Row>\n      </>\n    )\n}\n\nexport default EducationScreen\n","C:\\Users\\Pascal Ojinnaka\\Documents\\React\\human-resource-mgt-responsive\\src\\screens\\HrHomeScreen.js",["211","212"],"import React, { useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Table, Button, Row, Col, ListGroup } from 'react-bootstrap'\nimport { getUserDetailsById } from '../actions/userActions';\nimport FixedNavbar from '../components/FixedNavbar';\n\n\nconst HrHomeScreen = ({ history, match }) => {\n    const userId = match.params.id\n\n    const dispatch = useDispatch()\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n\n    const userDetailsById = useSelector(state => state.userDetailsById)\n    const { user } = userDetailsById\n\n    useEffect(() => {\n        if (!userInfo  && (userInfo.role !== 'hr')) {\n            \n            history.push('/')\n        } else {\n            dispatch(getUserDetailsById(userId))\n        }\n        \n        \n    }, [history, userInfo, userId, dispatch])\n\n    return (\n        <>\n            \n        <Row className='ml-4 mr-4 py-4'>\n        <Col md={3}>\n            <FixedNavbar />\n        </Col>\n        <Col md={8}>\n        <Table striped bordered hover reesponsive className='table-sm mr-4 ml-3'>\n            <thead>\n                <tr>\n                    <th>EMPLOYEE ID</th>\n                    <th>FIRST NAME</th>\n                    <th>MIDDLE NAME</th>\n                    <th>LAST NAME</th>\n                    <th>EMAIL</th>\n                    <th>ROLE</th>\n                    <th>DEPARTMENT</th>\n                    <th>ACTION</th>\n                </tr>\n            </thead>\n            <tbody>\n                \n                <tr key={user.employee._id}>\n                    <td>{user.employee.employeeCode}</td>\n                    <td>{user.employee.firstname}</td>\n                    <td>{user.employee.middlename}</td>\n                    <td>{user.employee.lastname}</td>\n                    <td><a href={`mailto:${user.employee.email}`}>{user.employee.email}</a></td>\n                    <td>{user.employee.role}</td>\n                    <td>{user.employee.department}</td>\n                    {userInfo && (\n                    <td>\n                        <LinkContainer to={`/dashboard`}>\n                            <Button variant='light' className='btn-sm'>\n                                <i className='fas fa-edit'></i>\n                            </Button>\n                        </LinkContainer>\n                        \n                    </td>\n                    )}\n                </tr>\n                \n            </tbody>\n        </Table>\n        </Col>\n        </Row>\n        </>\n    )\n}\n\nexport default HrHomeScreen\n","C:\\Users\\Pascal Ojinnaka\\Documents\\React\\human-resource-mgt-responsive\\src\\screens\\AdminProfileScreen.js",["213","214","215","216"],"import React, { useState, useEffect } from 'react'\nimport { Link, NavLink } from 'react-router-dom'\nimport { Button, Row, Col, ListGroup, Form, Nav} from 'react-bootstrap'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { createProfileEmpId, getProfileDetailsEmpId, updateProfile } from '../actions/profileActions'\nimport { PROFILE_CREATE_EMPLOYEE_RESET, PROFILE_DETAILS_EMPLOYEE_RESET, PROFILE_UPDATE_RESET } from '../constants/profileConstants'\nimport '../styles/FixedNavbar.css';\nimport AdminHeader from '../components/AdminHeader';\nimport '../styles/ProfileScreen.css';\n\nconst AdminProfileScreen = ({ history, match }) => {\n    const userId = match.params.id\n\n\n    const [dob, setDob] = useState('')\n    const [contactNo, setContactNo] = useState('')\n    const [privateEmail, setPrivateEmail] = useState('')\n    const [gender, setGender] = useState('')\n    const [dateOfJoining, setDateOfJoining] = useState('')\n    const [dateOfLastPromotion, setDateOfLastPromotion] = useState('')\n    const [address, setAddress] = useState('')\n    const [stateOfOrigin, setStateOfOrigin] = useState('')\n    const [lga, setLga] = useState('')\n    const [maritalStatus, setMaritalStatus] = useState('')\n    const [religion, setReligion] = useState('')\n\n   \n\n    const dispatch = useDispatch()\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const profileDetailsEmpId = useSelector(state => state.profileDetailsEmpId)\n    const { loading, profile } = profileDetailsEmpId\n\n    const profileUpdate = useSelector(state => state.profileUpdate)\n    const { error:errorUpdate, success:successUpdate } = profileUpdate\n\n    const profileCreateEmpId = useSelector(state => state.profileCreateEmpId)\n    const { error:errorCreate, success:successCreate } = profileCreateEmpId\n\n  \n\n    useEffect(() => {\n\n        if(userInfo  && (userInfo.role === 'hr' || userInfo.role === 'hr-manager' || userInfo.role === 'admin')) {\n            \n            if(successUpdate || successCreate) {\n                dispatch({\n                    type: PROFILE_UPDATE_RESET\n                })\n                dispatch({\n                    type: PROFILE_DETAILS_EMPLOYEE_RESET\n                })\n                dispatch({\n                    type: PROFILE_CREATE_EMPLOYEE_RESET\n                })\n                history.push('/admin/userlist')\n            } else {\n            if(!profile || profile.employee !== userId) {\n                dispatch(getProfileDetailsEmpId(userId))\n            } else {\n                setDob(profile.dob)\n                setContactNo(profile.contactNo)\n                setPrivateEmail(profile.privateEmail)\n                setGender(profile.gender)\n                setDateOfJoining(profile.dateOfJoining)\n                setDateOfLastPromotion(profile.dateOfLastPromotion)\n                setAddress(profile.address)\n                setStateOfOrigin(profile.stateOfOrigin)\n                setLga(profile.lga)\n                setMaritalStatus(profile.maritalStatus)\n                setReligion(profile.religion)\n\n            }\n        }\n        } else {\n            history.push('/') \n    }\n    }, [dispatch, history, profile, userId, successUpdate, successCreate, userInfo])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(updateProfile({\n            _id: profile._id,\n            dob,\n            contactNo,\n            privateEmail,\n            gender,\n            dateOfJoining,\n            dateOfLastPromotion,\n            address,\n            stateOfOrigin,\n            lga,\n            maritalStatus,\n            religion\n        }))\n       \n       \n        \n    }\n\n    const createsubmitHandler= (e) => {\n        e.preventDefault()\n        dispatch(createProfileEmpId({\n            employee: userId,\n            dob,\n            contactNo,\n            privateEmail,\n            gender,\n            dateOfJoining,\n            dateOfLastPromotion,\n            address,\n            stateOfOrigin,\n            lga,\n            maritalStatus,\n            religion\n        }))\n       \n    }\n\n    return (\n        <>\n         \n        <Row className='ml-4 mr-4 py-4 profilescreen-wrapper'>\n                <Col md={3} className='d-none d-md-block'>\n\n        <div className=\"fixednavbar-wrapper\">\n            <div className='employee-details'>\n                <p>{userInfo.role}</p>\n                <p>{userInfo.email}</p>\n            </div>\n        <Nav className=\"flex-column\">\n        <NavLink to='/admin/userlist' exact className=\"nav-link\" activeClassName='active-here'>\n          <i class=\"fas fa-home pr-3\"></i>\n          All Employees\n        </NavLink>\n        <NavLink to={`/admin/user/${userId}/edit`} exact className=\"nav-link\" activeClassName='active-here'>\n          <i class=\"far fa-id-card pr-3\"></i>\n          Details\n        </NavLink>\n        <NavLink to={`/admin/profile/${userId}/edit`} exact className=\"nav-link\" activeClassName='active-here'>\n          <i class=\"fas fa-user-circle pr-3\"></i>\n          Profile\n        </NavLink>\n        <NavLink to={`/admin/education/${userId}/edit`} exact className=\"nav-link\" activeClassName='active-here'>\n          <i class=\"fas fa-user-friends pr-3\"></i>\n          Education\n        </NavLink>\n        <NavLink to={`/admin/nextofkin/${userId}/edit`} exact className=\"nav-link\" activeClassName='active-here'>\n          <i class=\"fas fa-graduation-cap pr-3\"></i>\n          Employee Next Of Kin\n        </NavLink>\n        </Nav>\n        </div>\n        </Col>\n\n        <Col className='col-xs-12 col-md-8'>\n                <AdminHeader\n                    userId\n                />\n                <h1 className='page-header'>My Profile</h1>\n               \n               \n                {successUpdate && <Message variant='success'>Profile Updated</Message>}\n                {loading && <Loader />}\n                {\n                    profile ? (\n                        <Form onSubmit={submitHandler}>\n                        <Form.Row>\n                            <Form.Group  className=\"col-md-4\" controlId='dateOfBirth'>\n                                <Form.Label>Date Of Birth</Form.Label>\n                                <Form.Control \n                                type='date' \n                            \n                                placeholder='Enter Date Of Birth'\n                                value={dob}\n                                onChange={(e) => setDob(e.target.value)}\n                                ></Form.Control>\n                            </Form.Group>\n                            <Form.Group  className=\"col-md-4\" controlId='contactNo'>\n                                <Form.Label>Contact Number</Form.Label>\n                                <Form.Control \n                                type='contactNo' \n                                \n                                placeholder='Enter Contact Number'\n                                value={contactNo}\n                                onChange={(e) => setContactNo(e.target.value)}\n                                ></Form.Control>\n                            </Form.Group>\n                            <Form.Group  className=\"col-md-4\" controlId='privateEmail'>\n                                <Form.Label>Email Address</Form.Label>\n                                <Form.Control \n                                type='privateEmail' \n                                \n                                placeholder='Enter Private Email'\n                                value={privateEmail}\n                                onChange={(e) => setPrivateEmail(e.target.value)}\n                                ></Form.Control>\n                            </Form.Group>\n                            \n                    \n                            \n                        </Form.Row>\n                        <Form.Row>\n                            <Form.Group className=\"col-md-4\" controlId=\"formGridGender\">\n                                <Form.Label>Gender</Form.Label>\n                                <Form.Control \n                                as=\"select\" \n                                size='sm'\n                                value={gender}\n                                onChange={(e) => setGender(e.target.value)}>\n                                    <option value=''>Select...</option>\n                                    <option value='MALE'>MALE</option>\n                                    <option value='FEMALE'>FEMALE</option>\n                                </Form.Control>\n                            </Form.Group>\n                            <Form.Group  className=\"col-md-4\" controlId='dateOfJoining'>\n                                <Form.Label>Date Of Joining</Form.Label>\n                                <Form.Control \n                                type='date' \n                                placeholder='Enter Date Of Joining'\n                                value={dateOfJoining}\n                                onChange={(e) => setDateOfJoining(e.target.value)}\n                                ></Form.Control>\n                            </Form.Group>\n                            <Form.Group  className=\"col-md-4\" controlId='dateOfLastPromotion'>\n                                <Form.Label>Date Of Last Promotion</Form.Label>\n                                <Form.Control \n                                type='date' \n                                placeholder='Enter Date Of Last Promotion'\n                                value={dateOfLastPromotion}\n                                onChange={(e) => setDateOfLastPromotion(e.target.value)}\n                                ></Form.Control>\n                            </Form.Group>\n                        \n                    \n                            \n                        </Form.Row>\n                        <Form.Row>\n                            \n                            <Form.Group  className=\"col-md-4\" controlId='address'>\n                                <Form.Label>Address</Form.Label>\n                                <Form.Control \n                                type='address' \n                                placeholder='Enter Address'\n                                value={address}\n                                onChange={(e) => setAddress(e.target.value)}\n                                ></Form.Control>\n                            </Form.Group>\n                            <Form.Group  className=\"col-md-4\" controlId='stateOfOrigin'>\n                                <Form.Label>State Of Origin</Form.Label>\n                                <Form.Control \n                                type='stateOfOrigin' \n                                placeholder='Enter State Of Origin'\n                                value={stateOfOrigin}\n                                onChange={(e) => setStateOfOrigin(e.target.value)}\n                                ></Form.Control>\n                            </Form.Group>\n                            <Form.Group  className=\"col-md-4\" controlId='lga'>\n                                <Form.Label>LGA</Form.Label>\n                                <Form.Control \n                                type='lga' \n                                placeholder='Enter LGA'\n                                value={lga}\n                                onChange={(e) => setLga(e.target.value)}\n                                ></Form.Control>\n                            </Form.Group>\n                        \n                    \n                            \n                        </Form.Row>\n                        <Form.Row>\n                            \n                            <Form.Group  className=\"col-md-6\" controlId='maritalStatus'>\n                                <Form.Label>Marital Status</Form.Label>\n                                <Form.Control \n                                type='maritalStatus' \n                                placeholder='Enter Marital Status'\n                                value={maritalStatus}\n                                onChange={(e) => setMaritalStatus(e.target.value)}\n                                ></Form.Control>\n                            </Form.Group>\n                            <Form.Group  className=\"col-md-6\" controlId='religion'>\n                                <Form.Label>Religion</Form.Label>\n                                <Form.Control \n                                type='religion' \n                                placeholder='Enter Religion'\n                                value={religion}\n                                onChange={(e) => setReligion(e.target.value)}\n                                ></Form.Control>\n                            </Form.Group>\n                        \n                    \n                            \n                        </Form.Row>\n                    \n                        <Button type='submit' variant='primary' className='btn-block'>\n                            Update\n                        </Button>\n                    </Form>\n                    ) : (\n                        <Form onSubmit={createsubmitHandler}>\n                            <Form.Row>\n                                <Form.Group  className=\"col-md-4\" controlId='dateOfBirth'>\n                                    <Form.Label>Date Of Birth</Form.Label>\n                                    <Form.Control \n                                    type='date' \n                                \n                                    placeholder='Enter Date Of Birth'\n                                    value={dob}\n                                    onChange={(e) => setDob(e.target.value)}\n                                    ></Form.Control>\n                                </Form.Group>\n                                <Form.Group  className=\"col-md-4\" controlId='contactNo'>\n                                    <Form.Label>Contact Number</Form.Label>\n                                    <Form.Control \n                                    type='contactNo' \n                                    \n                                    placeholder='Enter Contact Number'\n                                    value={contactNo}\n                                    onChange={(e) => setContactNo(e.target.value)}\n                                    ></Form.Control>\n                                </Form.Group>\n                                <Form.Group  className=\"col-md-4\" controlId='privateEmail'>\n                                    <Form.Label>Email Address</Form.Label>\n                                    <Form.Control \n                                    type='privateEmail' \n                                    \n                                    placeholder='Enter Private Email'\n                                    value={privateEmail}\n                                    onChange={(e) => setPrivateEmail(e.target.value)}\n                                    ></Form.Control>\n                                </Form.Group>\n                                \n                        \n                                \n                            </Form.Row>\n                            <Form.Row>\n                                <Form.Group className=\"col-md-4\" controlId=\"formGridGender\">\n                                    <Form.Label>Gender</Form.Label>\n                                    <Form.Control \n                                    as=\"select\" \n                                    size='sm'\n                                    value={gender}\n                                    onChange={(e) => setGender(e.target.value)}>\n                                        <option value=''>Select...</option>\n                                        <option value='MALE'>MALE</option>\n                                        <option value='FEMALE'>FEMALE</option>\n                                    </Form.Control>\n                                </Form.Group>\n                                <Form.Group  className=\"col-md-4\" controlId='dateOfJoining'>\n                                    <Form.Label>Date Of Joining</Form.Label>\n                                    <Form.Control \n                                    type='date' \n                                    placeholder='Enter Date Of Joining'\n                                    value={dateOfJoining}\n                                    onChange={(e) => setDateOfJoining(e.target.value)}\n                                    ></Form.Control>\n                                </Form.Group>\n                                <Form.Group  className=\"col-md-4\" controlId='dateOfLastPromotion'>\n                                    <Form.Label>Date Of Last Promotion</Form.Label>\n                                    <Form.Control \n                                    type='date' \n                                    placeholder='Enter Date Of Last Promotion'\n                                    value={dateOfLastPromotion}\n                                    onChange={(e) => setDateOfLastPromotion(e.target.value)}\n                                    ></Form.Control>\n                                </Form.Group>\n                            \n                        \n                                \n                            </Form.Row>\n                            <Form.Row>\n                                \n                                <Form.Group  className=\"col-md-4\" controlId='address'>\n                                    <Form.Label>Address</Form.Label>\n                                    <Form.Control \n                                    type='address' \n                                    placeholder='Enter Address'\n                                    value={address}\n                                    onChange={(e) => setAddress(e.target.value)}\n                                    ></Form.Control>\n                                </Form.Group>\n                                <Form.Group  className=\"col-md-4\" controlId='stateOfOrigin'>\n                                    <Form.Label>State Of Origin</Form.Label>\n                                    <Form.Control \n                                    type='stateOfOrigin' \n                                    placeholder='Enter State Of Origin'\n                                    value={stateOfOrigin}\n                                    onChange={(e) => setStateOfOrigin(e.target.value)}\n                                    ></Form.Control>\n                                </Form.Group>\n                                <Form.Group  className=\"col-md-4\" controlId='lga'>\n                                    <Form.Label>LGA</Form.Label>\n                                    <Form.Control \n                                    type='lga' \n                                    placeholder='Enter LGA'\n                                    value={lga}\n                                    onChange={(e) => setLga(e.target.value)}\n                                    ></Form.Control>\n                                </Form.Group>\n                            \n                        \n                                \n                            </Form.Row>\n                            <Form.Row>\n                                \n                                <Form.Group  className=\"col-md-6\" controlId='maritalStatus'>\n                                    <Form.Label>Marital Status</Form.Label>\n                                    <Form.Control \n                                    type='maritalStatus' \n                                    placeholder='Enter Marital Status'\n                                    value={maritalStatus}\n                                    onChange={(e) => setMaritalStatus(e.target.value)}\n                                    ></Form.Control>\n                                </Form.Group>\n                                <Form.Group  className=\"col-md-6\" controlId='religion'>\n                                    <Form.Label>Religion</Form.Label>\n                                    <Form.Control \n                                    type='religion' \n                                    placeholder='Enter Religion'\n                                    value={religion}\n                                    onChange={(e) => setReligion(e.target.value)}\n                                    ></Form.Control>\n                                </Form.Group>\n                            \n                        \n                                \n                            </Form.Row>\n                        \n                            <Button type='submit' variant='primary' className='btn-block'>\n                                Create\n                            </Button>\n                        </Form>\n                    )\n                }\n                \n            </Col>\n        </Row>\n        </>\n    )\n}\n\nexport default AdminProfileScreen;\n","C:\\Users\\Pascal Ojinnaka\\Documents\\React\\human-resource-mgt-responsive\\src\\screens\\AdminNextOfKinScreen.js",["217","218","219","220"],"import React, { useState, useEffect } from 'react'\nimport { Link, NavLink } from 'react-router-dom'\nimport { Button, Row, Col, Nav, Form } from 'react-bootstrap'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { createNextOfKin, createNextOfKinEmpId, getNextOfKinDetailsEmpId, updateNextOfKin } from '../actions/nextOfKinActions'\nimport { NOK_CREATE_EMPLOYEE_RESET, NOK_DETAILS_EMPLOYEE_RESET, NOK_UPDATE_RESET } from '../constants/nextOfKinConstants'\nimport '../styles/FixedNavbar.css';\nimport AdminHeader from '../components/AdminHeader';\nimport '../styles/ProfileScreen.css';\n\nconst AdminNextOfKinScreen = ({ history, match }) => {\n    const userId = match.params.id\n    \n    const [firstname, setFirstname] = useState('')\n    const [lastname, setLastname] = useState('')\n    const [contact, setContact] = useState('')\n    const [email, setEmail] = useState('')\n    const [relationship, setRelationship] = useState('')\n    \n\n    const dispatch = useDispatch()\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const nextOfKinDetailsEmpId = useSelector(state => state.nextOfKinDetailsEmpId)\n    const { loading, nextOfKin } = nextOfKinDetailsEmpId\n\n    const nextOfKinUpdate = useSelector(state => state.nextOfKinUpdate)\n    const { error:errorUpdate, success:successUpdate } = nextOfKinUpdate\n\n    const nextOfKinCreateEmpId = useSelector(state => state.nextOfKinCreateEmpId)\n    const { error:errorCreate, success:successCreate } = nextOfKinCreateEmpId\n\n  \n\n    useEffect(() => {\n\n        if(userInfo  && (userInfo.role === 'hr' || userInfo.role === 'hr-manager' || userInfo.role === 'admin')) {\n            \n            if(successUpdate || successCreate) {\n                dispatch({\n                    type: NOK_UPDATE_RESET\n                })\n                dispatch({\n                    type: NOK_DETAILS_EMPLOYEE_RESET\n                })\n                dispatch({\n                    type: NOK_CREATE_EMPLOYEE_RESET\n                })\n                history.push('/home')\n            } else {\n            if(!nextOfKin || nextOfKin.employee  !== userId ) {\n                dispatch(getNextOfKinDetailsEmpId(userId))\n            } else {\n                setFirstname(nextOfKin.firstname)\n                setLastname(nextOfKin.lastname)\n                setContact(nextOfKin.contact)\n                setEmail(nextOfKin.email)\n                setRelationship(nextOfKin.relationship)\n\n            }\n        }\n        } else {\n            history.push('/')\n    }\n    }, [dispatch, history, nextOfKin, successUpdate, userId, successCreate, userInfo])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(updateNextOfKin({\n            _id: nextOfKin._id,\n            firstname,\n            lastname,\n            contact,\n            email,\n            relationship\n        }))\n       \n       \n        \n    }\n\n    const createsubmitHandler= (e) => {\n        e.preventDefault()\n        dispatch(createNextOfKinEmpId({\n            employee: userId,\n            firstname,\n            lastname,\n            contact,\n            email,\n            relationship\n        }))\n       \n       \n        \n    }\n\n\n    return (\n        <>\n         \n        <Row className='ml-4 mr-4 py-4 profilescreen-wrapper'>\n                <Col md={3} className='d-none d-md-block'>\n        <div className=\"fixednavbar-wrapper\">\n            <div className='employee-details'>\n                <p>{userInfo.role}</p>\n                <p>{userInfo.email}</p>\n            </div>\n        <Nav className=\"flex-column\">\n        <NavLink to='/admin/userlist' exact className=\"nav-link\" activeClassName='active-here'>\n          <i class=\"fas fa-home pr-3\"></i>\n          All Employees\n        </NavLink>\n        <NavLink to={`/admin/user/${userId}/edit`} exact className=\"nav-link\" activeClassName='active-here'>\n          <i class=\"far fa-id-card pr-3\"></i>\n          Details\n        </NavLink>\n        <NavLink to={`/admin/profile/${userId}/edit`} exact className=\"nav-link\" activeClassName='active-here'>\n          <i class=\"fas fa-user-circle pr-3\"></i>\n          Profile\n        </NavLink>\n        <NavLink to={`/admin/education/${userId}/edit`} exact className=\"nav-link\" activeClassName='active-here'>\n          <i class=\"fas fa-user-friends pr-3\"></i>\n          Education\n        </NavLink>\n        <NavLink to={`/admin/nextofkin/${userId}/edit`} exact className=\"nav-link\" activeClassName='active-here'>\n          <i class=\"fas fa-graduation-cap pr-3\"></i>\n          Employee Next Of Kin\n        </NavLink>\n        </Nav>\n        </div>\n        </Col>\n\n        <Col className='col-xs-12 col-md-8'>\n                <AdminHeader\n                    userId\n                />\n                <h1 className='page-header'>Next Of Kin</h1>\n               \n                \n                {successUpdate && <Message variant='success'>Profile Updated</Message>}\n                {loading && <Loader />}\n                {\n                    nextOfKin ? (\n                        <Form onSubmit={submitHandler}>\n                        <Form.Row>\n                            <Form.Group  className=\"col-md-4\" controlId='firstname'>\n                                <Form.Label>Firstname</Form.Label>\n                                <Form.Control \n                                type='firstname' \n                            \n                                placeholder='Enter Firstname'\n                                value={firstname}\n                                onChange={(e) => setFirstname(e.target.value)}\n                                ></Form.Control>\n                            </Form.Group>\n                            <Form.Group  className=\"col-md-4\" controlId='lastname'>\n                                <Form.Label>Lastname</Form.Label>\n                                <Form.Control \n                                type='lastname' \n                                \n                                placeholder='Enter Lastname'\n                                value={lastname}\n                                onChange={(e) => setLastname(e.target.value)}\n                                ></Form.Control>\n                            </Form.Group>\n                            <Form.Group  className=\"col-md-4\" controlId='email'>\n                                <Form.Label>Email Address</Form.Label>\n                                <Form.Control \n                                type='email' \n                                \n                                placeholder='Enter  Email'\n                                value={email}\n                                onChange={(e) => setEmail(e.target.value)}\n                                ></Form.Control>\n                            </Form.Group>\n                            \n                    \n                            \n                        </Form.Row>\n                        <Form.Row>\n                            \n                            <Form.Group  className=\"col-md-6\" controlId='contact'>\n                                <Form.Label>Contact Number</Form.Label>\n                                <Form.Control \n                                type='contact' \n                                placeholder='Enter Contact'\n                                value={contact}\n                                onChange={(e) => setContact(e.target.value)}\n                                ></Form.Control>\n                            </Form.Group>\n                            <Form.Group  className=\"col-md-6\" controlId='relationship'>\n                                <Form.Label>Relationship</Form.Label>\n                                <Form.Control \n                                type='relationship' \n                                placeholder='Enter Relationship'\n                                value={relationship}\n                                onChange={(e) => setRelationship(e.target.value)}\n                                ></Form.Control>\n                            </Form.Group>\n                        \n                    \n                            \n                        </Form.Row>\n                        \n                    \n                        <Button type='submit' variant='primary' className='btn-block'>\n                            Update\n                        </Button>\n                    </Form>\n                    ) : (\n                        <Form onSubmit={createsubmitHandler}>\n                        <Form.Row>\n                            <Form.Group  className=\"col-md-4\" controlId='firstname'>\n                                <Form.Label>Firstname</Form.Label>\n                                <Form.Control \n                                type='firstname' \n                            \n                                placeholder='Enter Firstname'\n                                value={firstname}\n                                onChange={(e) => setFirstname(e.target.value)}\n                                ></Form.Control>\n                            </Form.Group>\n                            <Form.Group  className=\"col-md-4\" controlId='lastname'>\n                                <Form.Label>Lastname</Form.Label>\n                                <Form.Control \n                                type='lastname' \n                                \n                                placeholder='Enter Lastname'\n                                value={lastname}\n                                onChange={(e) => setLastname(e.target.value)}\n                                ></Form.Control>\n                            </Form.Group>\n                            <Form.Group  className=\"col-md-4\" controlId='email'>\n                                <Form.Label>Email Address</Form.Label>\n                                <Form.Control \n                                type='email' \n                                \n                                placeholder='Enter  Email'\n                                value={email}\n                                onChange={(e) => setEmail(e.target.value)}\n                                ></Form.Control>\n                            </Form.Group>\n                            \n                    \n                            \n                        </Form.Row>\n                        <Form.Row>\n                            \n                            <Form.Group  className=\"col-md-6\" controlId='contact'>\n                                <Form.Label>Contact Number</Form.Label>\n                                <Form.Control \n                                type='contact' \n                                placeholder='Enter Contact'\n                                value={contact}\n                                onChange={(e) => setContact(e.target.value)}\n                                ></Form.Control>\n                            </Form.Group>\n                            <Form.Group  className=\"col-md-6\" controlId='relationship'>\n                                <Form.Label>Relationship</Form.Label>\n                                <Form.Control \n                                type='relationship' \n                                placeholder='Enter Relationship'\n                                value={relationship}\n                                onChange={(e) => setRelationship(e.target.value)}\n                                ></Form.Control>\n                            </Form.Group>\n                        \n                    \n                            \n                        </Form.Row>\n                        \n                    \n                        <Button type='submit' variant='primary' className='btn-block'>\n                            Create\n                        </Button>\n                    </Form>\n                    )\n                }\n                \n            </Col>\n        </Row>\n        </>\n    )\n}\n\nexport default AdminNextOfKinScreen\n","C:\\Users\\Pascal Ojinnaka\\Documents\\React\\human-resource-mgt-responsive\\src\\screens\\AdminEducationScreen.js",["221","222","223","224","225","226","227"],"import React, { useState, useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { NavLink } from 'react-router-dom'\nimport { Table, Button, Row, Col, Nav, Form } from 'react-bootstrap'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { EDUCATION_CREATE_EMPLOYEE_RESET, EDUCATION_CREATE_RESET, EDUCATION_DETAILS_EMPLOYEE_RESET, EDUCATION_UPDATE_RESET } from '../constants/educationConstants'\nimport { createEducation, createEducationEmpId, getEducationDetailsEmpId, updateEducation } from '../actions/educationActions'\nimport '../styles/FixedNavbar.css';\nimport AdminHeader from '../components/AdminHeader';\nimport '../styles/ProfileScreen.css';\n\nconst AdminEducationScreen = ({ history, match }) => {\n    const userId = match.params.id\n\n    const [institutionAttended, setInstitutionAttended] = useState('')\n    const [courseOfStudy, setCourseOfStudy] = useState('')\n    const [yearOfGraduation, setYearOfGraduation] = useState('')\n    const [professionalMembership, setProfessionalMembership] = useState('')\n\n    const [message, setMessage] = useState(null)\n\n    const dispatch = useDispatch()\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const educationDetailsEmpId = useSelector(state => state.educationDetailsEmpId)\n    const { loading, error, education } = educationDetailsEmpId\n\n    const educationUpdate = useSelector(state => state.educationUpdate)\n    const { success:successUpdate } = educationUpdate\n\n    const educationCreateEmpId = useSelector(state => state.educationCreateEmpId)\n    const { success:successCreate } = educationCreateEmpId\n    \n  \n\n    useEffect(() => {\n\n        if(userInfo  && (userInfo.role === 'hr' || userInfo.role === 'hr-manager' || userInfo.role === 'admin')) {\n            \n            if(successUpdate || successCreate) {\n                dispatch({\n                    type: EDUCATION_UPDATE_RESET\n                })\n                dispatch({\n                    type: EDUCATION_DETAILS_EMPLOYEE_RESET\n                })\n                dispatch({\n                    type: EDUCATION_CREATE_EMPLOYEE_RESET\n                })\n                history.push('/home')\n            } else {\n            if(!education || education.employee  !== userId) {\n                dispatch(getEducationDetailsEmpId(userId))\n            } else {\n                setInstitutionAttended(education.institutionAttended)\n                setCourseOfStudy(education.courseOfStudy)\n                setProfessionalMembership(education.professionalMembership)\n                setYearOfGraduation(education.yearOfGraduation)\n            }\n        }\n        } else {\n            history.push('/')\n    }\n    }, [dispatch, history, education, userId, successCreate, successUpdate, userInfo])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(updateEducation({\n            _id: education._id,\n            institutionAttended,\n            courseOfStudy,\n            professionalMembership,\n            yearOfGraduation\n        }))\n       \n    }\n\n    const createsubmitHandler= (e) => {\n        e.preventDefault()\n        dispatch(createEducationEmpId({\n            employee: userId,\n           institutionAttended,\n           courseOfStudy,\n           professionalMembership,\n           yearOfGraduation\n        }))\n       \n    }\n\n    return (\n        <>\n         \n        <Row className='ml-4 mr-4 py-4 profilescreen-wrapper'>\n                <Col md={3} className='d-none d-md-block'>\n        <div className=\"fixednavbar-wrapper\">\n            <div className='employee-details'>\n                <p>{userInfo.role}</p>\n                <p>{userInfo.email}</p>\n            </div>\n        <Nav className=\"flex-column\">\n        <NavLink to='/admin/userlist' exact className=\"nav-link\" activeClassName='active-here'>\n          <i class=\"fas fa-home pr-3\"></i>\n          All Employees\n        </NavLink>\n        <NavLink to={`/admin/user/${userId}/edit`} exact className=\"nav-link\" activeClassName='active-here'>\n          <i class=\"far fa-id-card pr-3\"></i>\n          Details\n        </NavLink>\n        <NavLink to={`/admin/profile/${userId}/edit`} exact className=\"nav-link\" activeClassName='active-here'>\n          <i class=\"fas fa-user-circle pr-3\"></i>\n          Profile\n        </NavLink>\n        <NavLink to={`/admin/education/${userId}/edit`} exact className=\"nav-link\" activeClassName='active-here'>\n          <i class=\"fas fa-user-friends pr-3\"></i>\n          Education\n        </NavLink>\n        <NavLink to={`/admin/nextofkin/${userId}/edit`} exact className=\"nav-link\" activeClassName='active-here'>\n          <i class=\"fas fa-graduation-cap pr-3\"></i>\n          Employee Next Of Kin\n        </NavLink>\n        </Nav>\n        </div>\n        </Col>\n\n        <Col className='col-xs-12 col-md-8'>\n                <AdminHeader\n                    userId\n                />\n                <h1 className='page-header'>Education</h1>\n               \n               \n                {successUpdate && <Message variant='success'>Profile Updated</Message>}\n                {loading && <Loader />}\n                {\n                    education ? (\n                        <Form onSubmit={submitHandler}>\n                        <Form.Row>\n                            <Form.Group  className=\"col-md-6\" controlId='institutionAttended'>\n                                <Form.Label>Institution Attended</Form.Label>\n                                <Form.Control \n                                type='institutionAttended' \n                            \n                                placeholder='Enter Institution Attended'\n                                value={institutionAttended}\n                                onChange={(e) => setInstitutionAttended(e.target.value)}\n                                ></Form.Control>\n                            </Form.Group>\n                            <Form.Group  className=\"col-md-6\" controlId='courseOfStudy'>\n                                <Form.Label>Course Of Study</Form.Label>\n                                <Form.Control \n                                type='courseOfStudy' \n                                \n                                placeholder='Enter Course Of Study'\n                                value={courseOfStudy}\n                                onChange={(e) => setCourseOfStudy(e.target.value)}\n                                ></Form.Control>\n                            </Form.Group>\n                            \n                            \n                    \n                            \n                        </Form.Row>\n                        <Form.Row>\n                            <Form.Group  className=\"col-md-6\" controlId='professionalMembership'>\n                                <Form.Label>Professional Membership</Form.Label>\n                                <Form.Control \n                                type='professionalMembership' \n                                \n                                placeholder='Enter Professional Membership'\n                                value={professionalMembership}\n                                onChange={(e) => setProfessionalMembership(e.target.value)}\n                                ></Form.Control>\n                            </Form.Group>\n                            <Form.Group  className=\"col-md-6\" controlId='yearOfGraduation'>\n                                <Form.Label>Year Of Graduation</Form.Label>\n                                <Form.Control \n                                type='date' \n                            \n                                placeholder='Enter Year Of Graduation'\n                                value={yearOfGraduation}\n                                onChange={(e) => setYearOfGraduation(e.target.value)}\n                                ></Form.Control>\n                            </Form.Group>\n                        </Form.Row>\n                        \n                    \n                        <Button type='submit' variant='primary' className='btn-block'>\n                            Update\n                        </Button>\n                    </Form>\n                    ) : (\n                        <Form onSubmit={createsubmitHandler}>\n                        <Form.Row>\n                            <Form.Group  className=\"col-md-6\" controlId='institutionAttended'>\n                                <Form.Label>Institution Attended</Form.Label>\n                                <Form.Control \n                                type='institutionAttended' \n                            \n                                placeholder='Enter Institution ATtended'\n                                value={institutionAttended}\n                                onChange={(e) => setInstitutionAttended(e.target.value)}\n                                ></Form.Control>\n                            </Form.Group>\n                            <Form.Group  className=\"col-md-6\" controlId='courseOfStudy'>\n                                <Form.Label>Course Of Study</Form.Label>\n                                <Form.Control \n                                type='courseOfStudy' \n                                \n                                placeholder='Enter Course Of Study'\n                                value={courseOfStudy}\n                                onChange={(e) => setCourseOfStudy(e.target.value)}\n                                ></Form.Control>\n                            </Form.Group>\n                            \n                            \n                    \n                            \n                        </Form.Row>\n                        <Form.Row>\n                            <Form.Group  className=\"col-md-6\" controlId='professionalMembership'>\n                                <Form.Label>Professional Membership</Form.Label>\n                                <Form.Control \n                                type='professionalMembership' \n                                \n                                placeholder='Enter Professional Membership'\n                                value={professionalMembership}\n                                onChange={(e) => setProfessionalMembership(e.target.value)}\n                                ></Form.Control>\n                            </Form.Group>\n                            <Form.Group  className=\"col-md-6\" controlId='yearOfGraduation'>\n                                <Form.Label>Year Of Graduation</Form.Label>\n                                <Form.Control \n                                type='date' \n                            \n                                placeholder='Enter Year Of Graduation'\n                                value={yearOfGraduation}\n                                onChange={(e) => setYearOfGraduation(e.target.value)}\n                                ></Form.Control>\n                            </Form.Group>\n                        </Form.Row>\n                        \n                        \n                    \n                        <Button type='submit' variant='primary' className='btn-block'>\n                            Create\n                        </Button>\n                    </Form>\n                    )\n                }\n                \n            </Col>\n        </Row>\n        </>\n    )\n}\n\nexport default AdminEducationScreen\n","C:\\Users\\Pascal Ojinnaka\\Documents\\React\\human-resource-mgt-responsive\\src\\screens\\MyLeaveApplicationScreen.js",["228","229","230","231","232","233"],"import React, { useState, useEffect } from 'react'\nimport { Button, Row, Col, ListGroup, Form } from 'react-bootstrap'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { useDispatch, useSelector } from 'react-redux'\nimport FixedNavbar from '../components/FixedNavbar';\nimport Header from '../components/Header';\n\nconst MyLeaveApplicationScreen = ({ history }) => {\n    const dispatch = useDispatch()\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    useEffect(() => {\n\n        if(!userInfo) {\n            history.push('/')\n        } \n    }, [dispatch, history, userInfo])\n\n    return (\n        <>\n            \n        <Row className='ml-4 mr-4 py-4 profilescreen-wrapper'>\n        <Col md={3} className='d-none d-md-block'>\n            <FixedNavbar />\n        </Col>\n        <Col className='col-xs-12 col-md-8'>\n            <Header />\n            <h1 className='page-header'>Page Still in Development</h1>\n        </Col>\n        </Row>\n        </>\n    )\n}\n\nexport default MyLeaveApplicationScreen;\n","C:\\Users\\Pascal Ojinnaka\\Documents\\React\\human-resource-mgt-responsive\\src\\screens\\ForgotPasswordScreen.js",["234","235","236","237","238"],"import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { ScaleLoader } from 'react-spinners'\r\nimport Message from '../components/Message'\r\nimport { Container, Row, Col, Form, Button } from 'react-bootstrap';\r\nimport LoginImg from '../img/call-center.jpg';\r\nimport Logo from '../img/outcess-logo.png';\r\nimport '../styles/LoginScreen.css';\r\nimport { css } from '@emotion/css'\r\nimport { forgotPassword } from '../actions/userActions'\r\nimport { USER_FORGOT_PASSWORD_RESET } from '../constants/userConstants'\r\n\r\n//Can be a string as well. Need to ensure each key-value pair ends with ;\r\nconst override = css`\r\n  display: block;\r\n  margin: 0 auto;\r\n  border-color: red;\r\n`;\r\n\r\nconst ForgotPasswordScreen = ({ history }) => {\r\n    const [email, setEmail] = useState('')\r\n    const [message, setMessage] = useState(null)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userForgotPassword = useSelector(state => state.userForgotPassword)\r\n    const { loading, error, success, user } = userForgotPassword\r\n\r\n    useEffect(() => {\r\n        \r\n        if(success) {\r\n            // dispatch({\r\n            //     type: USER_FORGOT_PASSWORD_RESET\r\n            // })\r\n            //history.push('/')\r\n            //history.push(`/resetpassword/${user.resetToken}`)\r\n            setMessage(`If an account exists for ${email} you will recieve password reset instructions`)\r\n        }\r\n        \r\n    }, [success])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        //dispatch \r\n        dispatch(forgotPassword(email))\r\n        //history.push('/')\r\n        //setMessage(`If an account exists for ${email} you will recieve password reset instructions`)\r\n    }\r\n\r\n    return (\r\n        <div className=\"loginpage-wrapper\">\r\n            <Container className='loginpage-container'>\r\n                <Row>\r\n                <Col className='d-none d-lg-block col-xs-none col-lg-6'>\r\n                    <div className='login-img'>\r\n                    <img src={LoginImg}/>\r\n                    </div>\r\n                </Col>\r\n                <Col className='loginform-col col-xs-12 col-lg-6'>\r\n                    <div className='logo'>\r\n                    <img src={Logo}/>\r\n                    </div>\r\n                    {error && <Message variant='danger'>{error}</Message>}\r\n                    {success ? <Message variant='success'>{message}</Message> : <div></div>}\r\n                    <Form onSubmit={submitHandler}>\r\n                    <Form.Group className='form-group email' controlId=\"formBasicEmail\">\r\n                        <i class=\"fas fa-user pr-3\"></i>\r\n                        <Form.Label className='login-label'>Email address</Form.Label>\r\n                        <Form.Control \r\n                            autoFocus \r\n                            type=\"email\" \r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                            placeholder=\"Enter email\" />\r\n                    </Form.Group>\r\n\r\n                    <Button type='submit' variant='primary' className='btn btn-block'>\r\n                        Submit\r\n                    </Button>\r\n                    <Link to='/' className='forget-password'>\r\n                        <p>Sign-In</p>\r\n                    </Link>\r\n                    </Form>\r\n                    <div className=\"loading\">\r\n                  \r\n                    {loading &&\r\n                        <ScaleLoader\r\n                        css={override}\r\n                        sizeUnit={\"px\"}\r\n                        size={150}\r\n                        color={\"#123abc\"}\r\n                        loading={loading}\r\n                        />\r\n                    }\r\n                    </div>\r\n                </Col>\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ForgotPasswordScreen\r\n","C:\\Users\\Pascal Ojinnaka\\Documents\\React\\human-resource-mgt-responsive\\src\\constants\\profileConstants.js",[],"C:\\Users\\Pascal Ojinnaka\\Documents\\React\\human-resource-mgt-responsive\\src\\constants\\educationConstants.js",[],"C:\\Users\\Pascal Ojinnaka\\Documents\\React\\human-resource-mgt-responsive\\src\\constants\\nextOfKinConstants.js",[],"C:\\Users\\Pascal Ojinnaka\\Documents\\React\\human-resource-mgt-responsive\\src\\constants\\userConstants.js",[],"C:\\Users\\Pascal Ojinnaka\\Documents\\React\\human-resource-mgt-responsive\\src\\components\\Message.js",[],"C:\\Users\\Pascal Ojinnaka\\Documents\\React\\human-resource-mgt-responsive\\src\\components\\Loader.js",[],"C:\\Users\\Pascal Ojinnaka\\Documents\\React\\human-resource-mgt-responsive\\src\\components\\SearchBox.js",[],"C:\\Users\\Pascal Ojinnaka\\Documents\\React\\human-resource-mgt-responsive\\src\\components\\Paginate.js",[],"C:\\Users\\Pascal Ojinnaka\\Documents\\React\\human-resource-mgt-responsive\\src\\components\\Header.js",[],"C:\\Users\\Pascal Ojinnaka\\Documents\\React\\human-resource-mgt-responsive\\src\\components\\FixedNavbar.js",[],"C:\\Users\\Pascal Ojinnaka\\Documents\\React\\human-resource-mgt-responsive\\src\\components\\AdminHeader.js",[],"C:\\Users\\Pascal Ojinnaka\\Documents\\React\\human-resource-mgt-responsive\\src\\actions\\userActions.js",[],"C:\\Users\\Pascal Ojinnaka\\Documents\\React\\human-resource-mgt-responsive\\src\\actions\\nextOfKinActions.js",[],"C:\\Users\\Pascal Ojinnaka\\Documents\\React\\human-resource-mgt-responsive\\src\\actions\\profileActions.js",[],"C:\\Users\\Pascal Ojinnaka\\Documents\\React\\human-resource-mgt-responsive\\src\\actions\\educationActions.js",[],"C:\\Users\\Pascal Ojinnaka\\Documents\\React\\human-resource-mgt-responsive\\src\\shared\\baseUrl.js",[],"C:\\Users\\Pascal Ojinnaka\\Documents\\React\\human-resource-mgt-responsive\\src\\screens\\ResetPasswordScreen.js",["239","240"],{"ruleId":"241","replacedBy":"242"},{"ruleId":"243","replacedBy":"244"},{"ruleId":"245","severity":1,"message":"246","line":43,"column":8,"nodeType":"247","endLine":43,"endColumn":27,"suggestions":"248"},{"ruleId":"249","severity":1,"message":"250","line":55,"column":15,"nodeType":"251","endLine":55,"endColumn":36},{"ruleId":"249","severity":1,"message":"250","line":60,"column":15,"nodeType":"251","endLine":60,"endColumn":32},{"ruleId":"252","severity":1,"message":"253","line":2,"column":34,"nodeType":"254","messageId":"255","endLine":2,"endColumn":43},{"ruleId":"252","severity":1,"message":"256","line":3,"column":10,"nodeType":"254","messageId":"255","endLine":3,"endColumn":14},{"ruleId":"252","severity":1,"message":"257","line":5,"column":8,"nodeType":"254","messageId":"255","endLine":5,"endColumn":14},{"ruleId":"252","severity":1,"message":"258","line":34,"column":13,"nodeType":"254","messageId":"255","endLine":34,"endColumn":20},{"ruleId":"252","severity":1,"message":"253","line":2,"column":34,"nodeType":"254","messageId":"255","endLine":2,"endColumn":43},{"ruleId":"252","severity":1,"message":"256","line":3,"column":10,"nodeType":"254","messageId":"255","endLine":3,"endColumn":14},{"ruleId":"252","severity":1,"message":"256","line":2,"column":10,"nodeType":"254","messageId":"255","endLine":2,"endColumn":14},{"ruleId":"252","severity":1,"message":"253","line":3,"column":34,"nodeType":"254","messageId":"255","endLine":3,"endColumn":43},{"ruleId":"252","severity":1,"message":"256","line":2,"column":10,"nodeType":"254","messageId":"255","endLine":2,"endColumn":14},{"ruleId":"252","severity":1,"message":"259","line":3,"column":10,"nodeType":"254","messageId":"255","endLine":3,"endColumn":15},{"ruleId":"252","severity":1,"message":"256","line":2,"column":10,"nodeType":"254","messageId":"255","endLine":2,"endColumn":14},{"ruleId":"252","severity":1,"message":"253","line":3,"column":34,"nodeType":"254","messageId":"255","endLine":3,"endColumn":43},{"ruleId":"252","severity":1,"message":"260","line":22,"column":21,"nodeType":"254","messageId":"255","endLine":22,"endColumn":31},{"ruleId":"252","severity":1,"message":"256","line":2,"column":10,"nodeType":"254","messageId":"255","endLine":2,"endColumn":14},{"ruleId":"252","severity":1,"message":"253","line":3,"column":28,"nodeType":"254","messageId":"255","endLine":3,"endColumn":37},{"ruleId":"252","severity":1,"message":"256","line":2,"column":10,"nodeType":"254","messageId":"255","endLine":2,"endColumn":14},{"ruleId":"252","severity":1,"message":"253","line":3,"column":28,"nodeType":"254","messageId":"255","endLine":3,"endColumn":37},{"ruleId":"252","severity":1,"message":"256","line":2,"column":10,"nodeType":"254","messageId":"255","endLine":2,"endColumn":14},{"ruleId":"252","severity":1,"message":"253","line":3,"column":28,"nodeType":"254","messageId":"255","endLine":3,"endColumn":37},{"ruleId":"252","severity":1,"message":"256","line":3,"column":10,"nodeType":"254","messageId":"255","endLine":3,"endColumn":14},{"ruleId":"252","severity":1,"message":"253","line":5,"column":35,"nodeType":"254","messageId":"255","endLine":5,"endColumn":44},{"ruleId":"252","severity":1,"message":"256","line":2,"column":10,"nodeType":"254","messageId":"255","endLine":2,"endColumn":14},{"ruleId":"252","severity":1,"message":"253","line":3,"column":28,"nodeType":"254","messageId":"255","endLine":3,"endColumn":37},{"ruleId":"252","severity":1,"message":"261","line":40,"column":19,"nodeType":"254","messageId":"255","endLine":40,"endColumn":30},{"ruleId":"252","severity":1,"message":"262","line":43,"column":19,"nodeType":"254","messageId":"255","endLine":43,"endColumn":30},{"ruleId":"252","severity":1,"message":"256","line":2,"column":10,"nodeType":"254","messageId":"255","endLine":2,"endColumn":14},{"ruleId":"252","severity":1,"message":"263","line":7,"column":10,"nodeType":"254","messageId":"255","endLine":7,"endColumn":25},{"ruleId":"252","severity":1,"message":"261","line":32,"column":19,"nodeType":"254","messageId":"255","endLine":32,"endColumn":30},{"ruleId":"252","severity":1,"message":"262","line":35,"column":19,"nodeType":"254","messageId":"255","endLine":35,"endColumn":30},{"ruleId":"252","severity":1,"message":"264","line":2,"column":10,"nodeType":"254","messageId":"255","endLine":2,"endColumn":23},{"ruleId":"252","severity":1,"message":"259","line":4,"column":10,"nodeType":"254","messageId":"255","endLine":4,"endColumn":15},{"ruleId":"252","severity":1,"message":"265","line":8,"column":43,"nodeType":"254","messageId":"255","endLine":8,"endColumn":65},{"ruleId":"252","severity":1,"message":"266","line":9,"column":10,"nodeType":"254","messageId":"255","endLine":9,"endColumn":25},{"ruleId":"252","severity":1,"message":"267","line":22,"column":12,"nodeType":"254","messageId":"255","endLine":22,"endColumn":19},{"ruleId":"252","severity":1,"message":"260","line":22,"column":21,"nodeType":"254","messageId":"255","endLine":22,"endColumn":31},{"ruleId":"252","severity":1,"message":"268","line":30,"column":22,"nodeType":"254","messageId":"255","endLine":30,"endColumn":27},{"ruleId":"252","severity":1,"message":"269","line":1,"column":17,"nodeType":"254","messageId":"255","endLine":1,"endColumn":25},{"ruleId":"252","severity":1,"message":"270","line":2,"column":10,"nodeType":"254","messageId":"255","endLine":2,"endColumn":16},{"ruleId":"252","severity":1,"message":"253","line":2,"column":28,"nodeType":"254","messageId":"255","endLine":2,"endColumn":37},{"ruleId":"252","severity":1,"message":"271","line":2,"column":39,"nodeType":"254","messageId":"255","endLine":2,"endColumn":43},{"ruleId":"252","severity":1,"message":"272","line":3,"column":8,"nodeType":"254","messageId":"255","endLine":3,"endColumn":15},{"ruleId":"252","severity":1,"message":"257","line":4,"column":8,"nodeType":"254","messageId":"255","endLine":4,"endColumn":14},{"ruleId":"252","severity":1,"message":"273","line":12,"column":10,"nodeType":"254","messageId":"255","endLine":12,"endColumn":36},{"ruleId":"252","severity":1,"message":"274","line":28,"column":38,"nodeType":"254","messageId":"255","endLine":28,"endColumn":42},{"ruleId":"245","severity":1,"message":"275","line":41,"column":8,"nodeType":"247","endLine":41,"endColumn":17,"suggestions":"276"},{"ruleId":"249","severity":1,"message":"250","line":57,"column":21,"nodeType":"251","endLine":57,"endColumn":42},{"ruleId":"249","severity":1,"message":"250","line":62,"column":21,"nodeType":"251","endLine":62,"endColumn":38},{"ruleId":"249","severity":1,"message":"250","line":58,"column":21,"nodeType":"251","endLine":58,"endColumn":42},{"ruleId":"249","severity":1,"message":"250","line":63,"column":21,"nodeType":"251","endLine":63,"endColumn":38},"no-native-reassign",["277"],"no-negated-in-lhs",["278"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["279"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'ListGroup' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'Loader' is defined but never used.","'loading' is assigned a value but never used.","'Table' is defined but never used.","'setMessage' is assigned a value but never used.","'errorUpdate' is assigned a value but never used.","'errorCreate' is assigned a value but never used.","'createNextOfKin' is defined but never used.","'LinkContainer' is defined but never used.","'EDUCATION_CREATE_RESET' is defined but never used.","'createEducation' is defined but never used.","'message' is assigned a value but never used.","'error' is assigned a value but never used.","'useState' is defined but never used.","'Button' is defined but never used.","'Form' is defined but never used.","'Message' is defined but never used.","'USER_FORGOT_PASSWORD_RESET' is defined but never used.","'user' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'email'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setMessage' needs the current value of 'email'.",["280"],"no-global-assign","no-unsafe-negation",{"desc":"281","fix":"282"},{"desc":"283","fix":"284"},"Update the dependencies array to be: [dispatch, history, userInfo]",{"range":"285","text":"286"},"Update the dependencies array to be: [email, success]",{"range":"287","text":"288"},[1244,1263],"[dispatch, history, userInfo]",[1489,1498],"[email, success]"]

[{"C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-responsive\\src\\index.js":"1","C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-responsive\\src\\store.js":"2","C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-responsive\\src\\App.js":"3","C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-responsive\\src\\reportWebVitals.js":"4","C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-responsive\\src\\reducers\\userReducers.js":"5","C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-responsive\\src\\reducers\\profileReducers.js":"6","C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-responsive\\src\\reducers\\nextOfKinReducer.js":"7","C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-responsive\\src\\reducers\\educationReducers.js":"8","C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-responsive\\src\\screens\\LoginScreen.js":"9","C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-responsive\\src\\screens\\DashboardScreen.js":"10","C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-responsive\\src\\screens\\PasswordScreen.js":"11","C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-responsive\\src\\screens\\StaffListScreen.js":"12","C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-responsive\\src\\screens\\StaffCreateScreen.js":"13","C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-responsive\\src\\screens\\StaffEditScreen.js":"14","C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-responsive\\src\\screens\\HomeScreen.js":"15","C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-responsive\\src\\screens\\RoleEditScreen.js":"16","C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-responsive\\src\\screens\\ProfileScreen.js":"17","C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-responsive\\src\\screens\\NextOfKinScreen.js":"18","C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-responsive\\src\\screens\\EducationScreen.js":"19","C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-responsive\\src\\screens\\HrHomeScreen.js":"20","C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-responsive\\src\\screens\\AdminProfileScreen.js":"21","C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-responsive\\src\\screens\\AdminNextOfKinScreen.js":"22","C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-responsive\\src\\screens\\AdminEducationScreen.js":"23","C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-responsive\\src\\screens\\MyLeaveApplicationScreen.js":"24","C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-responsive\\src\\constants\\nextOfKinConstants.js":"25","C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-responsive\\src\\constants\\profileConstants.js":"26","C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-responsive\\src\\constants\\educationConstants.js":"27","C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-responsive\\src\\constants\\userConstants.js":"28","C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-responsive\\src\\actions\\userActions.js":"29","C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-responsive\\src\\actions\\educationActions.js":"30","C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-responsive\\src\\actions\\nextOfKinActions.js":"31","C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-responsive\\src\\components\\Message.js":"32","C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-responsive\\src\\components\\Loader.js":"33","C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-responsive\\src\\components\\FixedNavbar.js":"34","C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-responsive\\src\\components\\Header.js":"35","C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-responsive\\src\\components\\SearchBox.js":"36","C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-responsive\\src\\components\\Paginate.js":"37","C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-responsive\\src\\components\\AdminHeader.js":"38","C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-responsive\\src\\components\\MyLeave.js":"39","C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-responsive\\src\\components\\AdminHeader2.js":"40","C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-responsive\\src\\actions\\profileActions.js":"41","C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-responsive\\src\\shared\\baseUrl.js":"42"},{"size":614,"mtime":1613721842962,"results":"43","hashOfConfig":"44"},{"size":2473,"mtime":1613721843002,"results":"45","hashOfConfig":"44"},{"size":2557,"mtime":1613721842805,"results":"46","hashOfConfig":"44"},{"size":375,"mtime":1613721842974,"results":"47","hashOfConfig":"44"},{"size":5352,"mtime":1613721842972,"results":"48","hashOfConfig":"44"},{"size":3186,"mtime":1613721842970,"results":"49","hashOfConfig":"44"},{"size":3050,"mtime":1613721842967,"results":"50","hashOfConfig":"44"},{"size":3286,"mtime":1613721842965,"results":"51","hashOfConfig":"44"},{"size":3511,"mtime":1613721842989,"results":"52","hashOfConfig":"44"},{"size":7609,"mtime":1613721842984,"results":"53","hashOfConfig":"44"},{"size":6759,"mtime":1613721842992,"results":"54","hashOfConfig":"44"},{"size":5292,"mtime":1613721842999,"results":"55","hashOfConfig":"44"},{"size":9788,"mtime":1613721842996,"results":"56","hashOfConfig":"44"},{"size":9772,"mtime":1613721842998,"results":"57","hashOfConfig":"44"},{"size":4130,"mtime":1613721842986,"results":"58","hashOfConfig":"44"},{"size":7642,"mtime":1613721842995,"results":"59","hashOfConfig":"44"},{"size":19778,"mtime":1613721842994,"results":"60","hashOfConfig":"44"},{"size":10820,"mtime":1613721842991,"results":"61","hashOfConfig":"44"},{"size":8674,"mtime":1613721842985,"results":"62","hashOfConfig":"44"},{"size":2752,"mtime":1613721842987,"results":"63","hashOfConfig":"44"},{"size":21389,"mtime":1613721842982,"results":"64","hashOfConfig":"44"},{"size":12280,"mtime":1613721842979,"results":"65","hashOfConfig":"44"},{"size":11713,"mtime":1613721842977,"results":"66","hashOfConfig":"44"},{"size":1182,"mtime":1613732773193,"results":"67","hashOfConfig":"44"},{"size":1238,"mtime":1613721842853,"results":"68","hashOfConfig":"44"},{"size":1398,"mtime":1613721842855,"results":"69","hashOfConfig":"44"},{"size":1480,"mtime":1613721842851,"results":"70","hashOfConfig":"44"},{"size":2116,"mtime":1613721842856,"results":"71","hashOfConfig":"44"},{"size":10069,"mtime":1613721842815,"results":"72","hashOfConfig":"44"},{"size":5076,"mtime":1613721842807,"results":"73","hashOfConfig":"44"},{"size":4898,"mtime":1613721842811,"results":"74","hashOfConfig":"44"},{"size":295,"mtime":1613721842831,"results":"75","hashOfConfig":"44"},{"size":504,"mtime":1613721842828,"results":"76","hashOfConfig":"44"},{"size":2884,"mtime":1613721842824,"results":"77","hashOfConfig":"44"},{"size":6258,"mtime":1613721842826,"results":"78","hashOfConfig":"44"},{"size":892,"mtime":1613721842844,"results":"79","hashOfConfig":"44"},{"size":765,"mtime":1613721842836,"results":"80","hashOfConfig":"44"},{"size":4981,"mtime":1613721842821,"results":"81","hashOfConfig":"44"},{"size":3357,"mtime":1613740506373,"results":"82","hashOfConfig":"44"},{"size":6135,"mtime":1613721842822,"results":"83","hashOfConfig":"44"},{"size":4980,"mtime":1613721842813,"results":"84","hashOfConfig":"44"},{"size":62,"mtime":1613721843000,"results":"85","hashOfConfig":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"oy01i9",{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"88"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"88"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"88"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"88"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"88"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"88"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"88"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"88"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"88"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"88"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"88"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"88"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"88"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"88"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-responsive\\src\\index.js",[],["185","186"],"C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-responsive\\src\\store.js",[],"C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-responsive\\src\\App.js",[],"C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-responsive\\src\\reportWebVitals.js",[],"C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-responsive\\src\\reducers\\userReducers.js",[],"C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-responsive\\src\\reducers\\profileReducers.js",[],"C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-responsive\\src\\reducers\\nextOfKinReducer.js",[],"C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-responsive\\src\\reducers\\educationReducers.js",[],"C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-responsive\\src\\screens\\LoginScreen.js",["187","188"],"import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { ScaleLoader } from 'react-spinners'\r\nimport Message from '../components/Message'\r\nimport { Container, Row, Col, Form, Button } from 'react-bootstrap';\r\nimport LoginImg from '../img/call-center.jpg';\r\nimport Logo from '../img/outcess-logo.png';\r\nimport '../styles/LoginScreen.css';\r\nimport { login } from '../actions/userActions'\r\nimport { css } from '@emotion/css'\r\n\r\n\r\n//Can be a string as well. Need to ensure each key-value pair ends with ;\r\nconst override = css`\r\n  display: block;\r\n  margin: 0 auto;\r\n  border-color: red;\r\n`;\r\n\r\nconst LoginTestScreen = ({ history }) => {\r\n\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { loading, error, userInfo } = userLogin\r\n\r\n    \r\n    \r\n    useEffect(() => {\r\n        if(userInfo) {\r\n            history.push('/home')\r\n        }\r\n    }, [history, userInfo])\r\n    \r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(login(email, password))\r\n    }\r\n  return (\r\n    <div className=\"loginpage-wrapper\">\r\n      <Container className='loginpage-container'>\r\n        <Row>\r\n          <Col className='d-none d-lg-block col-xs-none col-lg-6'>\r\n            <div className='login-img'>\r\n              <img src={LoginImg}/>\r\n            </div>\r\n          </Col>\r\n          <Col className='loginform-col col-xs-12 col-lg-6'>\r\n            <div className='logo'>\r\n              <img src={Logo}/>\r\n            </div>\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            <Form onSubmit={submitHandler}>\r\n              <Form.Group className='form-group email' controlId=\"formBasicEmail\">\r\n                <i class=\"fas fa-user pr-3\"></i>\r\n                <Form.Label className='login-label'>Email address</Form.Label>\r\n                <Form.Control \r\n                    autoFocus \r\n                    type=\"email\" \r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                    placeholder=\"Enter email\" />\r\n              </Form.Group>\r\n\r\n              <Form.Group className='form-group password' controlId=\"formBasicPassword\">\r\n                <i class=\"fas fa-unlock pr-3\"></i>\r\n                <Form.Label className='login-label'>Password</Form.Label>\r\n                <Form.Control \r\n                    type=\"password\" \r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                    placeholder=\"Password\" />\r\n              </Form.Group>\r\n              <Button type='submit' variant='primary' className='btn btn-block'>\r\n                    Sign In\r\n                </Button>\r\n                <Link to='/forgotpassword' className='forget-password'>\r\n                    <p>Forgot password?</p>\r\n                </Link>\r\n            </Form>\r\n            <div className=\"loading\">\r\n              {loading &&\r\n                <ScaleLoader\r\n                css={override}\r\n                sizeUnit={\"px\"}\r\n                size={150}\r\n                color={\"#123abc\"}\r\n                loading={loading}\r\n                />\r\n              }\r\n              \r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoginTestScreen;","C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-responsive\\src\\screens\\DashboardScreen.js",["189","190","191","192"],"import React, { useEffect, useState } from 'react'\r\nimport { Row, Col, Button, Form, ListGroup } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\r\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\r\nimport FixedNavbar from '../components/FixedNavbar';\r\nimport '../styles/ProfileScreen.css';\r\nimport Header from '../components/Header';\r\n\r\nconst DashboardScreen = ({ history }) => {\r\n    const [firstname, setFirstname] = useState('')\r\n    const [middlename, setMiddlename] = useState('')\r\n    const [lastname, setLastname] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState(null)\r\n\r\n   \r\n    const [employeeCode, setEmployeeCode] = useState('')\r\n   \r\n    \r\n    const [department, setDepartment] = useState('')\r\n\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { loading, error, user } = userDetails\r\n\r\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\r\n    const { success } = userUpdateProfile\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if(!userInfo) {\r\n            history.push('/')\r\n        } else {\r\n           if(success) {\r\n               dispatch({\r\n                   type: USER_UPDATE_PROFILE_RESET\r\n               })\r\n               history.push('/')\r\n           } else {\r\n            if(!user || !user.firstname) {\r\n                dispatch(getUserDetails('me'))\r\n            } else {\r\n                setFirstname(user.firstname)\r\n                setLastname(user.lastname)\r\n                setMiddlename(user.middlename)\r\n             \r\n               \r\n                setDepartment(user.department)\r\n               \r\n                setEmployeeCode(user.employeeCode)\r\n\r\n            }\r\n        }\r\n        }\r\n        \r\n    }, [dispatch, history, user, success, userInfo])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if(password !== confirmPassword) {\r\n            setMessage('Passwords do not match')\r\n        } else {\r\n        dispatch(updateUserProfile({\r\n            _id: user._id,\r\n            firstname,\r\n            lastname,\r\n            password,\r\n            middlename,\r\n           \r\n          \r\n        }))\r\n         }\r\n        \r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Row className='ml-4 mr-4 py-4 profilescreen-wrapper'>\r\n            <Col md={3} className='d-none d-md-block'>\r\n                <FixedNavbar />\r\n            </Col>\r\n            <Col className='col-xs-12 col-md-8'>\r\n                <Header />\r\n                <h1>Personal Details</h1>\r\n                {message && <Message variant='danger'>{message}</Message>}\r\n                {error && <Message variant='danger'>{error}</Message>}\r\n                {success && <Message variant='success'>Profile Updated</Message>}\r\n              \r\n                <Form onSubmit={submitHandler}>\r\n                    <Form.Row>\r\n                        <Form.Group  className=\"col-md-4\" controlId='firstname'>\r\n                            <Form.Label>First Name</Form.Label>\r\n                            <Form.Control \r\n                            type='firstname' \r\n                           \r\n                            placeholder='Enter First name'\r\n                            value={firstname}\r\n                            onChange={(e) => setFirstname(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group  className=\"col-md-4\" controlId='middlename'>\r\n                            <Form.Label>Middle Name</Form.Label>\r\n                            <Form.Control \r\n                            type='middlename' \r\n                            \r\n                            placeholder='Enter Middle name'\r\n                            value={middlename}\r\n                            onChange={(e) => setMiddlename(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group  className=\"col-md-4\" controlId='lastname'>\r\n                            <Form.Label>Last Name</Form.Label>\r\n                            <Form.Control \r\n                            type='lastname' \r\n                            \r\n                            placeholder='Enter Last name'\r\n                            value={lastname}\r\n                            onChange={(e) => setLastname(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n                        \r\n                  \r\n                        \r\n                    </Form.Row>\r\n                    <Form.Row>\r\n                        <Form.Group  className=\"col-md-6\" controlId='department'>\r\n                            <Form.Label>Department</Form.Label>\r\n                            <Form.Control \r\n                            type='department' \r\n                           readOnly\r\n                            placeholder='Enter Department'\r\n                            value={department}\r\n                            onChange={(e) => setDepartment(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group  className=\"col-md-6\" controlId='employeeCode'>\r\n                            <Form.Label>Employee Code</Form.Label>\r\n                            <Form.Control \r\n                            type='employeeCode' \r\n                            readOnly\r\n                            placeholder='Enter Employee Code'\r\n                            value={employeeCode}\r\n                            onChange={(e) => setEmployeeCode(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n                      \r\n                  \r\n                        \r\n                    </Form.Row>\r\n                    <Form.Row>\r\n                    <Form.Group className=\"col-md-6\" controlId='password'>\r\n                        <Form.Label>New Password</Form.Label>\r\n                        <Form.Control \r\n                        type='password' \r\n                        placeholder='Enter Password'\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group className=\"col-md-6\" controlId='confirrmPassword'>\r\n                        <Form.Label>Confirm Password</Form.Label>\r\n                        <Form.Control \r\n                        type='password' \r\n                        placeholder='Confirm Password'\r\n                        value={confirmPassword}\r\n                        onChange={(e) => setConfirmPassword(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n                    </Form.Row>\r\n                   \r\n                    <Button type='submit' variant='primary' className='btn-block'>\r\n                        Update\r\n                    </Button>\r\n                </Form>\r\n                \r\n            </Col>\r\n            \r\n        </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DashboardScreen;\r\n","C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-responsive\\src\\screens\\PasswordScreen.js",["193","194"],"import React, { useState, useEffect } from 'react'\r\nimport { Form, Button, Row, Col, ListGroup, Toast, Nav } from 'react-bootstrap'\r\nimport { Link, NavLink} from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport { updateUserPassword } from '../actions/userActions'\r\nimport { USER_UPDATE_PASSWORD_RESET } from '../constants/userConstants';\r\nimport '../styles/FixedNavbar.css';\r\nimport AdminHeader2 from '../components/AdminHeader2';\r\nimport '../styles/ProfileScreen.css';\r\n\r\n\r\nconst PasswordScreen = ({ history }) => {\r\n    const [currentPassword, setCurrentPassword] = useState('')\r\n    const [newPassword, setNewPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState(null)\r\n    const [show, setShow] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userUpdatePassword = useSelector(state => state.userUpdatePassword)\r\n    const { error, success } = userUpdatePassword\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    useEffect(() => {\r\n        if(!userInfo) {\r\n            history.push('/login')\r\n        } else {\r\n            if(success) {\r\n                dispatch({\r\n                    type: USER_UPDATE_PASSWORD_RESET\r\n                })\r\n                history.push('/home')\r\n            }\r\n        }\r\n    }, [dispatch, success, history, userInfo])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if(newPassword !== confirmPassword) {\r\n            setMessage('Passwords do not match')\r\n        } else {\r\n            //Dispatch\r\n            dispatch(updateUserPassword({\r\n                currentPassword,\r\n                newPassword\r\n            }))\r\n            //setShow(true)\r\n        }\r\n        \r\n        \r\n    }\r\n\r\n    return (\r\n        <>\r\n        <Row>\r\n        <Col xs={6}>\r\n        <Toast onClose={() => setShow(false)} show={show} delay={3000} autohide>\r\n          <Toast.Header>\r\n            <img\r\n              src=\"holder.js/20x20?text=%20\"\r\n              className=\"rounded mr-2\"\r\n              alt=\"\"\r\n            />\r\n            <strong className=\"mr-auto\">Password Update</strong>\r\n            <small>1 mins ago</small>\r\n          </Toast.Header>\r\n          <Toast.Body>Your Password has been updated!</Toast.Body>\r\n        </Toast>\r\n         </Col>\r\n         </Row>\r\n\r\n        <Row className='ml-4 mr-4 py-4 profilescreen-wrapper'>\r\n          <Col md={3} className='d-none d-md-block'>\r\n        <div className=\"fixednavbar-wrapper\">\r\n      <div className='employee-details'>\r\n        <p>{userInfo.role}</p>\r\n        <p>{userInfo.email}</p>\r\n      </div>\r\n            <Nav className=\"flex-column\">\r\n            <NavLink to='/home' exact className=\"nav-link\" activeClassName='active-here'>\r\n          <i class=\"fas fa-home pr-4\"></i>\r\n          Home\r\n        </NavLink>\r\n        <NavLink to='/dashboard' exact className=\"nav-link\" activeClassName='active-here'>\r\n          <i class=\"far fa-id-card pr-4\"></i>\r\n          Personal details\r\n        </NavLink>\r\n        <NavLink to='/updatepassword' exact className=\"nav-link\" activeClassName='active-here'>\r\n        <i class=\"fas fa-unlock pr-4\"></i>\r\n          Update Password\r\n        </NavLink>\r\n        <NavLink to='/dashboard' exact className=\"nav-link\" activeClassName='active-here'>\r\n          <i class=\"fas fa-graduation-cap pr-4\"></i>\r\n          Education\r\n        </NavLink>\r\n        <NavLink to='/myleave' exact className=\"nav-link\" activeClassName='active-here'>\r\n          <i class=\"fas fa-sign-out-alt pr-4\"></i>\r\n          My Leave\r\n        </NavLink>\r\n                {\r\n                    (userInfo.role === 'hr') && (\r\n                        <>\r\n                        <div className='admin-section'>\r\n            <p>Admin Section</p>\r\n          </div>\r\n          <NavLink to='/myleave' exact className=\"nav-link\" activeClassName='active-here'>\r\n            <i class=\"fas fa-box-open pr-4\"></i>\r\n            Leave Applications\r\n          </NavLink>\r\n          <NavLink to='/admin/userlist' exact className=\"nav-link\" activeClassName='active-here'>\r\n            <i class=\"fas fa-users pr-4\"></i>\r\n            All Employees\r\n          </NavLink>\r\n          <NavLink to='/admin/register' exact className=\"nav-link\" activeClassName='active-here'>\r\n            <i class=\"fas fa-user-plus pr-4\"></i>\r\n            Register Employee\r\n          </NavLink>\r\n                        </>\r\n                    )\r\n                }\r\n            </Nav>\r\n            </div>\r\n            </Col>\r\n\r\n\r\n            <Col className='col-xs-12 col-md-8'>\r\n                <AdminHeader2 />\r\n                <h1 className='page-header'>Update Password</h1>\r\n                {message && <Message variant='danger'>{message}</Message>}\r\n                {error && <Message variant='danger'>{error}</Message>}\r\n                {success && <Message variant='success'>Password Updated</Message>}\r\n               \r\n                <Form onSubmit={submitHandler}>\r\n                    <Form.Group controlId='crrentPassword'>\r\n                        <Form.Label>Current Password</Form.Label>\r\n                        <Form.Control \r\n                        type='password' \r\n                        placeholder='Enter Password'\r\n                        value={currentPassword}\r\n                        onChange={(e) => setCurrentPassword(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n                    \r\n                    <Form.Group controlId='newpassword'>\r\n                        <Form.Label>New Password</Form.Label>\r\n                        <Form.Control \r\n                        type='password' \r\n                        placeholder='Enter New Password'\r\n                        value={newPassword}\r\n                        onChange={(e) => setNewPassword(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group controlId='confirrmPassword'>\r\n                        <Form.Label>Confirm Password</Form.Label>\r\n                        <Form.Control \r\n                        type='password' \r\n                        placeholder='Confirm Password'\r\n                        value={confirmPassword}\r\n                        onChange={(e) => setConfirmPassword(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n                    <Button type='submit' variant='primary'>\r\n                        Update\r\n                    </Button>\r\n                </Form>\r\n            </Col>\r\n            \r\n        </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PasswordScreen;\r\n","C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-responsive\\src\\screens\\StaffListScreen.js",[],"C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-responsive\\src\\screens\\StaffCreateScreen.js",["195","196"],"import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col, ListGroup } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { listUsers, register } from '../actions/userActions';\r\nimport { USER_REGISTER_RESET } from '../constants/userConstants';\r\nimport FixedNavbar from '../components/FixedNavbar';\r\nimport '../styles/StaffCreateScreen.css';\r\nimport Header from '../components/Header';\r\n\r\nconst StaffCreateScreen = ({ history }) => {\r\n    const [firstname, setFirstname] = useState('')\r\n    const [middlename, setMiddlename] = useState('')\r\n    const [lastname, setLastname] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [department, setDepartment] = useState('')\r\n    const [employeeCode, setEmployeeCode] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [role, setRole] = useState('')\r\n    \r\n    const [message, setMessage] = useState(null)\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userRegister = useSelector(state => state.userRegister)\r\n    const { loading, error, success:successRegister } = userRegister\r\n\r\n    useEffect(() => {\r\n        if (userInfo  && (userInfo.role === 'hr' || userInfo.role === 'hr-manager' || userInfo.role === 'admin')) {\r\n           \r\n            if(successRegister) {\r\n                dispatch({\r\n                    type: USER_REGISTER_RESET\r\n                })\r\n                history.push('/admin/userlist')\r\n            }\r\n        } else {\r\n            history.push('/')\r\n        }\r\n        \r\n    }, [dispatch, history, userInfo, successRegister])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if(password !== confirmPassword) {\r\n            setMessage('Passwords do not match')\r\n        } else {\r\n            dispatch(register(\r\n                firstname,\r\n                middlename,\r\n                lastname,\r\n                email,\r\n                department,\r\n                employeeCode,\r\n                role,\r\n                password\r\n            ))\r\n            dispatch(listUsers())\r\n            history.push('/admin/userlist')\r\n        }\r\n        \r\n    }\r\n\r\n  return (\r\n    <>\r\n    \t<Row className='ml-4 mr-4 py-4 profilescreen-wrapper'>\r\n        <Col md={3} className='d-none d-md-block'>\r\n            <FixedNavbar />\r\n        </Col>\r\n        <Col className='col-xs-12 col-md-8'>\r\n                <Header />\r\n                <h1 className='page-header'>Register a New Employee</h1>\r\n                {message && <Message variant='danger'>{message}</Message>}\r\n                {error && <Message variant='danger'>{error}</Message>}\r\n                {successRegister && <Message variant='success'>Profile Created</Message>}\r\n                {loading && <Loader />}\r\n                <Form onSubmit={submitHandler}>\r\n                    <Form.Row>\r\n                        <Form.Group  className=\"col-md-4\" controlId='firstname'>\r\n                            <Form.Label>First Name</Form.Label>\r\n                            <Form.Control \r\n                            type='firstname' \r\n                           \r\n                            placeholder='Enter First name'\r\n                            value={firstname}\r\n                            onChange={(e) => setFirstname(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group  className=\"col-md-4\" controlId='middlename'>\r\n                            <Form.Label>Middle Name</Form.Label>\r\n                            <Form.Control \r\n                            type='middlename' \r\n                            \r\n                            placeholder='Enter Middle name'\r\n                            value={middlename}\r\n                            onChange={(e) => setMiddlename(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group  className=\"col-md-4\" controlId='lastname'>\r\n                            <Form.Label>Last Name</Form.Label>\r\n                            <Form.Control \r\n                            type='lastname' \r\n                            \r\n                            placeholder='Enter Last name'\r\n                            value={lastname}\r\n                            onChange={(e) => setLastname(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n                    </Form.Row>\r\n                    <Form.Row>\r\n                        <Form.Group  className=\"col-md-4\" controlId='email'>\r\n                            <Form.Label>Email Address</Form.Label>\r\n                            <Form.Control \r\n                            type='email' \r\n                            placeholder='Enter Email'\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                           \r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group className=\"col-md-4\" controlId=\"formGridDepartment\">\r\n                            <Form.Label>Department</Form.Label>\r\n                            <Form.Control \r\n                            as=\"select\" \r\n                            size='sm'\r\n                            value={department}\r\n                            onChange={(e) => setDepartment(e.target.value)}>\r\n                                <option value=''>Select...</option>\r\n                                <option value='IT'>IT</option>\r\n                                <option value='PROJECT'>PROJECT</option>\r\n                                <option value='HR'>HR</option>\r\n                                <option value='MIS'>MIS</option>\r\n                                <option value='QUALITY-ASSURANCE'>QUALITY-ASSURANCE</option>\r\n                                <option value='TRAINING'>TRAINING</option>\r\n                                <option value='ADMIN'>ADMIN</option>\r\n                                <option value='OUTCESS'>OUTCESS</option>\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group  className=\"col-md-4\" controlId='employeeCode'>\r\n                            <Form.Label>Employee Code</Form.Label>\r\n                            <Form.Control \r\n                            type='employeeCode' \r\n                            placeholder='Enter Employee Code'\r\n                            value={employeeCode}\r\n                            onChange={(e) => setEmployeeCode(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n                        \r\n                    </Form.Row>\r\n                    <Form.Row>\r\n                        <Form.Group className=\"col-md-4\" controlId=\"formGridRole\">\r\n                            <Form.Label>Role</Form.Label>\r\n                            <Form.Control \r\n                            as=\"select\" \r\n                            size='sm'\r\n                            value={role}\r\n                            onChange={(e) => setRole(e.target.value)}>\r\n                                <option value=''>Select...</option>\r\n                                <option value='hr'>HR</option>\r\n                                <option value='employee'>EMPLOYEE</option>\r\n                                <option value='supervisor'>SUPERVISOR</option>\r\n                                <option value='admin'>ADMIN</option>\r\n                                <option value='hr-manager'>HR-MANAGER</option>\r\n                                <option value='trainer'>TRAINER</option>\r\n                                <option value='team-lead'>TEAM-LEAD</option>\r\n                                <option value='asst-manager'>ASST-MANAGER</option>\r\n                                <option value='IT-Support'>IT-SUPPORT</option>\r\n                                <option value='agent'>AGENT</option>\r\n                                <option value='manager'>MANAGER</option>\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group className=\"col-md-4\" controlId='password'>\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control \r\n                            type='password' \r\n                            placeholder='Enter Password'\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group className=\"col-md-4\" controlId='confirrmPassword'>\r\n                            <Form.Label>Confirm Password</Form.Label>\r\n                            <Form.Control \r\n                            type='password' \r\n                            placeholder='Confirm Password'\r\n                            value={confirmPassword}\r\n                            onChange={(e) => setConfirmPassword(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n                    </Form.Row>\r\n                    <Button type='submit' variant='primary' className='btn-block'>\r\n                      Register\r\n                    </Button>\r\n                </Form>\r\n            </Col>\r\n            \r\n        </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default StaffCreateScreen\r\n","C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-responsive\\src\\screens\\StaffEditScreen.js",["197"],"import React, { useState, useEffect } from 'react'\r\nimport { Link, NavLink } from 'react-router-dom'\r\nimport { Form, Button, Row, Col, Nav } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport { getUserDetailsById, updateUser } from '../actions/userActions'\r\nimport { USER_DETAILS_ID_RESET, USER_UPDATE_RESET } from '../constants/userConstants'\r\nimport '../styles/FixedNavbar.css';\r\nimport AdminHeader from '../components/AdminHeader';\r\nimport '../styles/ProfileScreen.css';\r\n\r\n\r\nconst StaffEditScreen = ({ history, match }) => {\r\n    const userId = match.params.id\r\n\r\n    const [firstname, setFirstname] = useState('')\r\n    const [middlename, setMiddlename] = useState('')\r\n    const [lastname, setLastname] = useState('')\r\n    const [email, setEmail] = useState('')\r\n   \r\n    \r\n    const [role, setRole] = useState('')    \r\n    const [department, setDepartment] = useState('')    \r\n    const [employeeCode, setEmployeeCode] = useState('')  \r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userUpdate = useSelector(state => state.userUpdate)\r\n    const { success:successUpdate } = userUpdate\r\n\r\n    const userDetailsById = useSelector(state => state.userDetailsById)\r\n    const { error, user } = userDetailsById\r\n\r\n    useEffect(() => {\r\n        if (userInfo  && (userInfo.role === 'hr' || userInfo.role === 'hr-manager' || userInfo.role === 'admin')) {\r\n            \r\n           \r\n            if(successUpdate) {\r\n                dispatch({\r\n                    type: USER_UPDATE_RESET\r\n                })\r\n                dispatch({\r\n                    type: USER_DETAILS_ID_RESET\r\n                })\r\n                history.push('/admin/userlist')\r\n            } else {\r\n            if(!user.employee || user.employee._id !== userId) {\r\n                dispatch(getUserDetailsById(userId))\r\n            } else {\r\n                setFirstname(user.employee.firstname)\r\n                setLastname(user.employee.lastname)\r\n                setMiddlename(user.employee.middlename)\r\n                setEmail(user.employee.email)\r\n                setRole(user.employee.role)\r\n                setDepartment(user.employee.department)\r\n                setEmployeeCode(user.employee.employeeCode)\r\n\r\n            }\r\n        }\r\n        } else {\r\n            history.push('/')\r\n        } \r\n        \r\n    }, [history, userInfo, userId, user, successUpdate, dispatch])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateUser({\r\n            _id: userId,\r\n            firstname,\r\n            middlename,\r\n            lastname,\r\n            email,\r\n           role,\r\n           employeeCode,\r\n           department\r\n        }))\r\n        history.push('/admin/userlist')\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {user.employee  && (\r\n            <Row className='ml-4 mr-4 py-4 profilescreen-wrapper'>\r\n                <Col md={3} className='d-none d-md-block'>\r\n            <div className=\"fixednavbar-wrapper\">\r\n            <div className='employee-details'>\r\n                <p>{userInfo.role}</p>\r\n                <p>{userInfo.email}</p>\r\n            </div>\r\n        <Nav className=\"flex-column\">\r\n        <NavLink to='/admin/userlist' exact className=\"nav-link\" activeClassName='active-here'>\r\n          <i class=\"fas fa-home pr-3\"></i>\r\n          All Employees\r\n        </NavLink>\r\n        <NavLink to={`/admin/user/${userId}/edit`} exact className=\"nav-link\" activeClassName='active-here'>\r\n          <i class=\"far fa-id-card pr-3\"></i>\r\n          Details\r\n        </NavLink>\r\n        <NavLink to={`/admin/profile/${userId}/edit`} exact className=\"nav-link\" activeClassName='active-here'>\r\n          <i class=\"fas fa-user-circle pr-3\"></i>\r\n          Profile\r\n        </NavLink>\r\n        <NavLink to={`/admin/education/${userId}/edit`} exact className=\"nav-link\" activeClassName='active-here'>\r\n          <i class=\"fas fa-graduation-cap pr-3\"></i>\r\n          Education\r\n        </NavLink>\r\n        <NavLink to={`/admin/nextofkin/${userId}/edit`} exact className=\"nav-link\" activeClassName='active-here'>\r\n          <i class=\"fas fa-user-friends pr-3\"></i>\r\n          Employee Next Of Kin\r\n        </NavLink>\r\n        </Nav>\r\n        </div>\r\n            </Col>\r\n           \r\n            <Col className='col-xs-12 col-md-8'>\r\n                <AdminHeader\r\n                    userId\r\n                />\r\n                <h1 className='page-header'>Update {user.employee.firstname}'s Record</h1>\r\n               \r\n                {error && <Message variant='danger'>{error}</Message>}\r\n                {successUpdate && <Message variant='success'>Profile Created</Message>}\r\n                \r\n                <Form onSubmit={submitHandler}>\r\n                    <Form.Row>\r\n                        <Form.Group  className=\"col-md-4\" controlId='firstname'>\r\n                            <Form.Label>First Name</Form.Label>\r\n                            <Form.Control \r\n                            type='firstname' \r\n                           \r\n                            placeholder='Enter First name'\r\n                            value={firstname}\r\n                            onChange={(e) => setFirstname(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group  className=\"col-md-4\" controlId='middlename'>\r\n                            <Form.Label>Middle Name</Form.Label>\r\n                            <Form.Control \r\n                            type='middlename' \r\n                            \r\n                            placeholder='Enter Middle name'\r\n                            value={middlename}\r\n                            onChange={(e) => setMiddlename(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group  className=\"col-md-4\" controlId='lastname'>\r\n                            <Form.Label>Last Name</Form.Label>\r\n                            <Form.Control \r\n                            type='lastname' \r\n                            \r\n                            placeholder='Enter Last name'\r\n                            value={lastname}\r\n                            onChange={(e) => setLastname(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n                    </Form.Row>\r\n                    <Form.Row>\r\n                        <Form.Group  className=\"col-md-4\" controlId='email'>\r\n                            <Form.Label>Email Address</Form.Label>\r\n                            <Form.Control \r\n                            type='email' \r\n                            placeholder='Enter Email'\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                           \r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group className=\"col-md-4\" controlId=\"formGridDepartment\">\r\n                            <Form.Label>Department</Form.Label>\r\n                            <Form.Control \r\n                            as=\"select\" \r\n                            size='sm'\r\n                            value={department}\r\n                            onChange={(e) => setDepartment(e.target.value)}>\r\n                                <option value=''>Select...</option>\r\n                                <option value='IT'>IT</option>\r\n                                <option value='PROJECT'>PROJECT</option>\r\n                                <option value='HR'>HR</option>\r\n                                <option value='OUTCESS'>OUTCESS</option>\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group  className=\"col-md-4\" controlId='employeeCode'>\r\n                            <Form.Label>Employee Code</Form.Label>\r\n                            <Form.Control \r\n                            type='employeeCode' \r\n                            placeholder='Enter Employee Code'\r\n                            value={employeeCode}\r\n                            onChange={(e) => setEmployeeCode(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n                        \r\n                    </Form.Row>\r\n                    <Form.Row>\r\n                        <Form.Group as={Col} controlId=\"formGridRole\">\r\n                            <Form.Label>Role</Form.Label>\r\n                            <Form.Control \r\n                            as=\"select\" \r\n                            size='sm'\r\n                            value={role}\r\n                            onChange={(e) => setRole(e.target.value)}>\r\n                                <option value=''>Select...</option>\r\n                                <option value='hr'>HR</option>\r\n                                <option value='employee'>EMPLOYEE</option>\r\n                                <option value='agent'>AGENT</option>\r\n                                <option value='manager'>MANAGER</option>\r\n                                <option value='admin'>ADMIN</option>\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                        \r\n                    </Form.Row>\r\n                    <Button type='submit' variant='primary' className='btn-block'>\r\n                        Update\r\n                    </Button>\r\n                </Form>\r\n            </Col>\r\n                 \r\n        </Row>\r\n        )\r\n        }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default StaffEditScreen\r\n","C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-responsive\\src\\screens\\HomeScreen.js",[],"C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-responsive\\src\\screens\\RoleEditScreen.js",["198","199","200"],"import React, { useState, useEffect } from 'react'\r\nimport { Link, NavLink } from 'react-router-dom'\r\nimport { Form, Button, Row, Col, ListGroup, Nav } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { getUserDetailsById, updateUser } from '../actions/userActions'\r\nimport { USER_DETAILS_ID_RESET, USER_UPDATE_RESET } from '../constants/userConstants';\r\nimport '../styles/FixedNavbar.css';\r\nimport AdminHeader2 from '../components/AdminHeader2';\r\nimport '../styles/ProfileScreen.css';\r\n\r\n\r\nconst RoleEditScreen = ({ history, match }) => {\r\n    const userId = match.params.id\r\n\r\n    const [role, setRole] = useState('')\r\n    const [employeeCode, setEmployeeCode] = useState('')\r\n    const [isManager, setIsManager] = useState(false)\r\n    const [isActive, setIsActive] = useState(false)\r\n\r\n    const [message, setMessage] = useState(null)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userUpdate = useSelector(state => state.userUpdate)\r\n    const { success:successUpdate } = userUpdate\r\n    \r\n\r\n    const userDetailsById = useSelector(state => state.userDetailsById)\r\n    const { loading, error, user } = userDetailsById\r\n    \r\n    useEffect(() => {\r\n        if (userInfo  && (userInfo.role === 'hr' || userInfo.role === 'hr-manager' || userInfo.role === 'admin')) {\r\n            \r\n           \r\n            if(successUpdate) {\r\n                dispatch({\r\n                    type: USER_UPDATE_RESET\r\n                })\r\n                dispatch({\r\n                    type: USER_DETAILS_ID_RESET\r\n                })\r\n                history.push('/admin/userlist')\r\n            } else {\r\n            if(!user.employee || userId !== user.employee._id) {\r\n                dispatch(getUserDetailsById(userId))\r\n            } else {\r\n                setRole(user.employee.role)\r\n                setIsActive(user.employee.isActive)\r\n                setIsManager(user.employee.isManager)\r\n                setEmployeeCode(user.employee.employeeCode)\r\n            }\r\n        }\r\n        } else {\r\n            history.push('/')\r\n        }\r\n        \r\n        \r\n    }, [history, successUpdate, userInfo, userId, user, dispatch])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateUser({\r\n            _id: userId,\r\n            employeeCode,\r\n            role,\r\n            isActive,\r\n            isManager\r\n        }))\r\n        history.push('/admin/userlist')\r\n        //history.push('/admin/userlist')\r\n    }\r\n    return (\r\n        <>\r\n            {user.employee && (\r\n            <Row className='ml-4 mr-4 py-4 profilescreen-wrapper'>\r\n            <Col md={3} className='d-none d-md-block'>\r\n            <div className=\"fixednavbar-wrapper\">\r\n      <div className='employee-details'>\r\n        <p>{userInfo.role}</p>\r\n        <p>{userInfo.email}</p>\r\n      </div>\r\n            <Nav className=\"flex-column\">\r\n            <NavLink to='/home' exact className=\"nav-link\" activeClassName='active-here'>\r\n          <i class=\"fas fa-home pr-4\"></i>\r\n          Home\r\n        </NavLink>\r\n        <NavLink to='/dashboard' exact className=\"nav-link\" activeClassName='active-here'>\r\n          <i class=\"far fa-id-card pr-4\"></i>\r\n          Personal details\r\n        </NavLink>\r\n        <NavLink to='/updatepassword' exact className=\"nav-link\" activeClassName='active-here'>\r\n        <i class=\"fas fa-unlock pr-4\"></i>\r\n          Update Password\r\n        </NavLink>\r\n        <NavLink to='/dashboard' exact className=\"nav-link\" activeClassName='active-here'>\r\n          <i class=\"fas fa-graduation-cap pr-4\"></i>\r\n          Education\r\n        </NavLink>\r\n        <NavLink to='/myleave' exact className=\"nav-link\" activeClassName='active-here'>\r\n          <i class=\"fas fa-sign-out-alt pr-4\"></i>\r\n          My Leave\r\n        </NavLink>\r\n                {\r\n                    (userInfo.role === 'hr') && (\r\n                        <>\r\n                        <div className='admin-section'>\r\n            <p>Admin Section</p>\r\n          </div>\r\n          <NavLink to='/myleave' exact className=\"nav-link\" activeClassName='active-here'>\r\n            <i class=\"fas fa-box-open pr-4\"></i>\r\n            Leave Applications\r\n          </NavLink>\r\n          <NavLink to='/admin/userlist' exact className=\"nav-link\" activeClassName='active-here'>\r\n            <i class=\"fas fa-users pr-4\"></i>\r\n            All Employees\r\n          </NavLink>\r\n          <NavLink to='/admin/register' exact className=\"nav-link\" activeClassName='active-here'>\r\n            <i class=\"fas fa-user-plus pr-4\"></i>\r\n            Register Employee\r\n          </NavLink>\r\n                        </>\r\n                    )\r\n                }\r\n            </Nav>\r\n            </div>\r\n            </Col>\r\n\r\n\r\n            <Col className='col-xs-12 col-md-8'>\r\n                <AdminHeader2 />\r\n                <h1 className='page-header'>Update {user.employee.email} Role</h1>\r\n                {message && <Message variant='danger'>{message}</Message>}\r\n                {error && <Message variant='danger'>{error}</Message>}\r\n                {successUpdate && <Message variant='success'>Profile Created</Message>}\r\n                {loading && <Loader />}\r\n                <Form onSubmit={submitHandler}>\r\n                    <Form.Group controlId='isActive'>\r\n                        <Form.Check\r\n                        type='checkbox' \r\n                        label='Is Active'\r\n                        checked={isActive}\r\n                        onChange={(e) => setIsActive(e.target.checked)}\r\n                        ></Form.Check>\r\n                    </Form.Group>\r\n                    <Form.Group controlId='isManager'>\r\n                        <Form.Check\r\n                        type='checkbox' \r\n                        label='Is Manager'\r\n                        checked={isManager}\r\n                        onChange={(e) => setIsManager(e.target.checked)}\r\n                        ></Form.Check>\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"formGridRole\">\r\n                            <Form.Label>Role</Form.Label>\r\n                            <Form.Control \r\n                            as=\"select\" \r\n                            size='sm'\r\n                            value={role}\r\n                            onChange={(e) => setRole(e.target.value)}>\r\n                                <option value=''>Select...</option>\r\n                                <option value='hr'>HR</option>\r\n                                <option value='employee'>EMPLOYEE</option>\r\n                                <option value='agent'>AGENT</option>\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group controlId='employeeCode'>\r\n                            <Form.Label>Employee Code</Form.Label>\r\n                            <Form.Control \r\n                            type='employeeCode' \r\n                            placeholder='Enter Employee Code'\r\n                            value={employeeCode}\r\n                            onChange={(e) => setEmployeeCode(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n                    <Button type='submit' variant='primary'>\r\n                        Update\r\n                    </Button>\r\n                </Form>\r\n            </Col>\r\n            </Row>\r\n            )}\r\n            </>\r\n    )\r\n}\r\n\r\nexport default RoleEditScreen\r\n","C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-responsive\\src\\screens\\ProfileScreen.js",["201","202"],"import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Button, Row, Col, ListGroup, Form } from 'react-bootstrap'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { createProfile, getProfileDetails, updateProfile } from '../actions/profileActions'\r\nimport { PROFILE_CREATE_RESET, PROFILE_DETAILS_RESET, PROFILE_UPDATE_RESET } from '../constants/profileConstants'\r\nimport FixedNavbar from '../components/FixedNavbar';\r\nimport Header from '../components/Header';\r\nimport '../styles/ProfileScreen.css';\r\n\r\nconst ProfileScreen = ({ history }) => {\r\n    const [dob, setDob] = useState('')\r\n    const [contactNo, setContactNo] = useState('')\r\n    const [privateEmail, setPrivateEmail] = useState('')\r\n    const [gender, setGender] = useState('')\r\n    const [dateOfJoining, setDateOfJoining] = useState('')\r\n    const [dateOfLastPromotion, setDateOfLastPromotion] = useState('')\r\n    const [address, setAddress] = useState('')\r\n    const [stateOfOrigin, setStateOfOrigin] = useState('')\r\n    const [lga, setLga] = useState('')\r\n    const [maritalStatus, setMaritalStatus] = useState('')\r\n    const [religion, setReligion] = useState('')\r\n\r\n    //const [message, setMessage] = useState(null)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const profileDetails = useSelector(state => state.profileDetails)\r\n    const { loading, profile } = profileDetails\r\n\r\n    const profileUpdate = useSelector(state => state.profileUpdate)\r\n    const {  error:errorUpdate, success:successUpdate } = profileUpdate\r\n\r\n    const profileCreate = useSelector(state => state.profileCreate)\r\n    const { error:errorCreate, success:successCreate } = profileCreate\r\n\r\n  \r\n\r\n    useEffect(() => {\r\n\r\n        if(!userInfo) {\r\n            history.push('/')\r\n        } else {\r\n            if(successUpdate || successCreate) {\r\n                dispatch({\r\n                    type: PROFILE_UPDATE_RESET\r\n                })\r\n                dispatch({\r\n                    type: PROFILE_CREATE_RESET\r\n                })\r\n                dispatch({\r\n                    type: PROFILE_DETAILS_RESET\r\n                })\r\n                history.push('/')\r\n            } else {\r\n            if(!profile || !profile.dob) {\r\n                dispatch(getProfileDetails('me'))\r\n            } else {\r\n                setDob(profile.dob)\r\n                setContactNo(profile.contactNo)\r\n                setPrivateEmail(profile.privateEmail)\r\n                setGender(profile.gender)\r\n                setDateOfJoining(profile.dateOfJoining)\r\n                setDateOfLastPromotion(profile.dateOfLastPromotion)\r\n                setAddress(profile.address)\r\n                setStateOfOrigin(profile.stateOfOrigin)\r\n                setLga(profile.lga)\r\n                setMaritalStatus(profile.maritalStatus)\r\n                setReligion(profile.religion)\r\n\r\n            }\r\n        }\r\n    }\r\n    }, [dispatch, history, profile, successUpdate, successCreate, userInfo])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateProfile({\r\n            _id: profile._id,\r\n            dob,\r\n            contactNo,\r\n            privateEmail,\r\n            gender,\r\n            dateOfJoining,\r\n            dateOfLastPromotion,\r\n            address,\r\n            stateOfOrigin,\r\n            lga,\r\n            maritalStatus,\r\n            religion\r\n        }))\r\n       \r\n       \r\n    }\r\n\r\n\r\n    const createsubmitHandler= (e) => {\r\n        e.preventDefault()\r\n        //Create Actions\r\n        dispatch(createProfile({\r\n          \r\n            dob,\r\n            contactNo,\r\n            privateEmail,\r\n            gender,\r\n            dateOfJoining,\r\n            dateOfLastPromotion,\r\n            address,\r\n            stateOfOrigin,\r\n            lga,\r\n            maritalStatus,\r\n            religion\r\n         }))\r\n        \r\n    }\r\n\r\n    return (\r\n        <>\r\n         \r\n        <Row className='ml-4 mr-4 py-4 profilescreen-wrapper'>\r\n            <Col md={3} className='d-none d-md-block'>\r\n                <FixedNavbar />\r\n            </Col>\r\n            <Col className='col-xs-12 col-md-8'>\r\n            <Header />\r\n                <h1>My Profile</h1>\r\n               \r\n                {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\r\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n                {successUpdate && <Message variant='success'>Profile Updated</Message>}\r\n                {loading && <Loader />}\r\n                {\r\n                    profile ? (\r\n                        <Form onSubmit={submitHandler}>\r\n                        <Form.Row>\r\n                            <Form.Group  className=\"col-md-4\" controlId='dateOfBirth'>\r\n                                <Form.Label>Date Of Birth</Form.Label>\r\n                                <Form.Control \r\n                                type='date'\r\n                                placeholder='Enter Date Of Birth'\r\n                                value={dob.substring(0, 10)}\r\n                                onChange={(e) => setDob(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group  className=\"col-md-4\" controlId='contactNo'>\r\n                                <Form.Label>Contact Number</Form.Label>\r\n                                <Form.Control \r\n                                type='contactNo'\r\n                                placeholder='Enter Contact Number'\r\n                                value={contactNo}\r\n                                onChange={(e) => setContactNo(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group  className=\"col-md-4\" controlId='privateEmail'>\r\n                                <Form.Label>Email Address</Form.Label>\r\n                                <Form.Control \r\n                                type='privateEmail'\r\n                                placeholder='Enter Private Email'\r\n                                value={privateEmail}\r\n                                onChange={(e) => setPrivateEmail(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                            \r\n                    \r\n                            \r\n                        </Form.Row>\r\n                        <Form.Row>\r\n                            <Form.Group className=\"col-md-4\" controlId=\"formGridGender\">\r\n                                <Form.Label>Gender</Form.Label>\r\n                                <Form.Control \r\n                                as=\"select\" \r\n                                size='sm'\r\n                                value={gender}\r\n                                onChange={(e) => setGender(e.target.value)}>\r\n                                    <option value=''>Select...</option>\r\n                                    <option value='MALE'>MALE</option>\r\n                                    <option value='FEMALE'>FEMALE</option>\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group  className=\"col-md-4\" controlId='dateOfJoining'>\r\n                                <Form.Label>Date Of Joining</Form.Label>\r\n                                <Form.Control \r\n                                type='date' \r\n                                placeholder='Enter Date Of Joining'\r\n                                value={dateOfJoining}\r\n                                onChange={(e) => setDateOfJoining(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group  className=\"col-md-4\" controlId='dateOfLastPromotion'>\r\n                                <Form.Label>Date Of Last Promotion</Form.Label>\r\n                                <Form.Control \r\n                                type='date' \r\n                                placeholder='Enter Date Of Last Promotion'\r\n                                value={dateOfLastPromotion}\r\n                                onChange={(e) => setDateOfLastPromotion(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                        \r\n                    \r\n                            \r\n                        </Form.Row>\r\n                        <Form.Row>\r\n                            \r\n                            <Form.Group  className=\"col-md-4\" controlId='address'>\r\n                                <Form.Label>Address</Form.Label>\r\n                                <Form.Control \r\n                                type='address' \r\n                                placeholder='Enter Address'\r\n                                value={address}\r\n                                onChange={(e) => setAddress(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group  className=\"col-md-4\" controlId='stateOfOrigin'>\r\n                                <Form.Label>State Of Origin</Form.Label>\r\n                                <Form.Control \r\n                                type='stateOfOrigin' \r\n                                placeholder='Enter State Of Origin'\r\n                                value={stateOfOrigin}\r\n                                onChange={(e) => setStateOfOrigin(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group  className=\"col-md-4\" controlId='lga'>\r\n                                <Form.Label>LGA</Form.Label>\r\n                                <Form.Control \r\n                                type='lga' \r\n                                placeholder='Enter LGA'\r\n                                value={lga}\r\n                                onChange={(e) => setLga(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                        </Form.Row>\r\n\r\n                        <Form.Row>\r\n                            <Form.Group  className=\"col-md-6\" controlId='maritalStatus'>\r\n                                <Form.Label>Marital Status</Form.Label>\r\n                                <Form.Control \r\n                                type='maritalStatus' \r\n                                placeholder='Enter Marital Status'\r\n                                value={maritalStatus}\r\n                                onChange={(e) => setMaritalStatus(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group  className=\"col-md-6\" controlId='religion'>\r\n                                <Form.Label>Religion</Form.Label>\r\n                                <Form.Control \r\n                                type='religion' \r\n                                placeholder='Enter Religion'\r\n                                value={religion}\r\n                                onChange={(e) => setReligion(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                        \r\n                    \r\n                            \r\n                        </Form.Row>\r\n                    \r\n                        <Button type='submit' variant='primary' className='btn-block'>\r\n                            Update\r\n                        </Button>\r\n                    </Form>\r\n                    ) : (\r\n                        <Form onSubmit={createsubmitHandler}>\r\n                            <Form.Row>\r\n                                <Form.Group  className=\"col-md-4\" controlId='dateOfBirth'>\r\n                                    <Form.Label>Date Of Birth</Form.Label>\r\n                                    <Form.Control \r\n                                    type='date' \r\n                                \r\n                                    placeholder='Enter Date Of Birth'\r\n                                    value={dob}\r\n                                    onChange={(e) => setDob(e.target.value)}\r\n                                    ></Form.Control>\r\n                                </Form.Group>\r\n                                <Form.Group  className=\"col-md-4\" controlId='contactNo'>\r\n                                    <Form.Label>Contact Number</Form.Label>\r\n                                    <Form.Control \r\n                                    type='contactNo' \r\n                                    \r\n                                    placeholder='Enter Contact Number'\r\n                                    value={contactNo}\r\n                                    onChange={(e) => setContactNo(e.target.value)}\r\n                                    ></Form.Control>\r\n                                </Form.Group>\r\n                                <Form.Group  className=\"col-md-4\" controlId='privateEmail'>\r\n                                    <Form.Label>Email Address</Form.Label>\r\n                                    <Form.Control \r\n                                    type='privateEmail' \r\n                                    \r\n                                    placeholder='Enter Private Email'\r\n                                    value={privateEmail}\r\n                                    onChange={(e) => setPrivateEmail(e.target.value)}\r\n                                    ></Form.Control>\r\n                                </Form.Group>\r\n                                \r\n                        \r\n                                \r\n                            </Form.Row>\r\n                            <Form.Row>\r\n                                <Form.Group className=\"col-md-4\" controlId=\"formGridGender\">\r\n                                    <Form.Label>Gender</Form.Label>\r\n                                    <Form.Control \r\n                                    as=\"select\" \r\n                                    size='sm'\r\n                                    value={gender}\r\n                                    onChange={(e) => setGender(e.target.value)}>\r\n                                        <option value=''>Select...</option>\r\n                                        <option value='MALE'>MALE</option>\r\n                                        <option value='FEMALE'>FEMALE</option>\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n                                <Form.Group  className=\"col-md-4\" controlId='dateOfJoining'>\r\n                                    <Form.Label>Date Of Joining</Form.Label>\r\n                                    <Form.Control \r\n                                    type='date' \r\n                                    placeholder='Enter Date Of Joining'\r\n                                    value={dateOfJoining}\r\n                                    onChange={(e) => setDateOfJoining(e.target.value)}\r\n                                    ></Form.Control>\r\n                                </Form.Group>\r\n                                <Form.Group  className=\"col-md-4\" controlId='dateOfLastPromotion'>\r\n                                    <Form.Label>Date Of Last Promotion</Form.Label>\r\n                                    <Form.Control \r\n                                    type='date' \r\n                                    placeholder='Enter Date Of Last Promotion'\r\n                                    value={dateOfLastPromotion}\r\n                                    onChange={(e) => setDateOfLastPromotion(e.target.value)}\r\n                                    ></Form.Control>\r\n                                </Form.Group>\r\n                            \r\n                        \r\n                                \r\n                            </Form.Row>\r\n                            <Form.Row>\r\n                                \r\n                                <Form.Group  className=\"col-md-4\" controlId='address'>\r\n                                    <Form.Label>Address</Form.Label>\r\n                                    <Form.Control \r\n                                    type='address' \r\n                                    placeholder='Enter Address'\r\n                                    value={address}\r\n                                    onChange={(e) => setAddress(e.target.value)}\r\n                                    ></Form.Control>\r\n                                </Form.Group>\r\n                                <Form.Group  className=\"col-md-4\" controlId='stateOfOrigin'>\r\n                                    <Form.Label>State Of Origin</Form.Label>\r\n                                    <Form.Control \r\n                                    type='stateOfOrigin' \r\n                                    placeholder='Enter State Of Origin'\r\n                                    value={stateOfOrigin}\r\n                                    onChange={(e) => setStateOfOrigin(e.target.value)}\r\n                                    ></Form.Control>\r\n                                </Form.Group>\r\n                                <Form.Group  className=\"col-md-4\" controlId='lga'>\r\n                                    <Form.Label>LGA</Form.Label>\r\n                                    <Form.Control \r\n                                    type='lga' \r\n                                    placeholder='Enter LGA'\r\n                                    value={lga}\r\n                                    onChange={(e) => setLga(e.target.value)}\r\n                                    ></Form.Control>\r\n                                </Form.Group>\r\n                            \r\n                        \r\n                                \r\n                            </Form.Row>\r\n                            <Form.Row>\r\n                                \r\n                                <Form.Group  className=\"col-md-6\" controlId='maritalStatus'>\r\n                                    <Form.Label>Marital Status</Form.Label>\r\n                                    <Form.Control \r\n                                    type='maritalStatus' \r\n                                    placeholder='Enter Marital Status'\r\n                                    value={maritalStatus}\r\n                                    onChange={(e) => setMaritalStatus(e.target.value)}\r\n                                    ></Form.Control>\r\n                                </Form.Group>\r\n                                <Form.Group  className=\"col-md-6\" controlId='religion'>\r\n                                    <Form.Label>Religion</Form.Label>\r\n                                    <Form.Control \r\n                                    type='religion' \r\n                                    placeholder='Enter Religion'\r\n                                    value={religion}\r\n                                    onChange={(e) => setReligion(e.target.value)}\r\n                                    ></Form.Control>\r\n                                </Form.Group>\r\n                            \r\n                        \r\n                                \r\n                            </Form.Row>\r\n                        \r\n                            <Button type='submit' variant='primary' className='btn-block'>\r\n                                Create\r\n                            </Button>\r\n                        </Form>\r\n                    )\r\n                }\r\n                \r\n            </Col>\r\n        </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProfileScreen\r\n","C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-responsive\\src\\screens\\NextOfKinScreen.js",["203","204"],"import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Button, Row, Col, ListGroup, Form } from 'react-bootstrap'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { createNextOfKin, getNextOfKinDetails, updateNextOfKin } from '../actions/nextOfKinActions'\r\nimport { NOK_CREATE_RESET, NOK_DETAILS_RESET, NOK_UPDATE_RESET } from '../constants/nextOfKinConstants'\r\nimport FixedNavbar from '../components/FixedNavbar';\r\nimport '../styles/ProfileScreen.css';\r\nimport Header from '../components/Header';\r\n\r\nconst NextOfKinScreen = ({ history }) => {\r\n    const [firstname, setFirstname] = useState('')\r\n    const [lastname, setLastname] = useState('')\r\n    const [contact, setContact] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [relationship, setRelationship] = useState('')\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const nextOfKinDetails = useSelector(state => state.nextOfKinDetails)\r\n    const { loading, nextOfKin } = nextOfKinDetails\r\n\r\n    const nextOfKinUpdate = useSelector(state => state.nextOfKinUpdate)\r\n    const { error:errorUpdate, success:successUpdate } = nextOfKinUpdate\r\n\r\n    const nextOfKinCreate = useSelector(state => state.nextOfKinCreate)\r\n    const { error:errorCreate, success:successCreate } = nextOfKinCreate\r\n\r\n  \r\n\r\n    useEffect(() => {\r\n\r\n        if(!userInfo) {\r\n            history.push('/')\r\n        } else {\r\n            if(successUpdate || successCreate) {\r\n                dispatch({\r\n                    type: NOK_UPDATE_RESET\r\n                })\r\n                dispatch({\r\n                    type: NOK_DETAILS_RESET\r\n                })\r\n                dispatch({\r\n                    type: NOK_CREATE_RESET\r\n                })\r\n                history.push('/home')\r\n            } else {\r\n            if(!nextOfKin || !nextOfKin.firstname) {\r\n                dispatch(getNextOfKinDetails('me'))\r\n            } else {\r\n                setFirstname(nextOfKin.firstname)\r\n                setLastname(nextOfKin.lastname)\r\n                setContact(nextOfKin.contact)\r\n                setEmail(nextOfKin.email)\r\n                setRelationship(nextOfKin.relationship)\r\n\r\n            }\r\n        }\r\n    }\r\n    }, [dispatch, history, nextOfKin, successUpdate, successCreate, userInfo])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateNextOfKin({\r\n            _id: nextOfKin._id,\r\n            firstname,\r\n            lastname,\r\n            contact,\r\n            email,\r\n            relationship\r\n        }))\r\n       \r\n       \r\n        \r\n    }\r\n\r\n    const createsubmitHandler= (e) => {\r\n        e.preventDefault()\r\n        dispatch(createNextOfKin({\r\n           \r\n            firstname,\r\n            lastname,\r\n            contact,\r\n            email,\r\n            relationship\r\n        }))\r\n       \r\n       \r\n        \r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n         \r\n        <Row className='ml-4 mr-4 py-4 profilescreen-wrapper'>\r\n            <Col md={3} className='d-none d-md-block'>\r\n                <FixedNavbar />\r\n            </Col>\r\n            <Col className='col-xs-12 col-md-8'>\r\n            <Header />\r\n                <h1 className='page-header'>Next Of Kin</h1>\r\n               \r\n                {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\r\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n                {successUpdate && <Message variant='success'>Profile Updated</Message>}\r\n                {loading && <Loader />}\r\n                {\r\n                    nextOfKin ? (\r\n                        <Form onSubmit={submitHandler}>\r\n                        <Form.Row>\r\n                            <Form.Group  className=\"col-md-4\" controlId='firstname'>\r\n                                <Form.Label>Firstname</Form.Label>\r\n                                <Form.Control \r\n                                type='firstname' \r\n                            \r\n                                placeholder='Enter Firstname'\r\n                                value={firstname}\r\n                                onChange={(e) => setFirstname(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group  className=\"col-md-4\" controlId='lastname'>\r\n                                <Form.Label>Lastname</Form.Label>\r\n                                <Form.Control \r\n                                type='lastname' \r\n                                \r\n                                placeholder='Enter Lastname'\r\n                                value={lastname}\r\n                                onChange={(e) => setLastname(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group  className=\"col-md-4\" controlId='email'>\r\n                                <Form.Label>Email Address</Form.Label>\r\n                                <Form.Control \r\n                                type='email' \r\n                                \r\n                                placeholder='Enter  Email'\r\n                                value={email}\r\n                                onChange={(e) => setEmail(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                            \r\n                    \r\n                            \r\n                        </Form.Row>\r\n                        <Form.Row>\r\n                            \r\n                            <Form.Group  className=\"col-md-6\" controlId='contact'>\r\n                                <Form.Label>Contact Number</Form.Label>\r\n                                <Form.Control \r\n                                type='contact' \r\n                                placeholder='Enter Contact'\r\n                                value={contact}\r\n                                onChange={(e) => setContact(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group  className=\"col-md-6\" controlId='relationship'>\r\n                                <Form.Label>Relationship</Form.Label>\r\n                                <Form.Control \r\n                                type='relationship' \r\n                                placeholder='Enter Relationship'\r\n                                value={relationship}\r\n                                onChange={(e) => setRelationship(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                        \r\n                    \r\n                            \r\n                        </Form.Row>\r\n                        \r\n                    \r\n                        <Button type='submit' variant='primary' className='btn-block'>\r\n                            Update\r\n                        </Button>\r\n                    </Form>\r\n                    ) : (\r\n                        <Form onSubmit={createsubmitHandler}>\r\n                        <Form.Row>\r\n                            <Form.Group  className=\"col-md-4\" controlId='firstname'>\r\n                                <Form.Label>Firstname</Form.Label>\r\n                                <Form.Control \r\n                                type='firstname' \r\n                            \r\n                                placeholder='Enter Firstname'\r\n                                value={firstname}\r\n                                onChange={(e) => setFirstname(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group  className=\"col-md-4\" controlId='lastname'>\r\n                                <Form.Label>Lastname</Form.Label>\r\n                                <Form.Control \r\n                                type='lastname' \r\n                                \r\n                                placeholder='Enter Lastname'\r\n                                value={lastname}\r\n                                onChange={(e) => setLastname(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group  className=\"col-md-4\" controlId='email'>\r\n                                <Form.Label>Email Address</Form.Label>\r\n                                <Form.Control \r\n                                type='email' \r\n                                \r\n                                placeholder='Enter  Email'\r\n                                value={email}\r\n                                onChange={(e) => setEmail(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                            \r\n                    \r\n                            \r\n                        </Form.Row>\r\n                        <Form.Row>\r\n                            \r\n                            <Form.Group  className=\"col-md-6\" controlId='contact'>\r\n                                <Form.Label>Contact Number</Form.Label>\r\n                                <Form.Control \r\n                                type='contact' \r\n                                placeholder='Enter Contact'\r\n                                value={contact}\r\n                                onChange={(e) => setContact(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group  className=\"col-md-6\" controlId='relationship'>\r\n                                <Form.Label>Relationship</Form.Label>\r\n                                <Form.Control \r\n                                type='relationship' \r\n                                placeholder='Enter Relationship'\r\n                                value={relationship}\r\n                                onChange={(e) => setRelationship(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                        \r\n                    \r\n                            \r\n                        </Form.Row>\r\n                        \r\n                    \r\n                        <Button type='submit' variant='primary' className='btn-block'>\r\n                            Create\r\n                        </Button>\r\n                    </Form>\r\n                    )\r\n                }\r\n                \r\n            </Col>\r\n        </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default NextOfKinScreen\r\n","C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-responsive\\src\\screens\\EducationScreen.js",["205","206"],"import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Button, Row, Col, ListGroup, Form } from 'react-bootstrap'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { EDUCATION_CREATE_RESET, EDUCATION_DETAILS_RESET, EDUCATION_UPDATE_RESET } from '../constants/educationConstants'\r\nimport { createEducation, getEducationDetails, updateEducation } from '../actions/educationActions';\r\nimport FixedNavbar from '../components/FixedNavbar';\r\nimport Header from '../components/Header';\r\n\r\nconst EducationScreen = ({ history }) => {\r\n    const [institutionAttended, setInstitutionAttended] = useState('')\r\n    const [courseOfStudy, setCourseOfStudy] = useState('')\r\n    const [yearOfGraduation, setYearOfGraduation] = useState('')\r\n    const [professionalMembership, setProfessionalMembership] = useState('')\r\n\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const educationDetails = useSelector(state => state.educationDetails)\r\n    const { loading, education } = educationDetails\r\n\r\n    const educationUpdate = useSelector(state => state.educationUpdate)\r\n    const {  error:errorUpdate, success:successUpdate } = educationUpdate\r\n\r\n    const educationCreate = useSelector(state => state.educationCreate)\r\n    const { error:errorCreate, success:successCreate } = educationCreate\r\n    \r\n  \r\n\r\n    useEffect(() => {\r\n\r\n        if(!userInfo) {\r\n            history.push('/')\r\n        } else {\r\n            if(successUpdate || successCreate) {\r\n                dispatch({\r\n                    type: EDUCATION_UPDATE_RESET\r\n                })\r\n                dispatch({\r\n                    type: EDUCATION_DETAILS_RESET\r\n                })\r\n                dispatch({\r\n                    type: EDUCATION_CREATE_RESET\r\n                })\r\n                history.push('/home')\r\n            } else {\r\n            if(!education || !education.institutionAttended) {\r\n                dispatch(getEducationDetails('me'))\r\n            } else {\r\n                setInstitutionAttended(education.institutionAttended)\r\n                setCourseOfStudy(education.courseOfStudy)\r\n                setProfessionalMembership(education.professionalMembership)\r\n                setYearOfGraduation(education.yearOfGraduation)\r\n            }\r\n        }\r\n    }\r\n    }, [dispatch, history, education, successCreate, successUpdate, userInfo])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateEducation({\r\n            _id: education._id,\r\n            institutionAttended,\r\n            courseOfStudy,\r\n            professionalMembership,\r\n            yearOfGraduation\r\n        }))\r\n       \r\n    }\r\n\r\n    const createsubmitHandler= (e) => {\r\n        e.preventDefault()\r\n        dispatch(createEducation({\r\n           institutionAttended,\r\n           courseOfStudy,\r\n           professionalMembership,\r\n           yearOfGraduation\r\n        }))\r\n       \r\n    }\r\n\r\n  return (\r\n    <>   \r\n      <Row className='ml-4 mr-4 py-4 profilescreen-wrapper'>\r\n        <Col md={3} className='d-none d-md-block'>\r\n            <FixedNavbar />\r\n        </Col>\r\n        <Col className='col-xs-12 col-md-8'>\r\n          <Header />\r\n          <h1 className='page-header'>Education</h1>\r\n          {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\r\n          {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n          {successUpdate && <Message variant='success'>Profile Updated</Message>}\r\n          {loading && <Loader />}\r\n          {\r\n            education ? (\r\n              <Form onSubmit={submitHandler}>\r\n                <Form.Row>\r\n                  <Form.Group className=\"col-md-6\" controlId='institutionAttended'>\r\n                    <Form.Label>Institution Attended</Form.Label>\r\n                    <Form.Control \r\n                    \ttype='institutionAttended'\r\n                    \tplaceholder='Enter Institution Attended'\r\n                    \tvalue={institutionAttended}\r\n                    \tonChange={(e) => setInstitutionAttended(e.target.value)}\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n                  <Form.Group  className=\"col-md-6\" controlId='courseOfStudy'>\r\n                    <Form.Label>Course Of Study</Form.Label>\r\n                    <Form.Control \r\n                      type='courseOfStudy'    \r\n                      placeholder='Enter Course Of Study'\r\n                      value={courseOfStudy}\r\n                      onChange={(e) => setCourseOfStudy(e.target.value)}\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n                </Form.Row>\r\n\r\n                <Form.Row>\r\n                  <Form.Group  className=\"col-md-6\" controlId='professionalMembership'>\r\n                    <Form.Label>Professional Membership</Form.Label>\r\n                    <Form.Control \r\n                      type='professionalMembership' \r\n                                \r\n                      placeholder='Enter Professional Membership'\r\n                      value={professionalMembership}\r\n                      onChange={(e) => setProfessionalMembership(e.target.value)}\r\n                    ></Form.Control>\r\n                \t</Form.Group>\r\n                \t<Form.Group  className=\"col-md-6\" controlId='yearOfGraduation'>\r\n                    <Form.Label>Year Of Graduation</Form.Label>\r\n                    <Form.Control \r\n                      type='date' \r\n                            \r\n                      placeholder='Enter Year Of Graduation'\r\n                      value={yearOfGraduation}\r\n                      onChange={(e) => setYearOfGraduation(e.target.value)}\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n                </Form.Row>\r\n                  <Button type='submit' variant='primary' className='btn-block'>\r\n                    Update\r\n                  </Button>\r\n              </Form>\r\n\r\n              ) : (\r\n              <Form onSubmit={createsubmitHandler}>\r\n                <Form.Row>\r\n                  <Form.Group  className=\"col-md-6\" controlId='institutionAttended'>\r\n                    <Form.Label>Institution Attended</Form.Label>\r\n                    <Form.Control \r\n                      type='institutionAttended' \r\n                            \r\n                      placeholder='Enter Institution Attended'\r\n                      value={institutionAttended}\r\n                      onChange={(e) => setInstitutionAttended(e.target.value)}\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n                  <Form.Group  className=\"col-md-6\" controlId='courseOfStudy'>\r\n                  \t<Form.Label>Course Of Study</Form.Label>\r\n                    <Form.Control \r\n                      type='courseOfStudy' \r\n                                \r\n                      placeholder='Enter Course Of Study'\r\n                      value={courseOfStudy}\r\n                      onChange={(e) => setCourseOfStudy(e.target.value)}\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n                </Form.Row>\r\n\r\n                <Form.Row>\r\n                  <Form.Group  className=\"col-md-6\" controlId='professionalMembership'>\r\n                    <Form.Label>Professional Membership</Form.Label>\r\n                    <Form.Control \r\n                      type='professionalMembership' \r\n                                \r\n                      placeholder='Enter Professional Membership'\r\n                      value={professionalMembership}\r\n                      onChange={(e) => setProfessionalMembership(e.target.value)}\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n                  <Form.Group  className=\"col-md-6\" controlId='yearOfGraduation'>\r\n                    <Form.Label>Year Of Graduation</Form.Label>\r\n                    <Form.Control \r\n                      type='date' \r\n                            \r\n                      placeholder='Enter Year Of Graduation'\r\n                      value={yearOfGraduation}\r\n                      onChange={(e) => setYearOfGraduation(e.target.value)}\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n                </Form.Row>\r\n                <Button type='submit' variant='primary' className='btn-block'>\r\n                  Create\r\n                </Button>\r\n              </Form>\r\n              )\r\n            }\r\n          </Col>\r\n        </Row>\r\n      </>\r\n    )\r\n}\r\n\r\nexport default EducationScreen\r\n","C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-responsive\\src\\screens\\HrHomeScreen.js",["207","208"],"import React, { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Table, Button, Row, Col, ListGroup } from 'react-bootstrap'\r\nimport { getUserDetailsById } from '../actions/userActions';\r\nimport FixedNavbar from '../components/FixedNavbar';\r\n\r\n\r\nconst HrHomeScreen = ({ history, match }) => {\r\n    const userId = match.params.id\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n\r\n    const userDetailsById = useSelector(state => state.userDetailsById)\r\n    const { user } = userDetailsById\r\n\r\n    useEffect(() => {\r\n        if (!userInfo  && (userInfo.role !== 'hr')) {\r\n            \r\n            history.push('/')\r\n        } else {\r\n            dispatch(getUserDetailsById(userId))\r\n        }\r\n        \r\n        \r\n    }, [history, userInfo, userId, dispatch])\r\n\r\n    return (\r\n        <>\r\n            \r\n        <Row className='ml-4 mr-4 py-4'>\r\n        <Col md={3}>\r\n            <FixedNavbar />\r\n        </Col>\r\n        <Col md={8}>\r\n        <Table striped bordered hover reesponsive className='table-sm mr-4 ml-3'>\r\n            <thead>\r\n                <tr>\r\n                    <th>EMPLOYEE ID</th>\r\n                    <th>FIRST NAME</th>\r\n                    <th>MIDDLE NAME</th>\r\n                    <th>LAST NAME</th>\r\n                    <th>EMAIL</th>\r\n                    <th>ROLE</th>\r\n                    <th>DEPARTMENT</th>\r\n                    <th>ACTION</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                \r\n                <tr key={user.employee._id}>\r\n                    <td>{user.employee.employeeCode}</td>\r\n                    <td>{user.employee.firstname}</td>\r\n                    <td>{user.employee.middlename}</td>\r\n                    <td>{user.employee.lastname}</td>\r\n                    <td><a href={`mailto:${user.employee.email}`}>{user.employee.email}</a></td>\r\n                    <td>{user.employee.role}</td>\r\n                    <td>{user.employee.department}</td>\r\n                    {userInfo && (\r\n                    <td>\r\n                        <LinkContainer to={`/dashboard`}>\r\n                            <Button variant='light' className='btn-sm'>\r\n                                <i className='fas fa-edit'></i>\r\n                            </Button>\r\n                        </LinkContainer>\r\n                        \r\n                    </td>\r\n                    )}\r\n                </tr>\r\n                \r\n            </tbody>\r\n        </Table>\r\n        </Col>\r\n        </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default HrHomeScreen\r\n","C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-responsive\\src\\screens\\AdminProfileScreen.js",["209","210","211","212"],"import React, { useState, useEffect } from 'react'\r\nimport { Link, NavLink } from 'react-router-dom'\r\nimport { Button, Row, Col, ListGroup, Form, Nav} from 'react-bootstrap'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { createProfileEmpId, getProfileDetailsEmpId, updateProfile } from '../actions/profileActions'\r\nimport { PROFILE_CREATE_EMPLOYEE_RESET, PROFILE_DETAILS_EMPLOYEE_RESET, PROFILE_UPDATE_RESET } from '../constants/profileConstants'\r\nimport '../styles/FixedNavbar.css';\r\nimport AdminHeader from '../components/AdminHeader';\r\nimport '../styles/ProfileScreen.css';\r\n\r\nconst AdminProfileScreen = ({ history, match }) => {\r\n    const userId = match.params.id\r\n\r\n\r\n    const [dob, setDob] = useState('')\r\n    const [contactNo, setContactNo] = useState('')\r\n    const [privateEmail, setPrivateEmail] = useState('')\r\n    const [gender, setGender] = useState('')\r\n    const [dateOfJoining, setDateOfJoining] = useState('')\r\n    const [dateOfLastPromotion, setDateOfLastPromotion] = useState('')\r\n    const [address, setAddress] = useState('')\r\n    const [stateOfOrigin, setStateOfOrigin] = useState('')\r\n    const [lga, setLga] = useState('')\r\n    const [maritalStatus, setMaritalStatus] = useState('')\r\n    const [religion, setReligion] = useState('')\r\n\r\n   \r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const profileDetailsEmpId = useSelector(state => state.profileDetailsEmpId)\r\n    const { loading, profile } = profileDetailsEmpId\r\n\r\n    const profileUpdate = useSelector(state => state.profileUpdate)\r\n    const { error:errorUpdate, success:successUpdate } = profileUpdate\r\n\r\n    const profileCreateEmpId = useSelector(state => state.profileCreateEmpId)\r\n    const { error:errorCreate, success:successCreate } = profileCreateEmpId\r\n\r\n  \r\n\r\n    useEffect(() => {\r\n\r\n        if(userInfo  && (userInfo.role === 'hr' || userInfo.role === 'hr-manager' || userInfo.role === 'admin')) {\r\n            \r\n            if(successUpdate || successCreate) {\r\n                dispatch({\r\n                    type: PROFILE_UPDATE_RESET\r\n                })\r\n                dispatch({\r\n                    type: PROFILE_DETAILS_EMPLOYEE_RESET\r\n                })\r\n                dispatch({\r\n                    type: PROFILE_CREATE_EMPLOYEE_RESET\r\n                })\r\n                history.push('/admin/userlist')\r\n            } else {\r\n            if(!profile || profile.employee !== userId) {\r\n                dispatch(getProfileDetailsEmpId(userId))\r\n            } else {\r\n                setDob(profile.dob)\r\n                setContactNo(profile.contactNo)\r\n                setPrivateEmail(profile.privateEmail)\r\n                setGender(profile.gender)\r\n                setDateOfJoining(profile.dateOfJoining)\r\n                setDateOfLastPromotion(profile.dateOfLastPromotion)\r\n                setAddress(profile.address)\r\n                setStateOfOrigin(profile.stateOfOrigin)\r\n                setLga(profile.lga)\r\n                setMaritalStatus(profile.maritalStatus)\r\n                setReligion(profile.religion)\r\n\r\n            }\r\n        }\r\n        } else {\r\n            history.push('/') \r\n    }\r\n    }, [dispatch, history, profile, userId, successUpdate, successCreate, userInfo])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateProfile({\r\n            _id: profile._id,\r\n            dob,\r\n            contactNo,\r\n            privateEmail,\r\n            gender,\r\n            dateOfJoining,\r\n            dateOfLastPromotion,\r\n            address,\r\n            stateOfOrigin,\r\n            lga,\r\n            maritalStatus,\r\n            religion\r\n        }))\r\n       \r\n       \r\n        \r\n    }\r\n\r\n    const createsubmitHandler= (e) => {\r\n        e.preventDefault()\r\n        dispatch(createProfileEmpId({\r\n            employee: userId,\r\n            dob,\r\n            contactNo,\r\n            privateEmail,\r\n            gender,\r\n            dateOfJoining,\r\n            dateOfLastPromotion,\r\n            address,\r\n            stateOfOrigin,\r\n            lga,\r\n            maritalStatus,\r\n            religion\r\n        }))\r\n       \r\n    }\r\n\r\n    return (\r\n        <>\r\n         \r\n        <Row className='ml-4 mr-4 py-4 profilescreen-wrapper'>\r\n                <Col md={3} className='d-none d-md-block'>\r\n\r\n        <div className=\"fixednavbar-wrapper\">\r\n            <div className='employee-details'>\r\n                <p>{userInfo.role}</p>\r\n                <p>{userInfo.email}</p>\r\n            </div>\r\n        <Nav className=\"flex-column\">\r\n        <NavLink to='/admin/userlist' exact className=\"nav-link\" activeClassName='active-here'>\r\n          <i class=\"fas fa-home pr-3\"></i>\r\n          All Employees\r\n        </NavLink>\r\n        <NavLink to={`/admin/user/${userId}/edit`} exact className=\"nav-link\" activeClassName='active-here'>\r\n          <i class=\"far fa-id-card pr-3\"></i>\r\n          Details\r\n        </NavLink>\r\n        <NavLink to={`/admin/profile/${userId}/edit`} exact className=\"nav-link\" activeClassName='active-here'>\r\n          <i class=\"fas fa-user-circle pr-3\"></i>\r\n          Profile\r\n        </NavLink>\r\n        <NavLink to={`/admin/education/${userId}/edit`} exact className=\"nav-link\" activeClassName='active-here'>\r\n          <i class=\"fas fa-user-friends pr-3\"></i>\r\n          Education\r\n        </NavLink>\r\n        <NavLink to={`/admin/nextofkin/${userId}/edit`} exact className=\"nav-link\" activeClassName='active-here'>\r\n          <i class=\"fas fa-graduation-cap pr-3\"></i>\r\n          Employee Next Of Kin\r\n        </NavLink>\r\n        </Nav>\r\n        </div>\r\n        </Col>\r\n\r\n        <Col className='col-xs-12 col-md-8'>\r\n                <AdminHeader\r\n                    userId\r\n                />\r\n                <h1 className='page-header'>My Profile</h1>\r\n               \r\n               \r\n                {successUpdate && <Message variant='success'>Profile Updated</Message>}\r\n                {loading && <Loader />}\r\n                {\r\n                    profile ? (\r\n                        <Form onSubmit={submitHandler}>\r\n                        <Form.Row>\r\n                            <Form.Group  className=\"col-md-4\" controlId='dateOfBirth'>\r\n                                <Form.Label>Date Of Birth</Form.Label>\r\n                                <Form.Control \r\n                                type='date' \r\n                            \r\n                                placeholder='Enter Date Of Birth'\r\n                                value={dob}\r\n                                onChange={(e) => setDob(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group  className=\"col-md-4\" controlId='contactNo'>\r\n                                <Form.Label>Contact Number</Form.Label>\r\n                                <Form.Control \r\n                                type='contactNo' \r\n                                \r\n                                placeholder='Enter Contact Number'\r\n                                value={contactNo}\r\n                                onChange={(e) => setContactNo(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group  className=\"col-md-4\" controlId='privateEmail'>\r\n                                <Form.Label>Email Address</Form.Label>\r\n                                <Form.Control \r\n                                type='privateEmail' \r\n                                \r\n                                placeholder='Enter Private Email'\r\n                                value={privateEmail}\r\n                                onChange={(e) => setPrivateEmail(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                            \r\n                    \r\n                            \r\n                        </Form.Row>\r\n                        <Form.Row>\r\n                            <Form.Group className=\"col-md-4\" controlId=\"formGridGender\">\r\n                                <Form.Label>Gender</Form.Label>\r\n                                <Form.Control \r\n                                as=\"select\" \r\n                                size='sm'\r\n                                value={gender}\r\n                                onChange={(e) => setGender(e.target.value)}>\r\n                                    <option value=''>Select...</option>\r\n                                    <option value='MALE'>MALE</option>\r\n                                    <option value='FEMALE'>FEMALE</option>\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group  className=\"col-md-4\" controlId='dateOfJoining'>\r\n                                <Form.Label>Date Of Joining</Form.Label>\r\n                                <Form.Control \r\n                                type='date' \r\n                                placeholder='Enter Date Of Joining'\r\n                                value={dateOfJoining}\r\n                                onChange={(e) => setDateOfJoining(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group  className=\"col-md-4\" controlId='dateOfLastPromotion'>\r\n                                <Form.Label>Date Of Last Promotion</Form.Label>\r\n                                <Form.Control \r\n                                type='date' \r\n                                placeholder='Enter Date Of Last Promotion'\r\n                                value={dateOfLastPromotion}\r\n                                onChange={(e) => setDateOfLastPromotion(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                        \r\n                    \r\n                            \r\n                        </Form.Row>\r\n                        <Form.Row>\r\n                            \r\n                            <Form.Group  className=\"col-md-4\" controlId='address'>\r\n                                <Form.Label>Address</Form.Label>\r\n                                <Form.Control \r\n                                type='address' \r\n                                placeholder='Enter Address'\r\n                                value={address}\r\n                                onChange={(e) => setAddress(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group  className=\"col-md-4\" controlId='stateOfOrigin'>\r\n                                <Form.Label>State Of Origin</Form.Label>\r\n                                <Form.Control \r\n                                type='stateOfOrigin' \r\n                                placeholder='Enter State Of Origin'\r\n                                value={stateOfOrigin}\r\n                                onChange={(e) => setStateOfOrigin(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group  className=\"col-md-4\" controlId='lga'>\r\n                                <Form.Label>LGA</Form.Label>\r\n                                <Form.Control \r\n                                type='lga' \r\n                                placeholder='Enter LGA'\r\n                                value={lga}\r\n                                onChange={(e) => setLga(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                        \r\n                    \r\n                            \r\n                        </Form.Row>\r\n                        <Form.Row>\r\n                            \r\n                            <Form.Group  className=\"col-md-6\" controlId='maritalStatus'>\r\n                                <Form.Label>Marital Status</Form.Label>\r\n                                <Form.Control \r\n                                type='maritalStatus' \r\n                                placeholder='Enter Marital Status'\r\n                                value={maritalStatus}\r\n                                onChange={(e) => setMaritalStatus(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group  className=\"col-md-6\" controlId='religion'>\r\n                                <Form.Label>Religion</Form.Label>\r\n                                <Form.Control \r\n                                type='religion' \r\n                                placeholder='Enter Religion'\r\n                                value={religion}\r\n                                onChange={(e) => setReligion(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                        \r\n                    \r\n                            \r\n                        </Form.Row>\r\n                    \r\n                        <Button type='submit' variant='primary' className='btn-block'>\r\n                            Update\r\n                        </Button>\r\n                    </Form>\r\n                    ) : (\r\n                        <Form onSubmit={createsubmitHandler}>\r\n                            <Form.Row>\r\n                                <Form.Group  className=\"col-md-4\" controlId='dateOfBirth'>\r\n                                    <Form.Label>Date Of Birth</Form.Label>\r\n                                    <Form.Control \r\n                                    type='date' \r\n                                \r\n                                    placeholder='Enter Date Of Birth'\r\n                                    value={dob}\r\n                                    onChange={(e) => setDob(e.target.value)}\r\n                                    ></Form.Control>\r\n                                </Form.Group>\r\n                                <Form.Group  className=\"col-md-4\" controlId='contactNo'>\r\n                                    <Form.Label>Contact Number</Form.Label>\r\n                                    <Form.Control \r\n                                    type='contactNo' \r\n                                    \r\n                                    placeholder='Enter Contact Number'\r\n                                    value={contactNo}\r\n                                    onChange={(e) => setContactNo(e.target.value)}\r\n                                    ></Form.Control>\r\n                                </Form.Group>\r\n                                <Form.Group  className=\"col-md-4\" controlId='privateEmail'>\r\n                                    <Form.Label>Email Address</Form.Label>\r\n                                    <Form.Control \r\n                                    type='privateEmail' \r\n                                    \r\n                                    placeholder='Enter Private Email'\r\n                                    value={privateEmail}\r\n                                    onChange={(e) => setPrivateEmail(e.target.value)}\r\n                                    ></Form.Control>\r\n                                </Form.Group>\r\n                                \r\n                        \r\n                                \r\n                            </Form.Row>\r\n                            <Form.Row>\r\n                                <Form.Group className=\"col-md-4\" controlId=\"formGridGender\">\r\n                                    <Form.Label>Gender</Form.Label>\r\n                                    <Form.Control \r\n                                    as=\"select\" \r\n                                    size='sm'\r\n                                    value={gender}\r\n                                    onChange={(e) => setGender(e.target.value)}>\r\n                                        <option value=''>Select...</option>\r\n                                        <option value='MALE'>MALE</option>\r\n                                        <option value='FEMALE'>FEMALE</option>\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n                                <Form.Group  className=\"col-md-4\" controlId='dateOfJoining'>\r\n                                    <Form.Label>Date Of Joining</Form.Label>\r\n                                    <Form.Control \r\n                                    type='date' \r\n                                    placeholder='Enter Date Of Joining'\r\n                                    value={dateOfJoining}\r\n                                    onChange={(e) => setDateOfJoining(e.target.value)}\r\n                                    ></Form.Control>\r\n                                </Form.Group>\r\n                                <Form.Group  className=\"col-md-4\" controlId='dateOfLastPromotion'>\r\n                                    <Form.Label>Date Of Last Promotion</Form.Label>\r\n                                    <Form.Control \r\n                                    type='date' \r\n                                    placeholder='Enter Date Of Last Promotion'\r\n                                    value={dateOfLastPromotion}\r\n                                    onChange={(e) => setDateOfLastPromotion(e.target.value)}\r\n                                    ></Form.Control>\r\n                                </Form.Group>\r\n                            \r\n                        \r\n                                \r\n                            </Form.Row>\r\n                            <Form.Row>\r\n                                \r\n                                <Form.Group  className=\"col-md-4\" controlId='address'>\r\n                                    <Form.Label>Address</Form.Label>\r\n                                    <Form.Control \r\n                                    type='address' \r\n                                    placeholder='Enter Address'\r\n                                    value={address}\r\n                                    onChange={(e) => setAddress(e.target.value)}\r\n                                    ></Form.Control>\r\n                                </Form.Group>\r\n                                <Form.Group  className=\"col-md-4\" controlId='stateOfOrigin'>\r\n                                    <Form.Label>State Of Origin</Form.Label>\r\n                                    <Form.Control \r\n                                    type='stateOfOrigin' \r\n                                    placeholder='Enter State Of Origin'\r\n                                    value={stateOfOrigin}\r\n                                    onChange={(e) => setStateOfOrigin(e.target.value)}\r\n                                    ></Form.Control>\r\n                                </Form.Group>\r\n                                <Form.Group  className=\"col-md-4\" controlId='lga'>\r\n                                    <Form.Label>LGA</Form.Label>\r\n                                    <Form.Control \r\n                                    type='lga' \r\n                                    placeholder='Enter LGA'\r\n                                    value={lga}\r\n                                    onChange={(e) => setLga(e.target.value)}\r\n                                    ></Form.Control>\r\n                                </Form.Group>\r\n                            \r\n                        \r\n                                \r\n                            </Form.Row>\r\n                            <Form.Row>\r\n                                \r\n                                <Form.Group  className=\"col-md-6\" controlId='maritalStatus'>\r\n                                    <Form.Label>Marital Status</Form.Label>\r\n                                    <Form.Control \r\n                                    type='maritalStatus' \r\n                                    placeholder='Enter Marital Status'\r\n                                    value={maritalStatus}\r\n                                    onChange={(e) => setMaritalStatus(e.target.value)}\r\n                                    ></Form.Control>\r\n                                </Form.Group>\r\n                                <Form.Group  className=\"col-md-6\" controlId='religion'>\r\n                                    <Form.Label>Religion</Form.Label>\r\n                                    <Form.Control \r\n                                    type='religion' \r\n                                    placeholder='Enter Religion'\r\n                                    value={religion}\r\n                                    onChange={(e) => setReligion(e.target.value)}\r\n                                    ></Form.Control>\r\n                                </Form.Group>\r\n                            \r\n                        \r\n                                \r\n                            </Form.Row>\r\n                        \r\n                            <Button type='submit' variant='primary' className='btn-block'>\r\n                                Create\r\n                            </Button>\r\n                        </Form>\r\n                    )\r\n                }\r\n                \r\n            </Col>\r\n        </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AdminProfileScreen;\r\n","C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-responsive\\src\\screens\\AdminNextOfKinScreen.js",["213","214","215","216"],"import React, { useState, useEffect } from 'react'\r\nimport { Link, NavLink } from 'react-router-dom'\r\nimport { Button, Row, Col, Nav, Form } from 'react-bootstrap'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { createNextOfKin, createNextOfKinEmpId, getNextOfKinDetailsEmpId, updateNextOfKin } from '../actions/nextOfKinActions'\r\nimport { NOK_CREATE_EMPLOYEE_RESET, NOK_DETAILS_EMPLOYEE_RESET, NOK_UPDATE_RESET } from '../constants/nextOfKinConstants'\r\nimport '../styles/FixedNavbar.css';\r\nimport AdminHeader from '../components/AdminHeader';\r\nimport '../styles/ProfileScreen.css';\r\n\r\nconst AdminNextOfKinScreen = ({ history, match }) => {\r\n    const userId = match.params.id\r\n    \r\n    const [firstname, setFirstname] = useState('')\r\n    const [lastname, setLastname] = useState('')\r\n    const [contact, setContact] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [relationship, setRelationship] = useState('')\r\n    \r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const nextOfKinDetailsEmpId = useSelector(state => state.nextOfKinDetailsEmpId)\r\n    const { loading, nextOfKin } = nextOfKinDetailsEmpId\r\n\r\n    const nextOfKinUpdate = useSelector(state => state.nextOfKinUpdate)\r\n    const { error:errorUpdate, success:successUpdate } = nextOfKinUpdate\r\n\r\n    const nextOfKinCreateEmpId = useSelector(state => state.nextOfKinCreateEmpId)\r\n    const { error:errorCreate, success:successCreate } = nextOfKinCreateEmpId\r\n\r\n  \r\n\r\n    useEffect(() => {\r\n\r\n        if(userInfo  && (userInfo.role === 'hr' || userInfo.role === 'hr-manager' || userInfo.role === 'admin')) {\r\n            \r\n            if(successUpdate || successCreate) {\r\n                dispatch({\r\n                    type: NOK_UPDATE_RESET\r\n                })\r\n                dispatch({\r\n                    type: NOK_DETAILS_EMPLOYEE_RESET\r\n                })\r\n                dispatch({\r\n                    type: NOK_CREATE_EMPLOYEE_RESET\r\n                })\r\n                history.push('/home')\r\n            } else {\r\n            if(!nextOfKin || nextOfKin.employee  !== userId ) {\r\n                dispatch(getNextOfKinDetailsEmpId(userId))\r\n            } else {\r\n                setFirstname(nextOfKin.firstname)\r\n                setLastname(nextOfKin.lastname)\r\n                setContact(nextOfKin.contact)\r\n                setEmail(nextOfKin.email)\r\n                setRelationship(nextOfKin.relationship)\r\n\r\n            }\r\n        }\r\n        } else {\r\n            history.push('/')\r\n    }\r\n    }, [dispatch, history, nextOfKin, successUpdate, userId, successCreate, userInfo])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateNextOfKin({\r\n            _id: nextOfKin._id,\r\n            firstname,\r\n            lastname,\r\n            contact,\r\n            email,\r\n            relationship\r\n        }))\r\n       \r\n       \r\n        \r\n    }\r\n\r\n    const createsubmitHandler= (e) => {\r\n        e.preventDefault()\r\n        dispatch(createNextOfKinEmpId({\r\n            employee: userId,\r\n            firstname,\r\n            lastname,\r\n            contact,\r\n            email,\r\n            relationship\r\n        }))\r\n       \r\n       \r\n        \r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n         \r\n        <Row className='ml-4 mr-4 py-4 profilescreen-wrapper'>\r\n                <Col md={3} className='d-none d-md-block'>\r\n        <div className=\"fixednavbar-wrapper\">\r\n            <div className='employee-details'>\r\n                <p>{userInfo.role}</p>\r\n                <p>{userInfo.email}</p>\r\n            </div>\r\n        <Nav className=\"flex-column\">\r\n        <NavLink to='/admin/userlist' exact className=\"nav-link\" activeClassName='active-here'>\r\n          <i class=\"fas fa-home pr-3\"></i>\r\n          All Employees\r\n        </NavLink>\r\n        <NavLink to={`/admin/user/${userId}/edit`} exact className=\"nav-link\" activeClassName='active-here'>\r\n          <i class=\"far fa-id-card pr-3\"></i>\r\n          Details\r\n        </NavLink>\r\n        <NavLink to={`/admin/profile/${userId}/edit`} exact className=\"nav-link\" activeClassName='active-here'>\r\n          <i class=\"fas fa-user-circle pr-3\"></i>\r\n          Profile\r\n        </NavLink>\r\n        <NavLink to={`/admin/education/${userId}/edit`} exact className=\"nav-link\" activeClassName='active-here'>\r\n          <i class=\"fas fa-user-friends pr-3\"></i>\r\n          Education\r\n        </NavLink>\r\n        <NavLink to={`/admin/nextofkin/${userId}/edit`} exact className=\"nav-link\" activeClassName='active-here'>\r\n          <i class=\"fas fa-graduation-cap pr-3\"></i>\r\n          Employee Next Of Kin\r\n        </NavLink>\r\n        </Nav>\r\n        </div>\r\n        </Col>\r\n\r\n        <Col className='col-xs-12 col-md-8'>\r\n                <AdminHeader\r\n                    userId\r\n                />\r\n                <h1 className='page-header'>Next Of Kin</h1>\r\n               \r\n                \r\n                {successUpdate && <Message variant='success'>Profile Updated</Message>}\r\n                {loading && <Loader />}\r\n                {\r\n                    nextOfKin ? (\r\n                        <Form onSubmit={submitHandler}>\r\n                        <Form.Row>\r\n                            <Form.Group  className=\"col-md-4\" controlId='firstname'>\r\n                                <Form.Label>Firstname</Form.Label>\r\n                                <Form.Control \r\n                                type='firstname' \r\n                            \r\n                                placeholder='Enter Firstname'\r\n                                value={firstname}\r\n                                onChange={(e) => setFirstname(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group  className=\"col-md-4\" controlId='lastname'>\r\n                                <Form.Label>Lastname</Form.Label>\r\n                                <Form.Control \r\n                                type='lastname' \r\n                                \r\n                                placeholder='Enter Lastname'\r\n                                value={lastname}\r\n                                onChange={(e) => setLastname(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group  className=\"col-md-4\" controlId='email'>\r\n                                <Form.Label>Email Address</Form.Label>\r\n                                <Form.Control \r\n                                type='email' \r\n                                \r\n                                placeholder='Enter  Email'\r\n                                value={email}\r\n                                onChange={(e) => setEmail(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                            \r\n                    \r\n                            \r\n                        </Form.Row>\r\n                        <Form.Row>\r\n                            \r\n                            <Form.Group  className=\"col-md-6\" controlId='contact'>\r\n                                <Form.Label>Contact Number</Form.Label>\r\n                                <Form.Control \r\n                                type='contact' \r\n                                placeholder='Enter Contact'\r\n                                value={contact}\r\n                                onChange={(e) => setContact(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group  className=\"col-md-6\" controlId='relationship'>\r\n                                <Form.Label>Relationship</Form.Label>\r\n                                <Form.Control \r\n                                type='relationship' \r\n                                placeholder='Enter Relationship'\r\n                                value={relationship}\r\n                                onChange={(e) => setRelationship(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                        \r\n                    \r\n                            \r\n                        </Form.Row>\r\n                        \r\n                    \r\n                        <Button type='submit' variant='primary' className='btn-block'>\r\n                            Update\r\n                        </Button>\r\n                    </Form>\r\n                    ) : (\r\n                        <Form onSubmit={createsubmitHandler}>\r\n                        <Form.Row>\r\n                            <Form.Group  className=\"col-md-4\" controlId='firstname'>\r\n                                <Form.Label>Firstname</Form.Label>\r\n                                <Form.Control \r\n                                type='firstname' \r\n                            \r\n                                placeholder='Enter Firstname'\r\n                                value={firstname}\r\n                                onChange={(e) => setFirstname(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group  className=\"col-md-4\" controlId='lastname'>\r\n                                <Form.Label>Lastname</Form.Label>\r\n                                <Form.Control \r\n                                type='lastname' \r\n                                \r\n                                placeholder='Enter Lastname'\r\n                                value={lastname}\r\n                                onChange={(e) => setLastname(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group  className=\"col-md-4\" controlId='email'>\r\n                                <Form.Label>Email Address</Form.Label>\r\n                                <Form.Control \r\n                                type='email' \r\n                                \r\n                                placeholder='Enter  Email'\r\n                                value={email}\r\n                                onChange={(e) => setEmail(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                            \r\n                    \r\n                            \r\n                        </Form.Row>\r\n                        <Form.Row>\r\n                            \r\n                            <Form.Group  className=\"col-md-6\" controlId='contact'>\r\n                                <Form.Label>Contact Number</Form.Label>\r\n                                <Form.Control \r\n                                type='contact' \r\n                                placeholder='Enter Contact'\r\n                                value={contact}\r\n                                onChange={(e) => setContact(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group  className=\"col-md-6\" controlId='relationship'>\r\n                                <Form.Label>Relationship</Form.Label>\r\n                                <Form.Control \r\n                                type='relationship' \r\n                                placeholder='Enter Relationship'\r\n                                value={relationship}\r\n                                onChange={(e) => setRelationship(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                        \r\n                    \r\n                            \r\n                        </Form.Row>\r\n                        \r\n                    \r\n                        <Button type='submit' variant='primary' className='btn-block'>\r\n                            Create\r\n                        </Button>\r\n                    </Form>\r\n                    )\r\n                }\r\n                \r\n            </Col>\r\n        </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AdminNextOfKinScreen\r\n","C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-responsive\\src\\screens\\AdminEducationScreen.js",["217","218","219","220","221","222","223"],"import React, { useState, useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { Table, Button, Row, Col, Nav, Form } from 'react-bootstrap'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { EDUCATION_CREATE_EMPLOYEE_RESET, EDUCATION_CREATE_RESET, EDUCATION_DETAILS_EMPLOYEE_RESET, EDUCATION_UPDATE_RESET } from '../constants/educationConstants'\r\nimport { createEducation, createEducationEmpId, getEducationDetailsEmpId, updateEducation } from '../actions/educationActions'\r\nimport '../styles/FixedNavbar.css';\r\nimport AdminHeader from '../components/AdminHeader';\r\nimport '../styles/ProfileScreen.css';\r\n\r\nconst AdminEducationScreen = ({ history, match }) => {\r\n    const userId = match.params.id\r\n\r\n    const [institutionAttended, setInstitutionAttended] = useState('')\r\n    const [courseOfStudy, setCourseOfStudy] = useState('')\r\n    const [yearOfGraduation, setYearOfGraduation] = useState('')\r\n    const [professionalMembership, setProfessionalMembership] = useState('')\r\n\r\n    const [message, setMessage] = useState(null)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const educationDetailsEmpId = useSelector(state => state.educationDetailsEmpId)\r\n    const { loading, error, education } = educationDetailsEmpId\r\n\r\n    const educationUpdate = useSelector(state => state.educationUpdate)\r\n    const { success:successUpdate } = educationUpdate\r\n\r\n    const educationCreateEmpId = useSelector(state => state.educationCreateEmpId)\r\n    const { success:successCreate } = educationCreateEmpId\r\n    \r\n  \r\n\r\n    useEffect(() => {\r\n\r\n        if(userInfo  && (userInfo.role === 'hr' || userInfo.role === 'hr-manager' || userInfo.role === 'admin')) {\r\n            \r\n            if(successUpdate || successCreate) {\r\n                dispatch({\r\n                    type: EDUCATION_UPDATE_RESET\r\n                })\r\n                dispatch({\r\n                    type: EDUCATION_DETAILS_EMPLOYEE_RESET\r\n                })\r\n                dispatch({\r\n                    type: EDUCATION_CREATE_EMPLOYEE_RESET\r\n                })\r\n                history.push('/home')\r\n            } else {\r\n            if(!education || education.employee  !== userId) {\r\n                dispatch(getEducationDetailsEmpId(userId))\r\n            } else {\r\n                setInstitutionAttended(education.institutionAttended)\r\n                setCourseOfStudy(education.courseOfStudy)\r\n                setProfessionalMembership(education.professionalMembership)\r\n                setYearOfGraduation(education.yearOfGraduation)\r\n            }\r\n        }\r\n        } else {\r\n            history.push('/')\r\n    }\r\n    }, [dispatch, history, education, userId, successCreate, successUpdate, userInfo])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateEducation({\r\n            _id: education._id,\r\n            institutionAttended,\r\n            courseOfStudy,\r\n            professionalMembership,\r\n            yearOfGraduation\r\n        }))\r\n       \r\n    }\r\n\r\n    const createsubmitHandler= (e) => {\r\n        e.preventDefault()\r\n        dispatch(createEducationEmpId({\r\n            employee: userId,\r\n           institutionAttended,\r\n           courseOfStudy,\r\n           professionalMembership,\r\n           yearOfGraduation\r\n        }))\r\n       \r\n    }\r\n\r\n    return (\r\n        <>\r\n         \r\n        <Row className='ml-4 mr-4 py-4 profilescreen-wrapper'>\r\n                <Col md={3} className='d-none d-md-block'>\r\n        <div className=\"fixednavbar-wrapper\">\r\n            <div className='employee-details'>\r\n                <p>{userInfo.role}</p>\r\n                <p>{userInfo.email}</p>\r\n            </div>\r\n        <Nav className=\"flex-column\">\r\n        <NavLink to='/admin/userlist' exact className=\"nav-link\" activeClassName='active-here'>\r\n          <i class=\"fas fa-home pr-3\"></i>\r\n          All Employees\r\n        </NavLink>\r\n        <NavLink to={`/admin/user/${userId}/edit`} exact className=\"nav-link\" activeClassName='active-here'>\r\n          <i class=\"far fa-id-card pr-3\"></i>\r\n          Details\r\n        </NavLink>\r\n        <NavLink to={`/admin/profile/${userId}/edit`} exact className=\"nav-link\" activeClassName='active-here'>\r\n          <i class=\"fas fa-user-circle pr-3\"></i>\r\n          Profile\r\n        </NavLink>\r\n        <NavLink to={`/admin/education/${userId}/edit`} exact className=\"nav-link\" activeClassName='active-here'>\r\n          <i class=\"fas fa-user-friends pr-3\"></i>\r\n          Education\r\n        </NavLink>\r\n        <NavLink to={`/admin/nextofkin/${userId}/edit`} exact className=\"nav-link\" activeClassName='active-here'>\r\n          <i class=\"fas fa-graduation-cap pr-3\"></i>\r\n          Employee Next Of Kin\r\n        </NavLink>\r\n        </Nav>\r\n        </div>\r\n        </Col>\r\n\r\n        <Col className='col-xs-12 col-md-8'>\r\n                <AdminHeader\r\n                    userId\r\n                />\r\n                <h1 className='page-header'>Education</h1>\r\n               \r\n               \r\n                {successUpdate && <Message variant='success'>Profile Updated</Message>}\r\n                {loading && <Loader />}\r\n                {\r\n                    education ? (\r\n                        <Form onSubmit={submitHandler}>\r\n                        <Form.Row>\r\n                            <Form.Group  className=\"col-md-6\" controlId='institutionAttended'>\r\n                                <Form.Label>Institution Attended</Form.Label>\r\n                                <Form.Control \r\n                                type='institutionAttended' \r\n                            \r\n                                placeholder='Enter Institution Attended'\r\n                                value={institutionAttended}\r\n                                onChange={(e) => setInstitutionAttended(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group  className=\"col-md-6\" controlId='courseOfStudy'>\r\n                                <Form.Label>Course Of Study</Form.Label>\r\n                                <Form.Control \r\n                                type='courseOfStudy' \r\n                                \r\n                                placeholder='Enter Course Of Study'\r\n                                value={courseOfStudy}\r\n                                onChange={(e) => setCourseOfStudy(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                            \r\n                            \r\n                    \r\n                            \r\n                        </Form.Row>\r\n                        <Form.Row>\r\n                            <Form.Group  className=\"col-md-6\" controlId='professionalMembership'>\r\n                                <Form.Label>Professional Membership</Form.Label>\r\n                                <Form.Control \r\n                                type='professionalMembership' \r\n                                \r\n                                placeholder='Enter Professional Membership'\r\n                                value={professionalMembership}\r\n                                onChange={(e) => setProfessionalMembership(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group  className=\"col-md-6\" controlId='yearOfGraduation'>\r\n                                <Form.Label>Year Of Graduation</Form.Label>\r\n                                <Form.Control \r\n                                type='date' \r\n                            \r\n                                placeholder='Enter Year Of Graduation'\r\n                                value={yearOfGraduation}\r\n                                onChange={(e) => setYearOfGraduation(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                        </Form.Row>\r\n                        \r\n                    \r\n                        <Button type='submit' variant='primary' className='btn-block'>\r\n                            Update\r\n                        </Button>\r\n                    </Form>\r\n                    ) : (\r\n                        <Form onSubmit={createsubmitHandler}>\r\n                        <Form.Row>\r\n                            <Form.Group  className=\"col-md-6\" controlId='institutionAttended'>\r\n                                <Form.Label>Institution Attended</Form.Label>\r\n                                <Form.Control \r\n                                type='institutionAttended' \r\n                            \r\n                                placeholder='Enter Institution ATtended'\r\n                                value={institutionAttended}\r\n                                onChange={(e) => setInstitutionAttended(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group  className=\"col-md-6\" controlId='courseOfStudy'>\r\n                                <Form.Label>Course Of Study</Form.Label>\r\n                                <Form.Control \r\n                                type='courseOfStudy' \r\n                                \r\n                                placeholder='Enter Course Of Study'\r\n                                value={courseOfStudy}\r\n                                onChange={(e) => setCourseOfStudy(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                            \r\n                            \r\n                    \r\n                            \r\n                        </Form.Row>\r\n                        <Form.Row>\r\n                            <Form.Group  className=\"col-md-6\" controlId='professionalMembership'>\r\n                                <Form.Label>Professional Membership</Form.Label>\r\n                                <Form.Control \r\n                                type='professionalMembership' \r\n                                \r\n                                placeholder='Enter Professional Membership'\r\n                                value={professionalMembership}\r\n                                onChange={(e) => setProfessionalMembership(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group  className=\"col-md-6\" controlId='yearOfGraduation'>\r\n                                <Form.Label>Year Of Graduation</Form.Label>\r\n                                <Form.Control \r\n                                type='date' \r\n                            \r\n                                placeholder='Enter Year Of Graduation'\r\n                                value={yearOfGraduation}\r\n                                onChange={(e) => setYearOfGraduation(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                        </Form.Row>\r\n                        \r\n                        \r\n                    \r\n                        <Button type='submit' variant='primary' className='btn-block'>\r\n                            Create\r\n                        </Button>\r\n                    </Form>\r\n                    )\r\n                }\r\n                \r\n            </Col>\r\n        </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AdminEducationScreen\r\n","C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-responsive\\src\\screens\\MyLeaveApplicationScreen.js",["224","225","226"],"import React, { useState, useEffect } from 'react'\r\nimport { Row, Col } from 'react-bootstrap'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FixedNavbar from '../components/FixedNavbar';\r\nimport Header from '../components/Header';\r\nimport MyLeave from '../components/MyLeave';\r\n\r\nconst MyLeaveApplicationScreen = ({ history }) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    useEffect(() => {\r\n\r\n        if(!userInfo) {\r\n            history.push('/')\r\n        } \r\n    }, [dispatch, history, userInfo])\r\n\r\n  return (\r\n    <>     \r\n    \t<Row className='ml-4 mr-4 py-4 profilescreen-wrapper'>\r\n\t\t\t\t<Col md={3} className='d-none d-md-block'>\r\n          <FixedNavbar />\r\n        </Col>\r\n        <Col className='col-xs-12 col-md-8'>\r\n          <Header />\r\n\t\t\t\t\t<h1 className='page-header'>MY LEAVE</h1>\r\n\t\t\t\t\t<hr />\r\n\t\t\t\t\t<div className='myleave-wrapper'>\r\n            <MyLeave />\r\n\t\t\t\t\t</div>\r\n      \t</Col>\r\n      </Row>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default MyLeaveApplicationScreen;","C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-responsive\\src\\constants\\nextOfKinConstants.js",[],"C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-responsive\\src\\constants\\profileConstants.js",[],"C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-responsive\\src\\constants\\educationConstants.js",[],"C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-responsive\\src\\constants\\userConstants.js",[],"C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-responsive\\src\\actions\\userActions.js",[],"C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-responsive\\src\\actions\\educationActions.js",[],"C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-responsive\\src\\actions\\nextOfKinActions.js",[],"C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-responsive\\src\\components\\Message.js",[],"C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-responsive\\src\\components\\Loader.js",[],"C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-responsive\\src\\components\\FixedNavbar.js",[],"C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-responsive\\src\\components\\Header.js",[],"C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-responsive\\src\\components\\SearchBox.js",[],"C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-responsive\\src\\components\\Paginate.js",[],"C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-responsive\\src\\components\\AdminHeader.js",[],"C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-responsive\\src\\components\\MyLeave.js",[],"C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-responsive\\src\\components\\AdminHeader2.js",[],"C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-responsive\\src\\actions\\profileActions.js",[],"C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-responsive\\src\\shared\\baseUrl.js",[],{"ruleId":"227","replacedBy":"228"},{"ruleId":"229","replacedBy":"230"},{"ruleId":"231","severity":1,"message":"232","line":49,"column":15,"nodeType":"233","endLine":49,"endColumn":36},{"ruleId":"231","severity":1,"message":"232","line":54,"column":15,"nodeType":"233","endLine":54,"endColumn":32},{"ruleId":"234","severity":1,"message":"235","line":2,"column":34,"nodeType":"236","messageId":"237","endLine":2,"endColumn":43},{"ruleId":"234","severity":1,"message":"238","line":3,"column":10,"nodeType":"236","messageId":"237","endLine":3,"endColumn":14},{"ruleId":"234","severity":1,"message":"239","line":5,"column":8,"nodeType":"236","messageId":"237","endLine":5,"endColumn":14},{"ruleId":"234","severity":1,"message":"240","line":34,"column":13,"nodeType":"236","messageId":"237","endLine":34,"endColumn":20},{"ruleId":"234","severity":1,"message":"235","line":2,"column":34,"nodeType":"236","messageId":"237","endLine":2,"endColumn":43},{"ruleId":"234","severity":1,"message":"238","line":3,"column":10,"nodeType":"236","messageId":"237","endLine":3,"endColumn":14},{"ruleId":"234","severity":1,"message":"238","line":2,"column":10,"nodeType":"236","messageId":"237","endLine":2,"endColumn":14},{"ruleId":"234","severity":1,"message":"235","line":3,"column":34,"nodeType":"236","messageId":"237","endLine":3,"endColumn":43},{"ruleId":"234","severity":1,"message":"238","line":2,"column":10,"nodeType":"236","messageId":"237","endLine":2,"endColumn":14},{"ruleId":"234","severity":1,"message":"238","line":2,"column":10,"nodeType":"236","messageId":"237","endLine":2,"endColumn":14},{"ruleId":"234","severity":1,"message":"235","line":3,"column":34,"nodeType":"236","messageId":"237","endLine":3,"endColumn":43},{"ruleId":"234","severity":1,"message":"241","line":22,"column":21,"nodeType":"236","messageId":"237","endLine":22,"endColumn":31},{"ruleId":"234","severity":1,"message":"238","line":2,"column":10,"nodeType":"236","messageId":"237","endLine":2,"endColumn":14},{"ruleId":"234","severity":1,"message":"235","line":3,"column":28,"nodeType":"236","messageId":"237","endLine":3,"endColumn":37},{"ruleId":"234","severity":1,"message":"238","line":2,"column":10,"nodeType":"236","messageId":"237","endLine":2,"endColumn":14},{"ruleId":"234","severity":1,"message":"235","line":3,"column":28,"nodeType":"236","messageId":"237","endLine":3,"endColumn":37},{"ruleId":"234","severity":1,"message":"238","line":2,"column":10,"nodeType":"236","messageId":"237","endLine":2,"endColumn":14},{"ruleId":"234","severity":1,"message":"235","line":3,"column":28,"nodeType":"236","messageId":"237","endLine":3,"endColumn":37},{"ruleId":"234","severity":1,"message":"238","line":3,"column":10,"nodeType":"236","messageId":"237","endLine":3,"endColumn":14},{"ruleId":"234","severity":1,"message":"235","line":5,"column":35,"nodeType":"236","messageId":"237","endLine":5,"endColumn":44},{"ruleId":"234","severity":1,"message":"238","line":2,"column":10,"nodeType":"236","messageId":"237","endLine":2,"endColumn":14},{"ruleId":"234","severity":1,"message":"235","line":3,"column":28,"nodeType":"236","messageId":"237","endLine":3,"endColumn":37},{"ruleId":"234","severity":1,"message":"242","line":40,"column":19,"nodeType":"236","messageId":"237","endLine":40,"endColumn":30},{"ruleId":"234","severity":1,"message":"243","line":43,"column":19,"nodeType":"236","messageId":"237","endLine":43,"endColumn":30},{"ruleId":"234","severity":1,"message":"238","line":2,"column":10,"nodeType":"236","messageId":"237","endLine":2,"endColumn":14},{"ruleId":"234","severity":1,"message":"244","line":7,"column":10,"nodeType":"236","messageId":"237","endLine":7,"endColumn":25},{"ruleId":"234","severity":1,"message":"242","line":32,"column":19,"nodeType":"236","messageId":"237","endLine":32,"endColumn":30},{"ruleId":"234","severity":1,"message":"243","line":35,"column":19,"nodeType":"236","messageId":"237","endLine":35,"endColumn":30},{"ruleId":"234","severity":1,"message":"245","line":2,"column":10,"nodeType":"236","messageId":"237","endLine":2,"endColumn":23},{"ruleId":"234","severity":1,"message":"246","line":4,"column":10,"nodeType":"236","messageId":"237","endLine":4,"endColumn":15},{"ruleId":"234","severity":1,"message":"247","line":8,"column":43,"nodeType":"236","messageId":"237","endLine":8,"endColumn":65},{"ruleId":"234","severity":1,"message":"248","line":9,"column":10,"nodeType":"236","messageId":"237","endLine":9,"endColumn":25},{"ruleId":"234","severity":1,"message":"249","line":22,"column":12,"nodeType":"236","messageId":"237","endLine":22,"endColumn":19},{"ruleId":"234","severity":1,"message":"241","line":22,"column":21,"nodeType":"236","messageId":"237","endLine":22,"endColumn":31},{"ruleId":"234","severity":1,"message":"250","line":30,"column":22,"nodeType":"236","messageId":"237","endLine":30,"endColumn":27},{"ruleId":"234","severity":1,"message":"251","line":1,"column":17,"nodeType":"236","messageId":"237","endLine":1,"endColumn":25},{"ruleId":"234","severity":1,"message":"252","line":3,"column":8,"nodeType":"236","messageId":"237","endLine":3,"endColumn":15},{"ruleId":"234","severity":1,"message":"239","line":4,"column":8,"nodeType":"236","messageId":"237","endLine":4,"endColumn":14},"no-native-reassign",["253"],"no-negated-in-lhs",["254"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'ListGroup' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'Loader' is defined but never used.","'loading' is assigned a value but never used.","'setMessage' is assigned a value but never used.","'errorUpdate' is assigned a value but never used.","'errorCreate' is assigned a value but never used.","'createNextOfKin' is defined but never used.","'LinkContainer' is defined but never used.","'Table' is defined but never used.","'EDUCATION_CREATE_RESET' is defined but never used.","'createEducation' is defined but never used.","'message' is assigned a value but never used.","'error' is assigned a value but never used.","'useState' is defined but never used.","'Message' is defined but never used.","no-global-assign","no-unsafe-negation"]
master